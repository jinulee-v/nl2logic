{"id": "prontoqa_validation_0", "nl": "Each wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "all x.(Wumpus(x) -> Sterus(x))", "all x.(Wumpus(x) -> Steroid(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Steerpus(x))", "all x.(Wumpus(x) -> sterpus(x))", "all x.((Wumpus(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterotus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Contains(x,y))", "all x y.((Wumpus(x) & Sterpus(y)) -> Has(x,y))", "all x y.((Wumpus(x) & Sterpus(y)) -> HasSterpus(x,y))"]}
{"id": "prontoqa_validation_1", "nl": "Polly is a jompus and Polly is not a sterpus and Polly is a dumpus.", "fol": "(jompus(Polly) & -sterpus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterepus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y))) & all z.(Polly(z) -> Dumpus(z))))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y))) & all z.(Polly(z) -> Dumpus(z)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y))) & all z.(Polly(z) -> Dumpus(z)))", "(all x.(Poly(x) -> Jompus(x)) & (Poly(x) -> -Sterpus(x)) & (Poly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterepus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y))) & all z.(Polly(z) -> Dumpus(z)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y))) & all z.(Polly(z) -> Dumpus(z))))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Sterpus(y) & Dumpus(y)))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y)) & all z.(Polly(z) -> Dumpus(z))))", "(all x.(Polly(x) -> Jompus(x)) & all y.(Polly(y) -> -Sterpus(y))) & all z.(Polly(z) -> Dumpus(z))))"]}
{"id": "prontoqa_validation_2", "nl": "Polly is not a wumpus.", "fol": "-wumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Wumpus(x))", "all x.((Polly(x) & -Wumpus(x)) -> -Wumpus(x))", "(-Wumpus(Polly))", "all x.(Wumpus(x) -> -Wumpus(x))", "all x.(Polly(x) -> -Wumpus(x))", "All x.(Polly(x) -> -Wumpus(x))", "exists x.(Polly(x) & -Wumpus(x))", "all x.(Polly(x) -> -Wumpus(x))", "all x.(Poly(x) -> -Wumpus(x))", "(Wumpus(Polly) & -Wumpus(Polly))", "all x.(Wumpus(x) -> Polly(x))", "all x.(Polly(x) -> -Wumpus(x))", "all x.(Wumpus(x) -> -Wumpus(x))", "-Wumpus(Polly)", "Polly is not a wumpus.", "(Wumpus(Polly) & -Wumpus(Poly))"]}
{"id": "prontoqa_validation_3", "nl": "Rompuses are lempuses.", "fol": "all x. (rompus(x) -> lempus(x))", "prediction": ["all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "all x y.((Rompus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Ropus(x) -> Lempuse(x))", "all x.(Rompuse(x) -> Lempuse(x))", "all x.(Rompuse(x) -> Lempuse(x))", "all x.(Romulus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x y.((Rompus(x) & Lempuse(y)) -> Lempuse(x,y))", "all x.(Romose(x) -> Lempuse(x))", "all x y.((Rompus(x) & Lempuse(y)) -> Lempus(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Romese(x) -> Lempuse(x))", "all x.(Rospus(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_4", "nl": "Rex is a lorpus and Rex is not a lempus and Rex is a numpus.", "fol": "(lorpus(Rex) & -lempus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x))))", "all x y z.((Rex(x) & Lorpus(x) & Lempus(y) & Numpus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> -Lempus(y)) & all z.(Rex(z) -> Numpus(z))))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> -Lempus(y))) & all z.(Rex(z) -> Numpus(z))))", "(all x.(Rex(x) -> Lorpus(x)) & all y.(Rex(y) -> -Lempus(y))) & all z.(Rex(z) -> Numpus(z)))", "all x y z.((Lorpus(x) & Lempus(y) & Numpus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> Llorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> Loomis(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z) & Numpus(x)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(z) & Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z) & Numpus(x)) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))", "(all x.(Rex(x) -> Llorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x))))"]}
{"id": "prontoqa_validation_5", "nl": "Rex is not a rompus.", "fol": "-rompus(Rex)", "prediction": ["all x.(Rex(x) -> -Rompus(x))", "All x.(Rex(x) -> -Rompus(x))", "(-Rompus(Rex))", "all x.(Rompus(x) -> -Rompus(x))", "(Rompus(Rex) & -Rompus(Rex))", "-Rompus(Rex)", "Rex is not a rompus.", "all x.(Rex(x) -> -rompus(x))", "Rex is not a Rompus.", "Rex.(Rompus(x) -> -Rompus(x))", "all x.(Rex(x) -> -Rompus(x))", "(-Rompus(Rex) & -Rompus(Rex))", "all x.(Rex(x) -> -Romesh(x))", "Rex.(Rompus(x) & -Rompus(x))", "all x.(Rex(x) -> -Rompus(x))", "All x.(Rex(x) -> -Rompus(x))"]}
{"id": "prontoqa_validation_6", "nl": "Numpuses are impuses.", "fol": "all x. (numpus(x) -> impus(x))", "prediction": ["all x.(Numpus(x) -> Issue(x))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Issues(x))", "all x y.((Numpus(x) & Issue(y)) -> Issue(x,y))", "all x y.((Numpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Numpus(x) -> Impossible(x))", "all x.(Numpuse(x) -> Issues(x))", "all x.(Numpuse(x) -> Impossible(x))", "all x.(Numpus(x) -> Impermissible(x))", "all x.(Numpuse(x) -> Impermissible(x))", "all x.(Numpus(x) -> Isolated(x))", "all x.(Numpus(x) -> Imperium(x))", "all x.(Numpuse(x) -> Isolated(x))", "all x.(Numpus(x) -> Impose(x))", "all x y.((Numpus(x) & Issue(y)) -> Issue(x))", "all x y.((Numpuse(x) & Issue(y)) -> Issue(x))"]}
{"id": "prontoqa_validation_7", "nl": "Wren is not an impus and Wren is a tumpus and Wren is a wumpus.", "fol": "(-impus(Wren) & tumpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> -Impossible(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)))", "all x y.((Wren(x) & Wren(y)) -> (-Impossible(x) & Tumpus(y) & Wumpus(y)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Wren(x) -> -Impossible(x)) & all y.((Wren(y) & Tumpus(y))) -> Wumpus(y)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Wren(x) -> -Impossible(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> Wumpus(z))))", "(all x.(Wren(x) -> -Impossible(x)) & ((Wren(x) & Tumpus(x)) | (Wren(x) & Tumpus(x)))))", "all x y.((Wren(x) & Wren(y)) -> (-Impossible(x) & Tumpus(y) & Wumpus(y)))", "(all x.(Wren(x) -> -Impossible(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x))))", "(all x.(Wren(x) -> -Impossible(x)) & (Tumpus(x) | Wumpus(x))))"]}
{"id": "prontoqa_validation_8", "nl": "Wren is not a numpus.", "fol": "-numpus(Wren)", "prediction": ["all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -numpus(x))", "all x.(Wren(x) -> -Nompus(x))", "All x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Number(x))", "All x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "exists x.(Wren(x) & -Numpus(x))", "(-numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))", "all x.(Wren(x) -> -Numpus(x))", "exists x.(Wren(x) & -Numpus(x))", "all x.(Wren(x) -> -Numerus(x))", "(-Numpus(Wren))", "all x.(Wren(x) -> -Nomus(x))"]}
{"id": "prontoqa_validation_9", "nl": "Each tumpus is a shumpus.", "fol": "all x. (tumpus(x) -> shumpus(x))", "prediction": ["all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "exists x.(Tumpus(x) & Humpus(x))", "all x y.((Tumpus(x) & Humpus(y)) -> Is(x,y))", "all x y.((Tumpus(x) & Humpus(y)) -> Shumpus(x))", "all x y.((Tumpus(x) & Humpus(y)) -> HasShumpus(x,y))", "all x y.((Tumpus(x) & Shumpus(y)) -> Is(x,y))", "all x y.((Tumpus(x) & Shumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x y.((Tumpus(x) & Shumpus(y)) -> HasShumpus(x,y))", "all x y.((Tumpus(x) & Humpus(y)) -> HasShumpus(x))", "all x.(Tumpus(x) -> Scumpus(x))", "(all x.(Tumpus(x) -> Humpus(x)))", "all x.(Tumpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_validation_10", "nl": "Max is not a shumpus, Max is a zumpus, and Max is a jompus.", "fol": "(-shumpus(Max) & zumpus(Max) & jompus(Max))", "prediction": ["(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z)))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x))))", "(all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> -Shumpus(x)) & ((Max(x) & Zumpus(x)) -> Jompus(x)))", "(all x y z.(Max(x) -> -Shumpus(x)) & (Max(y) -> Zumpus(y)) & (Max(z) -> Jompus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z)) -> Jompus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z))) -> Jompus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z))) -> Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y))) & all z.(Max(z) -> Jompus(z)))", "(exists x.(Max(x) & -Shumpus(x)) & exists y.(Max(y) & Zumpus(y)) & exists z.(Max(z) & Jompus(z))))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y))) & all z.(Max(z) -> Jompus(z))))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & Zumpus(y) & Jompus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z)) -> Jompus(x)))", "all x.((Max(x) & -Shumpus(x)) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "(all x.((Max(x) & -Shumpus(x)) -> Zumpus(x)) & all y.((Max(y) & Jompus(y)) -> -Shumpus(y)))"]}
{"id": "prontoqa_validation_11", "nl": "Max is not a tumpus.", "fol": "-tumpus(Max)", "prediction": ["all x.(Max(x) -> -Tumpus(x))", "(-Tumpus(Max))", "-Tumpus(Max)", "All x.(Max(x) -> -Tumpus(x))", "ALL x.(Max(x) -> -Tumpus(x))", "all x.(Max(x) -> -Tompus(x))", "all x.(Max(x) -> -Tumpus(x))", "(-Tumpus(Max) & -Tumpus(Max))", "(-Tumpus(Max) -> -Tumpus(Max))", "all x.(Max(x) & -Tumpus(x))", "(-Tumpus(Max) -> -Tumpus(Max))", "All x.(Max(x) -> -Tumpus(x))", "All x.(Max(x) -> -Tompus(x))", "Max is notTumpus(Max)", "all x.(Max(x) -> (-Tumpus(x)))", "all x.(Max(x) -> NoTumpus(x))"]}
{"id": "prontoqa_validation_12", "nl": "Each tumpus is a brimpus.", "fol": "all x. (tumpus(x) -> brimpus(x))", "prediction": ["all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Has(x,y))", "exists x.(Tumpus(x) & Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Brumpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> HasTumpus(x,y))", "all x.(Tumpus(x) -> Birmpus(x))", "all x.(Tompus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brumpus(x))", "(all x.(Tumpus(x) -> Brimpus(x)))", "all x y.((Tumpus(x) & Brimpus(y)) -> HasBrimpus(x,y))", "all x.(Tumpus(x) -> Brampus(x))", "all x.((Tumpus(x) & Brimpus(x)) -> HasTumpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Contains(x,y))", "all x.(Tumpus(x) -> Burmpus(x))"]}
{"id": "prontoqa_validation_13", "nl": "Max is a lorpus and Max is an impus and Max is not a brimpus.", "fol": "(lorpus(Max) & impus(Max) & -brimpus(Max))", "prediction": ["(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Issue(y))) & all z.(Max(z) -> -Brimpus(z))))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Impossible(y))) & all z.(Max(z) -> -Brimpus(z)))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Impossible(x)) & (Max(x) -> -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Impossible(y))) & all z.(Max(z) -> -Brimpus(z))))", "all x y z.((Max(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) & Impossible(x) & -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Issue(y)) & all z.(Max(z) -> -Brimpus(z))))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Issue(x)) & (Max(x) -> -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Imperator(y))) & all z.(Max(z) -> -Brimpus(z))))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Issue(y))) & all z.(Max(z) -> -Brimpus(z)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Imperator(y))) & all z.(Max(z) -> -Brimpus(z)))", "all x y z.((Max(x) & Lorpus(x) & Impossible(y) & -Brimpus(z)) -> (Lorpus(x) & Impossible(y) & -Brimpus(z)))", "all x y z.((Max(x) & Lorpus(x) & Impossible(y) & Brimpus(z)) -> (Lorpus(x) & Impossible(y) & -Brimpus(z)))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Issue(x)) & (Max(x) -> -Brimpus(x))))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Impossible(y)) & all z.(Max(z) -> -Brimpus(z))))", "all x y z.((Max(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) & Impossible(z) & -Brimpus(z)))"]}
{"id": "prontoqa_validation_14", "nl": "Zumpuses are vumpuses.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpuse(x))", "all x.(Zumpus(x) -> Vulpuse(x))", "all x.(Zumpus(x) -> Vulpe(x))", "all x.(Zumpus(x) -> Vulpus(x))", "all x y.((Zumpus(x) & Vampus(y)) -> Vampus(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zombie(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vulpus(x))", "all x.(Zumpuse(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vulpuse(x))", "all x.(Zimpus(x) -> Vampuse(x))", "all x y.((Zumpus(x) & Vampus(y)) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_validation_15", "nl": "Polly is a lorpus, Polly is a lempus, and Polly is not a vumpus.", "fol": "(lorpus(Polly) & lempus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Poly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vimpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> -Vumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & Lempus(x) & -Vumpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Lempus(y) & -Vumpus(z)) -> (Lorpus(x) & Lempus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> Llorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x y z.(Polly(x) -> Lorpus(x)) & (Polly(y) -> Lempus(y)) & (Polly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> -Vumpus(x))))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & Lempus(x) & -Vumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & Lempus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> Llorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))"]}
{"id": "prontoqa_validation_16", "nl": "Polly is not a zumpus.", "fol": "-zumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Zumpus(x))", "all x.(Polly(x) -> -Tompus(x))", "all x.((Polly(x) & -Zumpus(x)) -> -Tompus(x))", "All x.(Polly(x) -> -Zumpus(x))", "all x.((Polly(x) & -Zumpus(x)) -> -Zumpus(x))", "all x.(Polly(x) -> -Zombipus(x))", "(-Zumpus(Polly))", "all x.(Polly(x) -> -Zumpus(x))", "all x.(Polly(x) -> -Zumpus(x))", "exists x.(Polly(x) & -Zumpus(x))", "all x.(Poly(x) -> -Zumpus(x))", "all x.(Polly(x) -> -Zombies(x))", "all x.(Polly(x) -> -Zombie(x))", "all x.(Polly(x) -> -Zombia(x))", "all x.(Polly(x) -> -Zombius(x))", "all x.(Polly(x) -> -Zimpus(x))"]}
{"id": "prontoqa_validation_17", "nl": "Brimpuses are grimpuses.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpuse(x))", "all x.(Brimpuse(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpus(x))", "all x.(Birmpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brombuse(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Gruppus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brompus(x) -> Gruppus(x))", "all x y.((Brompus(x) & Grimpus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_18", "nl": "Max is a numpus, Max is a zumpus, and Max is not a grimpus.", "fol": "(numpus(Max) & zumpus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x y z.(Max(x) -> Numpus(x)) & (Max(y) -> Zumpus(y)) & (Max(z) -> -Grimpus(z)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x))))", "(all x y z.(Max(x) -> Numpus(x)) & (Max(y) -> Zumpus(y)) & (Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Grampus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grampus(z))))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & -Grampus(y)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grampus(x)))", "(All x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Number(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x) -> Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grippus(z))))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimppus(z))))"]}
{"id": "prontoqa_validation_19", "nl": "Max is not a brimpus.", "fol": "-brimpus(Max)", "prediction": ["all x.(Max(x) -> -Brimpus(x))", "all x.(Max(x) -> -Brumpus(x))", "All x.(Max(x) -> -Brimpus(x))", "-Brimpus(Max)", "(-Brimpus(Max))", "all x.(Max(x) -> -Brompus(x))", "All x.(Max(x) -> -Brumpus(x))", "all x.(Max(x) -> -Brimpus(x))", "-(Max(Max) & Brimpus(Max))", "all x.(Max(x) -> -Bimpus(x))", "all x.(Max(x) -> -Brimpus(x))", "All x.(Max(x) -> -Brompus(x))", "all x.(Max(x) -> -Brampus(x))", "all x.(Max(x) -> -brimpus(x))", "all x.(Max(x) -> -Blumpus(x))", "all x.(Max(x) -> -Brumpus(x))"]}
{"id": "prontoqa_validation_20", "nl": "Every sterpus is a vumpus.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterepus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vulmpus(x))", "all x.(Sterpus(x) -> Voompus(x))", "all x.(Streep(x) -> Vumpus(x))", "all x.(Starpus(x) -> Vumpus(x))", "all x.(Strohpus(x) -> Vumpus(x))", "all x.(Sternpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vuze(x))"]}
{"id": "prontoqa_validation_21", "nl": "Rex is a zumpus and Rex is an impus and Rex is not a vumpus.", "fol": "(zumpus(Rex) & impus(Rex) & -vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y))) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Impossible(y))) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Imperator(y))) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Impossible(y))) & all z.(Rex(z) -> -Vumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y)) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Issue(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Impossible(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Imperative(y))) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issuel(y))) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Imperator(x)) & (Rex(x) -> -Vumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Imperator(y))) & all z.(Rex(z) -> -Vumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Imperator(y)) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y))) & all z.(Rex(z) -> -Vumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y))) & all z.(Rex(z) -> -Vimpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y))) & all z.(Rex(z) -> -Vumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Issue(x)) & (Rex(x) -> -Vumpus(x))))"]}
{"id": "prontoqa_validation_22", "nl": "Rex is not a sterpus.", "fol": "-sterpus(Rex)", "prediction": ["all x.(Rex(x) -> -Sterpus(x))", "all x.(Rex(x) -> -Sterepus(x))", "All x.(Rex(x) -> -Sterpus(x))", "(-Sterpus(Rex))", "All x.(Rex(x) -> -Sterepus(x))", "Rex is not sterpus.", "all x.(Rex(x) -> -Sterpus(x))", "all x.(Rex(x) -> -Steerpus(x))", "all x.(Rex(x) -> -Sterpus(x))", "all x.(Rex(x) -> -Sterpus(x))", "-Sterpus(Rex)", "(-Sterpus(Rex) & -Sterpus(Rex))", "all x.(Rex(x) -> -Sterus(x))", "all x.(Rex(x) -> -Sternpus(x))", "all x.(Rex(x) -> -Streep(x))", "All x.(Rex(x) -> -Sterpus(x))"]}
{"id": "prontoqa_validation_23", "nl": "Every jompus is a dumpus.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jompus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jumpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "exists x.(Jompus(x) & Dumpus(x))", "all x y.((Jompus(x) & Dumpus(y)) -> Has(x,y))", "all x y.((Jompus(x) & Dumpus(y)) -> Is(x,y))", "all x.(Jampus(x) -> Dumpus(x))", "all x.(Jomess(x) -> Dumpus(x))", "all x.(Jomes(x) -> Dumpus(x))", "all x y.((Jompus(x) & Dumpus(y)) -> Dumpus(x))", "all x.(Joompus(x) -> Dumpus(x))", "(all x.(Jompus(x) -> Dumpus(x))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jomesu(x) -> Dumpus(x))", "(all x.(Jompus(x) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_24", "nl": "Polly is a lempus, Polly is not a dumpus, and Polly is a wumpus.", "fol": "(lempus(Polly) & -dumpus(Polly) & wumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z))))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x))))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y)) & all z.(Polly(z) -> Wumpus(z))))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x y z.(Polly(x) -> Lempus(x)) & (Polly(y) -> -Dumpus(y)) & (Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Poly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x))) & (Polly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Poly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Poly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Poly(x) -> -Dumpus(x)) & (Poly(x) -> Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumps(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Lempus(y) & Dumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))"]}
{"id": "prontoqa_validation_25", "nl": "Polly is not a jompus.", "fol": "-jompus(Polly)", "prediction": ["all x.(Polly(x) -> -Jompus(x))", "all x.(Polly(x) -> -Jimpus(x))", "all x.((Polly(x) & -Jompus(x)) -> -Jompus(x))", "all x.(Polly(x) -> -Jompus(x))", "all x.(Polly(x) -> -Jumpus(x))", "all x.((Polly(x) & -Jimpus(x)) -> -Jimpus(x))", "all x.((Polly(x) & -Jompus(x)) -> -Jimpus(x))", "all x.(Polly(x) -> -Jimpus(x))", "All x.(Polly(x) -> -Jompus(x))", "(-Jompus(Polly))", "all x.(Ploy(x) -> -Jompus(x))", "all x.(Polly(x) -> -Jompus(x))", "exists x.(Polly(x) & -Jompus(x))", "all x.(Polly(x) -> -Jampus(x))", "all x.(Polly(x) -> -Jumpus(x))", "all x.((Polly(x) & -Jompus(x)) -> -Jumpus(x))"]}
{"id": "prontoqa_validation_26", "nl": "Every impus is a numpus.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impossible(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "all x.(Implementation(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Improve(x) -> Numpus(x))", "all x.(Impedus(x) -> Numpus(x))", "all x.(Impediment(x) -> Numpus(x))", "all x.(Impossible(x) -> Number(x))", "all x.(Improvement(x) -> Numpus(x))", "all x.(Issue(x) -> Number(x))", "all x.(Implement(x) -> Numpus(x))", "all x.(Is(x) -> Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "all x.(Immersion(x) -> Numpus(x))", "all x.(Impact(x) -> Number(x))"]}
{"id": "prontoqa_validation_27", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a yumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))", "all x y z.((Polly(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) & -Numpus(y) & -Yumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Numpus(y))) & all z.(Polly(z) -> Yumpus(z)))", "(all x.(Lorpus(x) -> Polly)) & (Nompus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))", "all x y z.((Polly(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) & -Numpus(y) & -Yumpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Yampus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Yampus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Numpus(y))) & all z.(Polly(z) -> Yumpus(z))))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Nompus(y) & Yampus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Yumpus(z)))"]}
{"id": "prontoqa_validation_28", "nl": "Polly is not an impus.", "fol": "-impus(Polly)", "prediction": ["all x.(Polly(x) -> -Impossible(x))", "All x.(Polly(x) -> -Impossible(x))", "all x.(Polly(x) -> -Issue(x))", "All x.(Polly(x) -> -Issue(x))", "exists x.(Polly(x) & -Impossible(x))", "all x.(Polly(x) -> -Impossible(x))", "all x.(Polly(x) -> -Impossible(x))", "all x.(Poly(x) -> -Impossible(x))", "(-Impossible(Polly))", "exists x.(Polly(x) & -Issue(x))", "all x.(Polly(x) -> -Imperial(x))", "all x.(Polly(x) -> -Issue(x))", "all x.(Polly(x) -> -Imposer(x))", "all x.(Polly(x) -> -Impediment(x))", "All x.(Polly(x) -> -Imperial(x))", "all x.(Polly(x) -> -Immersion(x))"]}
{"id": "prontoqa_validation_29", "nl": "Alex is a lempus and Alex is a gorpus and Alex is not an impus.", "fol": "(lempus(Alex) & gorpus(Alex) & -impus(Alex))", "prediction": ["(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y))) & all z.(Alex(z) -> -Impossible(z))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y))) & all z.(Alex(z) -> -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Impossible(x))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Imperator(z)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> -Impossible(x))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y))) & all z.(Alex(z) -> -Impossible(z))))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Impossible(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impos(z))))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Gorpus(y))) & all z.(Alexa(z) -> -Impossible(z))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y))) & all z.(Alex(z) -> -Impos(z))))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Gorpus(y)) & all z.(Alexa(z) -> -Impossible(z))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Imperator(z)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))"]}
{"id": "prontoqa_validation_30", "nl": "Alex is not a numpus.", "fol": "-numpus(Alex)", "prediction": ["all x.(Alex(x) -> -Numpus(x))", "all x.(Alex(x) -> -Numpus(x))", "all x.(Alex(x) -> -Nompus(x))", "all x.(Alex(x) -> -numpus(x))", "All x.(Alex(x) -> -Numpus(x))", "All x.(Alex(x) -> -Numpus(x))", "Alex is not a Numpus.", "all x.(Alex(x) -> -Number(x))", "Alex is not a Numpus(Alex)", "all x.(Alex(x) -> -Numpus(x))", "All x.(Alex(x) -> -Nompus(x))", "all x.(Alex(x) -> -Numerus(x))", "all x.(Alex(x) -> -Numptus(x))", "All x.(Alex(x) -> -numpus(x))", "all x.(Alex(x) -> -Nomus(x))", "all x.(Alex(x) & -Numpus(x))"]}
{"id": "prontoqa_validation_31", "nl": "Every brimpus is a yumpus.", "fol": "all x. (brimpus(x) -> yumpus(x))", "prediction": ["all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yampus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpa(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yumpa(x))", "all x.(Brumpus(x) -> Yumps(x))", "all x.(Blumpus(x) -> Yumpus(x))", "all x.(Brompus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpsum(x))", "all x.(Brimpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_32", "nl": "Sam is not a yumpus, Sam is a shumpus, and Sam is a sterpus.", "fol": "(-yumpus(Sam) & shumpus(Sam) & sterpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Shumpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> -Sampus(y))) & all z.(Sterpus(z) -> -Yumpus(z)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(y) & -Sterpus(z)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterepus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> -Sampus(y))) & all z.(Sterpus(z) -> -Yumpus(z))))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(y) & Sterpus(z)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x))))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(x) & Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> -Sampus(y))) & all z.(Sterpus(z) -> Sterpus(z)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> -Yumpus(y))) & all z.(Sterpus(z) -> Sterpus(z)))", "(all x.(Yumpus(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> -Yumpus(y))) & all z.(Sterpus(z) -> -Yumpus(z))))", "all x.((Sam(x) & -Yumpus(x)) -> (Shumpus(x) & Sterpus(x)))", "all x y z.((Sam(x) & Yampus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(y) & -Sterpus(z)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(x) & -Sterpus(x)))"]}
{"id": "prontoqa_validation_33", "nl": "Sam is not a brimpus.", "fol": "-brimpus(Sam)", "prediction": ["all x.(Sam(x) -> -Brimpus(x))", "all x.(Sam(x) -> -Brumpus(x))", "all x.((Sam(x) & -Brimpus(x)) -> -Brimpus(x))", "all x.((Sam(x) & -Brumpus(x)) -> -Brimpus(x))", "all x.(Sam(x) -> -Brompus(x))", "all x.((Sam(x) & -Brimpus(x)) -> -Brumpus(x))", "all x.((Sam(x) & -Brumpus(x)) -> -Brumpus(x))", "all x.((Sam(x) & -Brimpus(x)) -> -Brompus(x))", "All x.(Sam(x) -> -Brimpus(x))", "(-Brimpus(Sam))", "all x.((Sam(x) & -Brimpus(x)) -> -Sam(x))", "exists x.(Sam(x) & -Brimpus(x))", "all x.((Sam(x) & -Brumpus(x)) -> -Brompus(x))", "all x.(Sam(x) -> -Brimpus(x))", "all x.((Sam(x) & -Brumpus(x)) -> -Sam(x))", "all x.(Sam(x) -> -Brimpus(x))"]}
{"id": "prontoqa_validation_34", "nl": "Each shumpus is a sterpus.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterepus(x))", "all x.(Shumpus(x) -> Sterus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Steroid(x))", "all x y.((Shumpus(x) & Sterpus(y)) -> Sterpus(x))", "exists x.(Shumpus(x) & Sterpus(x))", "all x.(Shumpus(x) -> sterpus(x))", "all x y.((Shumpus(x) & Sterpus(y)) -> Is(x,y))", "all x.((Shumpus(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Steerpus(x))", "all x.(Shumpus(x) -> Sterotus(x))", "all x y.((Shumpus(x) & Sterus(y)) -> Sterpus(x))", "all x y.((Shumpus(x) & Sterpus(y)) -> Contains(x,y))", "all x y.((Shumpus(x) & Sterpus(y)) -> Sterpus(x,y))"]}
{"id": "prontoqa_validation_35", "nl": "Polly is a dumpus and Polly is a vumpus and Polly is not a sterpus.", "fol": "(dumpus(Polly) & vumpus(Polly) & -sterpus(Polly))", "prediction": ["(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & (Polly(x) -> -Sterpus(x)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & -Sterpus(x)))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterepus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y))) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Poly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y))) & all z.(Polly(z) -> -Sterpus(z)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & (Polly(x) -> -Sterpus(x)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & (Polly(x) -> -Sterpus(x))))", "(all x y z.(Polly(x) -> Dumpus(x)) & (Polly(y) -> Vumpus(y)) & (Polly(z) -> -Sterpus(z)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & (Polly(x) -> -Sterepus(x)))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Voompus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterepus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y))) & all z.(Polly(z) -> -Sterpus(z))))"]}
{"id": "prontoqa_validation_36", "nl": "Polly is not a shumpus.", "fol": "-shumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Shumpus(x))", "all x.((Polly(x) & -Shumpus(x)) -> -Shumpus(x))", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "all x.(Polly(x) -> -Shumpus(x))", "All x.(Polly(x) -> -Shumpus(x))", "exists x.(Polly(x) & -Shumpus(x))", "all x.(Poly(x) -> -Shumpus(x))", "all x.(Shumpus(x) -> -Shumpus(x))", "all x.(Shumpus(x) -> Polly(x))", "all x.(Polly(x) -> -Shumpus(x))", "all x.((Polly(x) & -Shumpus(x)) -> -(Shumpus(x) & Polly(x)))", "all x.((Polly(x) & -Shumpus(x)) -> -(Shumpus(x) & -Shumpus(x)))", "all x.((Polly(x) & -Shumpus(x)) -> -(Shumpus(x) & Polly(x))))", "all x.((Polly(x) & -Shumpus(x)) -> -(Shumpus(x) | Shumpus(x))))", "all x.((Polly(x) & -Shumpus(x)) -> -(Shumpus(x) & -Shumpus(x))))"]}
{"id": "prontoqa_validation_37", "nl": "Grimpuses are vumpuses.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vulpe(x))", "all x.(Grimpus(x) -> Vulpuse(x))", "all x.(Grimpus(x) -> Vumpuse(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Vampus(x))", "all x.(Grimpus(x) -> Vulpus(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vulpus(x))", "all x.(Grimpus(x) -> Vampire(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Is(x,y))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grampus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Vampuse(x))"]}
{"id": "prontoqa_validation_38", "nl": "Wren is not a vumpus, Wren is a jompus, and Wren is a lorpus.", "fol": "(-vumpus(Wren) & jompus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x.(Wren(x) -> -Vumpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> Lorpus(x)))", "(all x.(Wren(x) -> -Vimpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & -Jompus(x) & -Lorpus(x)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y))) & all z.(Wren(z) -> Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & ((Wren(x) -> Jompus(x))) & ((Wren(x) -> Lorpus(x))))", "(all x.(Wren(x) -> -Vumpus(x)) & ((Wren(x) -> Jompus(x))) & ((Wren(x) -> Lorpus(x))))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & -Jompus(y) & -Lorpus(z)))", "(all x y z.((Wren(x) & Vumpus(y)) -> -Vumpus(x)) & ((Wren(z) & Jompus(z))) -> Lorpus(z)))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & Jompus(x) & Lorpus(x)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y))) & all z.(Wren(z) -> Lorpus(z)))", "(all x.(Wren(x) -> -Vimpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> Lorpus(x)))"]}
{"id": "prontoqa_validation_39", "nl": "Wren is not a grimpus.", "fol": "-grimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "All x.(Wren(x) -> -Grimpus(x))", "all x.((Wren(x) & -Grimpus(x)) -> -Grimpus(x))", "exists x.(Wren(x) & -Grimpus(x))", "(all x.(Wren(x) -> -Grimpus(x)))", "all x.(Wren(x) -> -Grimpus(x))", "all x.(Wren(x) -> -Grimppus(x))", "all x.(Wren(x) -> -Grippus(x))", "-Grimpus(Wren)", "all x.(Wren(x) & -Grimpus(x))", "all x.(Wren(x) -> -Gruppus(x))", "all x.(Wren(x) -> -Grampus(x))", "all x.(Wren(x) -> -Grisp(x))", "all x.(Wren(x) -> (-Grimpus(x)))", "all x.((Wren(x) & -Grimpus(x)) -> -Grampus(x))"]}
{"id": "prontoqa_validation_40", "nl": "Each grimpus is a tumpus.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grampus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "exists x.(Grimpus(x) & Tumpus(x))", "all x.(Grimpus(x) -> Totumpus(x))", "all x.(Sgrimpus(x) -> Tumpus(x))", "all x.(Rumpus(x) -> Tumpus(x))", "exists x.(Grimpus(x) & Tumpus(x))", "all x.(Grumps(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tump(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grampus(x) -> Tumulus(x))", "all x.(Tumpus(x) -> Grimpus(x))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x))"]}
{"id": "prontoqa_validation_41", "nl": "Stella is not a tumpus and Stella is a dumpus and Stella is a sterpus.", "fol": "(-tumpus(Stella) & dumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterpus(z)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> Sterpus(z))))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterpus(z))))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> Sterpus(z)))", "all x y z.((Stella(x) & Dumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Dumpus(y) & Sterpus(z)))", "all x y z.((Tumpus(x) & Dumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Dumpus(y) & Sterpus(z)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterepus(z)))", "all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> -Tumpus(x)) & ((Stella(x) & Sterpus(x)) -> Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x))))", "all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.((Stella(x) & -Tumpus(x)) -> Dumpus(x)) & all y.((Stella(y) & Sterpus(y)) -> Sterpus(y)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & all y.(Dumpus(y) -> Sterpus(y)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> Sterepus(z))))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(x) -> Sterpus(x)))"]}
{"id": "prontoqa_validation_42", "nl": "Stella is not a grimpus.", "fol": "-grimpus(Stella)", "prediction": ["all x.(Stella(x) -> -Grimpus(x))", "exists x.(Stella(x) & -Grimpus(x))", "Stella is notGrimpus(Stella)", "(-Grimpus(Stella))", "All x.(Stella(x) -> -Grimpus(x))", "Stella is not a Grimpus.", "Stella is not a Grimpus(Stella)", "all x.(Stella(x) -> -Grimpus(x))", "all x.(Stella(x) -> -Grippus(x))", "Stella -Grimpus(Stella))", "Stella is -Grimpus(Stella)", "all x.(Stella(x) -> -Grimpus(x))", "all x.(Stella(x) -> -Gruppus(x))", "(-Grimpus(Stella) & -Grimpus(Stella))", "all x.(Stella(x) -> -Grisp(x))", "all x.(Stella(x) -> -Grampus(x))"]}
{"id": "prontoqa_validation_43", "nl": "Lempuses are numpuses.", "fol": "all x. (lempus(x) -> numpus(x))", "prediction": ["all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lampuse(x) -> Numpuse(x))", "all x.(Lemme(x) -> Numpuse(x))", "all x y.((Lempuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x y.((Lempuse(x) & Numpuse(y)) -> Numpuse(x))", "all x.(Lemme(x) -> Numpus(x))", "all x.(Lempus(x) -> Numpus(x))", "all x y.((Lempuse(x) & Numpus(y)) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x y.((Lempuse(x) & Numpus(y)) -> Is(x,y))", "all x.(Lempus(x) -> Numpus(x))", "all x.(Lampuse(x) -> Numpus(x))", "all x y.((Lempuse(x) & Numpuse(y)) -> Is(x,y))", "all x y.((Lempuse(x) & Numpus(y)) -> Numpuse(x,y))"]}
{"id": "prontoqa_validation_44", "nl": "Rex is a shumpus, Rex is not a numpus, and Rex is a tumpus.", "fol": "(shumpus(Rex) & -numpus(Rex) & tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> -Numpus(y)) & all z.(Rex(z) -> Tumpus(z))))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x))))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> -Numpus(y)) & all z.(Rex(z) -> Tumpus(z))))", "(all x.(Rex(x) -> Humpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & all y.(Rex(y) -> -Numpus(y)) & all z.(Rex(z) -> Tumpus(z))))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> -Numpus(y))) & all z.(Rex(z) -> Tumpus(z)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Rex(y) -> -Numpus(y))) & all z.(Rex(z) -> Tumpus(z)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x))))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x))))"]}
{"id": "prontoqa_validation_45", "nl": "Rex is not a lempus.", "fol": "-lempus(Rex)", "prediction": ["all x.(Rex(x) -> -Lempus(x))", "All x.(Rex(x) -> -Lempus(x))", "all x.(Rex(x) -> -Limpus(x))", "(-Lempus(Rex))", "-Lempus(Rex)", "all x.(Rex(x) -> -Lempus(x))", "Rex is not a Lempus.", "Rex is not a lempus.", "All x.(Rex(x) -> -Limpus(x))", "all x.(Rex(x) -> -lempus(x))", "all x.(Rex(x) -> -Lampus(x))", "Rex is notLempus(Rex)", "all x.(Rex(x) -> -Limes(x))", "All x.(Rex(x) -> -Lempus(x))", "all x.(Rex(x) -> -Lempus(x))", "Rex is notLempus(x)"]}
{"id": "prontoqa_validation_46", "nl": "Each brimpus is a grimpus.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brompus(x) -> Grimpus(x))", "all x.(Blumpus(x) -> Grimpus(x))", "exists x.(Brimpus(x) & Grimpus(x))", "all x.(Brimpus(x) -> Grumpus(x))", "all x.(Brimpus(x) -> Gruppus(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Bimpus(x) -> Grimpus(x))", "all x.(Brampus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grumpus(x))", "all x.(Brumpus(x) -> Gruppus(x))", "all x.(Blimpus(x) -> Grimpus(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Has(x,y))"]}
{"id": "prontoqa_validation_47", "nl": "Max is a jompus and Max is a lempus and Max is not a grimpus.", "fol": "(jompus(Max) & lempus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x))))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y))) & all z.(Max(z) -> -Grimpus(z))))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & -Grimpus(z)) -> (Jompus(x) & Lempus(y) & -Grimpus(z)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y))) & all z.(Max(z) -> -Grimpus(z)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & -Max(x)))", "all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) & Lempus(z) & -Grimpus(z)))", "all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) & Lempus(z) & -Grimpus(x)))", "(all x y z.(Max(x) -> Jompus(x)) & (Max(y) -> Lempus(y)) & (Max(z) -> -Grimpus(z)))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & Gruppus(z)) -> (Jompus(x) & Lempus(y) & -Grimpus(z)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & -Max(x) -> Grimpus(x)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grampus(z))))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & -Grimpus(z)) -> (Jompus(x) & Lempus(y) & -Grampus(z)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimppus(z))))"]}
{"id": "prontoqa_validation_48", "nl": "Every tumpus is a gorpus.", "fol": "all x. (tumpus(x) -> gorpus(x))", "prediction": ["all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x y.((Tumpus(x) & Gorpus(y)) -> Is(x,y))", "exists x.(Tumpus(x) & Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> Is(x,y))", "all x y.((Tumpus(x) & Gorpus(y)) -> HasTumpus(x,y))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Tompus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> HasGorpus(x,y))", "exists x.(Tumpus(x) & Gorpus(x))", "all x.((Tumpus(x) & Gorpus(x)) -> HasTumpus(x))", "all x.(Tumpus(x) -> Gorp(x))"]}
{"id": "prontoqa_validation_49", "nl": "Sam is a zumpus, Sam is not a gorpus, and Sam is a wumpus.", "fol": "(zumpus(Sam) & -gorpus(Sam) & wumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> -Gorpus(y)) & all z.(Sam(z) -> Wumpus(z))))", "(all x.(Sam(x) -> Zumpus(x)) & all y.(Sam(y) -> -Gorpus(y)) & all z.(Sam(z) -> Wumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (-Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (-Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x))))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Sam(y) & Wumpus(y)))", "(all x y z.(Sam(x) -> Zumpus(x)) & (Sam(y) -> -Gorpus(y)) & (Sam(z) -> Wumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & ((Sam(x) -> -Gorpus(x))) & ((Sam(x) -> Wumpus(x))))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Sam(y) & Wumpus(z)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wompus(x)))", "all x.((Sam(x) & Zumpus(x)) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))"]}
{"id": "prontoqa_validation_50", "nl": "Sam is not a tumpus.", "fol": "-tumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Tumpus(x))", "all x.((Sam(x) & -Tumpus(x)) -> -Tumpus(x))", "(-Tumpus(Sam))", "all x.(Tumpus(x) -> -Tumpus(x))", "All x.(Sam(x) -> -Tumpus(x))", "exists x.(Sam(x) & -Tumpus(x))", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam) & -Tumpus(Sam))", "-Tumpus(Sam)", "all x.(Sam(x) -> -Tompus(x))", "all x.(Tumpus(x) -> -Tumpus(x))", "all x.((Sam(x) & -Tumpus(x)) -> -Tompus(x))", "all x.((Sam(x) & -Tumpus(x)) -> -Sam(x))", "all x.((Sam(x) & -Tumpus(x)) -> -Tumpus(x))", "all x.((Sam(x) & -Tumpus(x)) -> NotTumpus(x))", "(Tumpus(Sam) & -Tumpus(Sam))"]}
{"id": "prontoqa_validation_51", "nl": "Each vumpus is a tumpus.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vimpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.((Vumpus(x) & Tumpus(x)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))", "all x.(Vumpus(x) -> Totumpus(x))", "all x.((Vumpus(x) & Tumpus(x)) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_validation_52", "nl": "Rex is a wumpus, Rex is a yumpus, and Rex is not a tumpus.", "fol": "(wumpus(Rex) & yumpus(Rex) & -tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yampus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) & -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Tumpus(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yampus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x))))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x y z.(Rex(x) -> Wumpus(x)) & (Rex(y) -> Yumpus(y)) & (Rex(z) -> -Tumpus(z))))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & -Tumpus(y)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z)))"]}
{"id": "prontoqa_validation_53", "nl": "Rex is not a vumpus.", "fol": "-vumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Vumpus(x))", "all x.(Rex(x) -> -Vumpus(x))", "all x.(Rex(x) -> -Vimpus(x))", "All x.(Rex(x) -> -Vumpus(x))", "All x.(Rex(x) -> -Vumpus(x))", "All x.(Rex(x) -> -Vimpus(x))", "Rex is not a vumpus.", "(-Vumpus(Rex))", "Rex is not a Vumpus.", "all x.(Rex(x) -> -Vampus(x))", "all x.(Rex(x) -> -Voompus(x))", "-Vumpus(Rex)", "all x.(Rex(x) -> -Vumpus(x))", "Rex is not a Vumpus(x)", "(-Vumpus(Rex))", "-Vumpus(Rex)"]}
{"id": "prontoqa_validation_54", "nl": "Every gorpus is a rompus.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Rompus(x) -> Gorpus(x))", "exists x.(Gorpus(x) & Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Roman(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.((Gorpus(x) & Rompus(x)) -> HasRompus(x))", "all x.((Gorpus(x) & Rompus(x)) -> Is(x,y))", "all x.((Gorpus(x) & Rompus(x)) -> HasGorpus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Becomes(x,y))"]}
{"id": "prontoqa_validation_55", "nl": "Wren is not a rompus, Wren is a dumpus, and Wren is a grimpus.", "fol": "(-rompus(Wren) & dumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y))) & all z.(Wren(z) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & (Wren(x) -> Dumpus(x)) & (Wren(x) -> Grimpus(x)))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) -> Dumpus(x))) & ((Wren(x) -> Grimpus(x))))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y))) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Gruppus(z))))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & -Dumpus(y) & -Rompus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grumpus(z))))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z))) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) & Dumpus(x))) & ((Wren(x) & Grimpus(x))))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) | (Wren(x) & Grimpus(x)))))", "(all x.(Wren(x) -> -rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z)) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Gruppus(z)))"]}
{"id": "prontoqa_validation_56", "nl": "Wren is not a gorpus.", "fol": "-gorpus(Wren)", "prediction": ["all x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren))", "All x.(Wren(x) -> -Gorpus(x))", "all x y.((Wren(x) & Gorpus(y)) -> -Gorpus(x))", "all x.((Wren(x) & -Gorpus(x)) -> -Gorpus(x))", "exists x.(Wren(x) & -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "all x y.((Wren(x) & Gorpus(y)) -> -Gorpus(x))", "all x.((Wren(x) & -Gorpus(x)) -> -Gorpus(x))", "all x.((Wren(x) & -Gorpus(x)) -> -Wren(x))", "all x.(Wren(x) & -Gorpus(x))", "all x.(Wren(x) -> -Gorpus(x))", "All x.(Wren(x) -> -Gorpus(x))", "all x.(Wren(x) -> -Gerpus(x))", "all x y.((Wren(x) & Gorpus(y)) -> -Gorpus(x,y))"]}
{"id": "prontoqa_validation_57", "nl": "Jompuses are wumpuses.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wampus(x))", "all x y.((Jompuse(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpuse(x))", "all x.(Jompuse(x) -> Wompus(x))", "all x.(Jompuse(x) -> Wempus(x))", "all x.(Jompuse(x) -> Hush(x))", "all x.(Jomess(x) -> Wumpus(x))", "all x.(Jompuse(x) -> (Wumpus(x) & -Wumpus(x)))", "all x.(Jompuse(x) -> (Wumpus(x) & Wumpus(x)))", "all x y.((Jompuse(x) & Wumpus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_58", "nl": "Fae is a zumpus, Fae is not a wumpus, and Fae is a rompus.", "fol": "(zumpus(Fae) & -wumpus(Fae) & rompus(Fae))", "prediction": ["(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y)) & all z.(Fae(z) -> Rompus(z))))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y)) & all z.(Fae(z) -> Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y))) & all z.(Fae(z) -> Rompus(z)))", "(all x y z.(Fae(x) -> Zumpus(x)) & (Fae(y) -> -Wumpus(y)) & (Fae(z) -> Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (-Fae(x) -> Wumpus(x)) & (Fae(x) -> Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y))) & all z.(Fae(z) -> Rompus(z))))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x))))", "(all x.(Fae(x) -> Zurpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Zumpus(x) & Fae(y) & Rumpus(z)) -> (-Wumpus(y) & Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (-Fae(x) -> Wumpus(x)) & (-Fae(x) -> Rompus(x)))", "(all x y z.(Fae(x) -> Zumpus(x)) & ((Fae(y) & -Wumpus(y)) | (Fae(z) & Rompus(z)))))", "all x y z.((Fae(x) & Zumpus(x) & Fae(y) & Wumpus(z)) -> (-Wumpus(y) & Rompus(z)))", "(all x y z.(Fae(x) -> Zumpus(x)) & ((Fae(y) & -Wumpus(y)) -> Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Romanpus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.((Fae(y) & -Wumpus(y))) -> Rompus(y)))"]}
{"id": "prontoqa_validation_59", "nl": "Fae is not a jompus.", "fol": "-jompus(Fae)", "prediction": ["all x.(Fae(x) -> -Jompus(x))", "all x.(Fae(x) -> -Jimpus(x))", "all x.(Fae(x) -> -Jumpus(x))", "-Jompus(Fae)", "(-Jompus(Fae))", "exists x.(Fae(x) & -Jompus(x))", "all x.(Fae(x) -> -Jampus(x))", "All x.(Fae(x) -> -Jompus(x))", "all x.(Fae(x) -> -Jompus(x))", "(Jompus(Fae) & -Jompus(Fae))", "exists x.(Fae(x) & -Jimpus(x))", "exists x.(Fae(x) & -Jumpus(x))", "All x.(Fae(x) -> -Jimpus(x))", "all x.(Fae(x) -> -Jimpus(x))", "(Jompus(Fae) & -Jimpus(Fae))", "all x.(Fae(x) -> -Jomess(x))"]}
{"id": "prontoqa_validation_60", "nl": "Each grimpus is a sterpus.", "fol": "all x. (grimpus(x) -> sterpus(x))", "prediction": ["all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grampus(x) -> Sterpus(x))", "all x.(Gruppus(x) -> Sterpus(x))", "exists x.(Grimpus(x) & Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x y.((Grimpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterepus(x))", "all x.(Sterpus(x) -> Grimpus(x))", "all x.(Strictus(x) -> Grimpus(x))", "all x.(Rumpus(x) -> Sterpus(x))", "all x.(Fruit(x) -> Sterpus(x))", "all x.(Grumps(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterus(x))", "all x y.((Grimpus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Grimpus(x) -> Steropus(x))", "all x y.((Grimpus(x) & Sterpus(y)) -> Scarlett(x))"]}
{"id": "prontoqa_validation_61", "nl": "Sally is a rompus and Sally is not a sterpus and Sally is a brimpus.", "fol": "(rompus(Sally) & -sterpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)) & (Sally(x) -> Brimpus(x))))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterepus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterpus(y))) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterpus(y))) & all z.(Sally(z) -> Brimpus(z)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterepus(x)) & (Sally(x) -> Brimpus(x))))", "all x.((Sally(x) & Rompus(x)) -> (-Sterpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Steerpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterepus(y))) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterepus(y))) & all z.(Sally(z) -> Brimpus(z)))", "all x.(Sally(x) -> (Rompus(x) & -Sterpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterepus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Rompus(x) -> Sally(x)) & (-Sterpus(x) -> Sally(x))) & (Brimpus(x) -> Sally(x)))", "(all x.(Sally(x) -> Rompus(x)) & all y.(Sally(y) -> -Sterpus(y)) & all z.(Brimpus(z) -> Brimpus(z))))"]}
{"id": "prontoqa_validation_62", "nl": "Sally is not a grimpus.", "fol": "-grimpus(Sally)", "prediction": ["all x.(Sally(x) -> -Grimpus(x))", "Sally is not a Grimpus.", "All x.(Sally(x) -> -Grimpus(x))", "Sally is notGrimpus(Sally)", "Sally -Grimpus(Sally)", "(-Grimpus(Sally))", "Sally & -Grimpus(Sally)", "all x.(Sally(x) -> -Grimppus(x))", "all x.(Sally(x) -> -Grimpus(x))", "all x.(Sally(x) -> -Grimpus(x))", "all x.(Sally(x) -> -Grippus(x))", "all x.(Sally(x) & -Grimpus(x))", "Sally is -Grimpus(Sally)", "all x.(Sally(x) -> -Gruppus(x))", "Sally is not a Grimpus(Sally)", "all x.(Sally(x) -> -Grampus(x))"]}
{"id": "prontoqa_validation_63", "nl": "Vumpuses are tumpuses.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpuse(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpuse(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x,y))", "all x.(Vumpus(x) -> Tumor(x))", "all x.(Volumpus(x) -> Tumpus(x))", "all x.(Vumpuse(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpuse(x) -> Tumulus(x))", "all x.(Vumpus(x) -> (Tumpus(x) & Tumpus(x)))", "all x.(Vumpus(x) -> Tumula(x))"]}
{"id": "prontoqa_validation_64", "nl": "Sam is not a tumpus, Sam is a jompus, and Sam is a zumpus.", "fol": "(-tumpus(Sam) & jompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Zumpus(z))))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Zumpus(z)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) -> Zumpus(y)))", "(all x y z.((Sam(x) & Tumpus(y)) -> -Tumpus(x)) & ((Sam(z) & Jompus(z))) -> Zumpus(z)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x))))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) & All z.(Sam(z) -> Zumpus(z))))", "(all x.(Sam(x) -> -Tumpus(x)) & (Jompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Zumpus(z)))", "(all x y z.((Sam(x) & Tumpus(y)) -> -Tumpus(x)) & ((Sam(z) & Jompus(z)) -> Zumpus(z)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jimpus(y) -> Zumpus(y)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) | Zumpus(x)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tompus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Tompus(z)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & Jompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tompus(y) & Jompus(z)) -> (-Tumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_validation_65", "nl": "Sam is not a vumpus.", "fol": "-vumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Vumpus(x))", "all x.((Sam(x) & -Vumpus(x)) -> -Vumpus(x))", "all x.(Sam(x) -> -Vumpus(x))", "all x.(Sam(x) -> -Vimpus(x))", "all x.((Sam(x) & -Vimpus(x)) -> -Vimpus(x))", "all x.((Sam(x) & -Vumpus(x)) -> -Vumpus(x))", "all x.((Sam(x) & -Vumpus(x)) -> -Vimpus(x))", "all x.((Sam(x) & -Vumpus(x)) -> -(Vumpus(x) & -Vumpus(x)))", "(-Vumpus(Sam))", "exists x.(Sam(x) & -Vumpus(x))", "all x.((Sam(x) & -Vumpus(x)) -> -Vampus(x))", "all x.((Sam(x) & -Vumpus(x)) -> -(Vumpus(x) & -Vumpus(x)))", "all x.((Sam(x) & -Vimpus(x)) -> -Vumpus(x))", "all x.((Sam(x) & -Vumpus(x)) -> -Vumpus(x))", "All x.(Sam(x) -> -Vumpus(x))", "all x.((Sam(x) & -Vimpus(x)) -> -(Vimpus(x) & -Vimpus(x)))"]}
{"id": "prontoqa_validation_66", "nl": "Grimpuses are zumpuses.", "fol": "all x. (grimpus(x) -> zumpus(x))", "prediction": ["all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpuse(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpuse(x))", "all x.(Gruppuse(x) -> Zumpuse(x))", "all x.(Gruppus(x) -> Zumpus(x))", "all x.(Grimpuse(x) -> Zumpus(x))", "all x.(Grampus(x) -> Zumpus(x))", "all x.(Rampus(x) -> Zumpus(x))", "all x.(Gruppuse(x) -> Zumpus(x))", "all x.(Rimpus(x) -> Zumpus(x))", "all x.(Gruppus(x) -> Zumpuse(x))", "all x y.((Grimpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Grompus(x) -> Zumpus(x))", "all x y.((Grimpuse(x) & Zumpuse(y)) -> Is(x,y))", "all x.(Grimpus(x) -> Zumpus(x))", "all x y.((Grimpus(x) & Zumpus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_67", "nl": "Polly is a yumpus and Polly is not a zumpus and Polly is a numpus.", "fol": "(yumpus(Polly) & -zumpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x))))", "(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> -Zumpus(y))) & all z.(Polly(z) -> Numpus(z))))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Tompus(x))) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x))) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Yampus(y) & Polly(z)) -> (Yumpus(x) & -Zumpus(z) & Numpus(z)))", "all x y.((Polly(x) & Polly(y)) -> (Yumpus(x) & -Zumpus(y) & Numpus(y)))", "(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> -Tompus(y))) & all z.(Polly(z) -> Numpus(z))))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Tompus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> -Zumpus(y))) & all z.(Polly(z) -> Numpus(z)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Tompus(x)) & (Polly(x) -> Numpus(x))))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> -Zumpus(y))) & all z.(Poly(z) -> Numpus(z))))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x))))", "(all x.(Polly(x) -> Yampus(x)) & all y.(Polly(y) -> -Tompus(y))) & all z.(Polly(z) -> Numpus(z)))"]}
{"id": "prontoqa_validation_68", "nl": "Polly is not a grimpus.", "fol": "-grimpus(Polly)", "prediction": ["all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "All x.(Polly(x) -> -Grimpus(x))", "all x.(Polly(x) -> -Grimpus(x))", "exists x.(Polly(x) & -Grimpus(x))", "all x.(Polly(x) -> -Grimpus(x))", "all x.(Polly(x) -> -Grimpus(x))", "Polly is notGrimpus(Polly)", "all x.(Polly(x) -> -Gruppus(x))", "all x.(Polly(x) -> -Grampus(x))", "all x.(Polly(x) -> -Grippus(x))", "all x.(Polly(x) -> -Grimpus(x))", "all x.(Polly(x) -> -Grimppus(x))", "all x.(Polly(x) & -Grimpus(x))", "all x.(Polly(x) -> -Grisp(x))", "Polly is notGrimpus(polly)"]}
{"id": "prontoqa_validation_69", "nl": "Each shumpus is a grimpus.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Gruppus(x))", "all x.(Shumpus(x) -> Grumpus(x))", "exists x.(Shumpus(x) & Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x y.((Shumpus(x) & Grimpus(y)) -> Is(x,y))", "all x y.((Shumpus(x) & Grimpus(y)) -> exists z.(Shumpus(z) & Grimpus(z))))", "all x y.((Shumpus(x) & Grimpus(y)) -> (Shumpus(x) & Grimpus(y)))", "all x y.((Shumpus(x) & Grimpus(y)) -> (Shumpus(x) & Grimpus(x)))", "(all x.(Shumpus(x) -> Grimpus(x)))", "all x.(Shumpus(x) -> Grupus(x))", "all x y.((Shumpus(x) & Grimpus(y)) -> HasShumpus(x,y))", "all x y.((Shumpus(x) & Grimpus(y)) -> exists z.(Shumpus(z) & Gruppus(z))))", "all x.((Shumpus(x) & Grimpus(x)) -> exists y.(Shumpus(y) & Grimpus(y)))", "all x y.((Shumpus(x) & Grimpus(y)) -> -Shumpus(x))", "all x y.((Shumpus(x) & Grimpus(y)) -> Has(x,y))"]}
{"id": "prontoqa_validation_70", "nl": "Polly is a lorpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Gorpus(y))) & all z.(Polly(z) -> -Grimpus(z))))", "all x y z.((Polly(x) & Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "all x y z.((Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Gorpus(y))) & all z.(Polly(z) -> -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(y)))", "(all x.(Lorpus(x) -> Polly(x)) & (Gorpus(x) -> Polly(x)) & -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(y)))"]}
{"id": "prontoqa_validation_71", "nl": "Each impus is a tumpus.", "fol": "all x. (impus(x) -> tumpus(x))", "prediction": ["all x.(Issue(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumulus(x))", "all x.(Impossible(x) -> Tumulus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x.(Impact(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x.(Impedus(x) -> Tumpus(x))", "all x.(Impact(x) -> Tumulus(x))", "all x.(Immersion(x) -> Tumpus(x))", "all x.(Impact(x) -> Tumpus(x))", "exists x.(Impossible(x) & Tumpus(x))", "all x.(Implementation(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpeus(x))", "all x.(Impedus(x) -> Tumulus(x))", "all x.(Issue(x) -> Tumpew(x))"]}
{"id": "prontoqa_validation_72", "nl": "Rex is a numpus and Rex is not a tumpus and Rex is a gorpus.", "fol": "(numpus(Rex) & -tumpus(Rex) & gorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y)) & all z.(Rex(z) -> Gorpus(z))))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z))))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y)) & all z.(Rex(z) -> Gorpus(z))))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z))))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x))))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y)) & all z.(Rex(z) -> Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x)) | (-Tumpus(x) & Gorpus(x))))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & -Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tompus(x)) & (Rex(x) -> Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y)) & all z.(Rex(z) -> Gorpus(z)))"]}
{"id": "prontoqa_validation_73", "nl": "Rex is not an impus.", "fol": "-impus(Rex)", "prediction": ["all x.(Rex(x) -> -Impossible(x))", "All x.(Rex(x) -> -Impossible(x))", "all x.(Rex(x) -> -Illegal(x))", "all x.(Rex(x) -> -Imperial(x))", "all x.(Rex(x) -> -Imposer(x))", "all x.(Rex(x) -> -Impediment(x))", "all x.(Rex(x) -> -Is(x,Is(x)))", "All x.(Rex(x) -> -Illegal(x))", "All x.(Rex(x) -> -Imperial(x))", "-Impossible(Rex)", "all x.(Rex(x) -> -Is(x,Impossible))", "all x.(Rex(x) -> -IsImpossible(x))", "(-Impossible(Rex))", "All x.(Rex(x) -> -Imposer(x))", "all x.(Rex(x) -> -Imposible(x))", "All x.(Rex(x) -> -Is(x,Is(x)))"]}
{"id": "prontoqa_validation_74", "nl": "Lorpuses are zumpuses.", "fol": "all x. (lorpus(x) -> zumpus(x))", "prediction": ["all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "all x.(Lorpuse(x) -> Zumpus(x))", "all x y.((Lorpuse(x) & Zumpuse(y)) -> Is(x,y))", "all x.(Lorpes(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x y.((Lorpus(x) & Zumpus(y)) -> Is(x,y))", "all x y.((Lorpuse(x) & Zumpus(y)) -> Is(x,y))", "all x.(Lorpus(x) -> Zurpuse(x))", "all x y.((Lorpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Lorph(x) -> Zumpuse(x))", "all x y.((Lorpuse(x) & Zumpuse(y)) -> LocatedIn(x,y))", "all x.(Lorpus(x) -> Zurpus(x))", "all x y.((Lorpus(x) & Zumpus(y)) -> Has(x,y))", "all x y.((Lorpuse(x) & Zumpus(y)) -> Has(x,y))"]}
{"id": "prontoqa_validation_75", "nl": "Sam is a lempus, Sam is not a zumpus, and Sam is a yumpus.", "fol": "(lempus(Sam) & -zumpus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yumpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & (-Sam(x) -> Zumpus(x)) & (-Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yumpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yampus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yumpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x))))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Tompus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumps(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpsum(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yampus(z)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Yumpus(z))))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpa(x)))", "(all x.(Sam(x) -> Lempus(x)) & (-Sam(x) -> Zumpus(x)) & (Sam(x) -> Yumpus(x)))"]}
{"id": "prontoqa_validation_76", "nl": "Sam is not a lorpus.", "fol": "-lorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Lorpus(x))", "all x.((Sam(x) & -Lorpus(x)) -> -Lorpus(x))", "(-Lorpus(Sam))", "exists x.(Sam(x) & -Lorpus(x))", "All x.(Sam(x) -> -Lorpus(x))", "all x.((Sam(x) & -Lorpus(x)) -> -Sam(x))", "all x.(Sam(x) -> -Lorpus(x))", "all x.((Sam(x) & -Lorpus(x)) -> -Lorph(x))", "(-Lorpus(Sam) & -Lorpus(Sam))", "(Lorpus(Sam) & -Lorpus(Sam))", "all x.((Sam(x) & -Lorpus(x)) -> -Larpus(x))", "all x.((Sam(x) & -Lorpus(x)) -> -SamLorpus(x))", "all x.(Lorpus(x) -> -Lorpus(x))", "all x.((Sam(x) & -Lorpus(x)) -> -Lorpheus(x))", "all x.(Sam(x) -> -Larpus(x))", "all x.(Lorpus(x) -> -Sam(x))"]}
{"id": "prontoqa_validation_77", "nl": "Every impus is a grimpus.", "fol": "all x. (impus(x) -> grimpus(x))", "prediction": ["all x.(Impossible(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))", "all x.(Implementation(x) -> Grimpus(x))", "all x.(Impact(x) -> Grimpus(x))", "all x.(Impossible(x) -> Gruppus(x))", "all x.(Is(x) -> Grimpus(x))", "all x.(Improve(x) -> Grimpus(x))", "all x.(Impossible(x) -> Grumpus(x))", "all x.(Implementation(x) -> Gruppus(x))", "all x.(IsPristine(x) -> Grimpus(x))", "all x.(IsPlate(x) -> Grimpus(x))", "all x.(Impedus(x) -> Grimpus(x))", "all x.(Implement(x) -> Grimpus(x))", "all x.(Issue(x) -> Gruppus(x))", "all x.(Impact(x) -> Gruppus(x))", "all x.(Idea(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_78", "nl": "Polly is a gorpus and Polly is not a grimpus and Polly is a lorpus.", "fol": "(gorpus(Polly) & -grimpus(Polly) & lorpus(Polly))", "prediction": ["(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x))))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))) & (Polly(x) -> Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))) & (Polly(x) -> Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x))))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> -Grimpus(y))) & all z.(Polly(z) -> Lorpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> -Grimpus(y))) & all z.(Polly(z) -> Lorpus(z))))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> -Grimpus(y))) & all z.(Polly(z) -> Lorpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> -Grimpus(y))) & all z.(Polly(z) -> Lorpus(z))))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y.((Polly(x) & Gorpus(x) & Polly(y)) -> (-Grimpus(y) & -Lorpus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Poly(x) -> Lorpus(x)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(z)) -> (Gorpus(x) & -Grimpus(y) & Lorpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> -Grimpus(y)) & all z.(Polly(z) -> Lorpus(z))))", "all x y.((Polly(x) & Polly(y)) -> (Gorpus(x) & -Grimpus(y) & Lorpus(y)))"]}
{"id": "prontoqa_validation_79", "nl": "Every vumpus is a dumpus.", "fol": "all x. (vumpus(x) -> dumpus(x))", "prediction": ["all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))", "all x.(Vimpus(x) -> Dumpus(x))", "all x y.((Vumpus(x) & Dumpus(y)) -> Is(x,y))", "all x y.((Vumpus(x) & Dumpus(y)) -> Has(x,y))", "all x y.((Vumpus(x) & Dumpus(y)) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.((Vumpus(x) & Dumpus(x)) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.((Vumpus(x) & Dumpus(x)) -> Is(x,y))", "exists x.(Vumpus(x) & Dumpus(x))", "all x.((Vumpus(x) & Dumpus(x)) -> -Dumpus(x))", "all x y.((Vumpus(x) & Dumpus(y)) -> -Dumpus(x))", "all x.((Vumpus(x) & Dumpus(x)) -> Vumpus(x))"]}
{"id": "prontoqa_validation_80", "nl": "Polly is a rompus, Polly is a brimpus, and Polly is not a dumpus.", "fol": "(rompus(Polly) & brimpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Poly(z) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & -Dumpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> -Dumpus(z))))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "all x y z.((Polly(x) & Rompus(x) & Brimpus(y) & Dumpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x))))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "all x y z.((Polly(x) & Rimpus(x) & Brimpus(y) & Dumpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> -Dumpus(z)))", "(all x y z.(Polly(x) -> Rompus(x)) & (Polly(y) -> Brimpus(y)) & (Polly(z) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_validation_81", "nl": "Polly is not a vumpus.", "fol": "-vumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Vumpus(x))", "all x.((Polly(x) & -Vumpus(x)) -> -Vumpus(x))", "all x.(Polly(x) -> -Vumpus(x))", "all x.(Polly(x) -> -Vimpus(x))", "exists x.(Polly(x) & -Vumpus(x))", "All x.(Polly(x) -> -Vumpus(x))", "all x.(Polly(x) -> -Vumpus(x))", "(-Vumpus(Polly))", "all x.(Polly(x) -> -Vumpus(x))", "all x.(Polly(x) -> -Vumpus(x))", "All x.(Polly(x) -> -Vumpus(x))", "all x.((Polly(x) & -Vumpus(x)) -> -Vimpus(x))", "all x.(Polly(x) -> -Vimpus(x))", "all x.((Polly(x) & -Vumpus(x)) -> -Vumpus(x))", "All x.(Polly(x) -> -Vimpus(x))", "exists x.(Polly(x) & -Vumpus(x))"]}
{"id": "prontoqa_validation_82", "nl": "Every rompus is a yumpus.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpa(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumps(x))", "all x.(Rompus(x) -> Yumpsum(x))", "all x.(Rompus(x) -> Yumpu(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpos(x))", "all x.(rompus(x) -> Yumpus(x))", "exists x.(Rompus(x) & Yampus(x))", "all x.(rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumus(x))", "all x.(Rompus(x) -> Yump.(Rompus(x)))", "all x.(Rompus(x) -> Yumpe(x))"]}
{"id": "prontoqa_validation_83", "nl": "Stella is not a yumpus, Stella is a shumpus, and Stella is a vumpus.", "fol": "(-yumpus(Stella) & shumpus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Humpus(y))) & all z.(Stella(z) -> Vumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Humpus(y))) & all z.(Stella(z) -> Vumpus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Humpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vampus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Shumpus(x)) & (Stella(x) -> Vumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vampus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vumpus(x))))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Vumpus(x))))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Vumpus(x))))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y))) & all z.(Stella(z) -> Vumpus(z)))"]}
{"id": "prontoqa_validation_84", "nl": "Stella is not a rompus.", "fol": "-rompus(Stella)", "prediction": ["all x.(Stella(x) -> -Rompus(x))", "Stella is not a rompus.", "exists x.(Stella(x) & -Rompus(x))", "Stella is not a Rompus.", "All x.(Stella(x) -> -Rompus(x))", "(-Rompus(Stella))", "Stella is not a Rompus(Stella)", "Stella -Rompus(Stella))", "(Rompus(Stella) & -Rompus(Stella))", "all x.(Stella(x) -> -Romesh(x))", "all x.(Stella(x) -> -Rompus(x))", "all x.(Stella(x) -> -rompus(x))", "(-Rompus(Stella) & -Rompus(Stella))", "Stella -Rompus(Stella)", "Stella is -Rompus(Stella)", "-Rompus(Stella)"]}
{"id": "prontoqa_validation_85", "nl": "Each wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "all x y.((Wumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Brumpus(x))", "all x.((Wumpus(x) & Brimpus(x)) -> HasWumpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> HasWumpus(x,y))", "all x.(Wumpus(x) -> Birmpus(x))", "(all x.(Wumpus(x) -> Brimpus(x)))", "all x.(Wumpus(x) -> Brumpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> HasBrimpus(x,y))", "all x.(Wumpus(x) -> Brampus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Contains(x,y))", "all x.((Wumpus(x) & Brimpus(x)) -> HasBrimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Breed(x,y))"]}
{"id": "prontoqa_validation_86", "nl": "Max is a yumpus, Max is not a brimpus, and Max is a lorpus.", "fol": "(yumpus(Max) & -brimpus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Brimpus(y)) & all z.(Max(z) -> Lorpus(z))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> -Brimpus(y)) & all z.(Max(z) -> Lorpus(z))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Brimpus(y))) & all z.(Max(z) -> Lorpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brumpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Brumpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> -Brimpus(y))) & all z.(Max(z) -> Lorpus(z)))", "(all x.(Max(x) -> Yumpa(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Brimpus(y)) & all z.(Max(z) -> Lorpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (-Max(x) -> Brimpus(x)) & (-Max(x) -> Lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Brimpus(y))) & all z.(Max(z) -> Lorpus(z))))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> -Brimpus(y)) & all z.(Max(z) -> Lorpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x))))"]}
{"id": "prontoqa_validation_87", "nl": "Max is not a wumpus.", "fol": "-wumpus(Max)", "prediction": ["all x.(Max(x) -> -Wumpus(x))", "(-Wumpus(Max))", "-Wumpus(Max)", "all x.((Max(x) & -Wumpus(x)) -> -Wumpus(x))", "All x.(Max(x) -> -Wumpus(x))", "all x.((Max(x) & -Wumpus(x)) -> -(Wumpus(x) & -Wumpus(x)))", "all x.(Wumpus(x) -> -Wumpus(x))", "all x.((Max(x) & -Wumpus(x)) -> -(Wumpus(x) & Wumpus(x)))", "(Wumpus(Max) & -Wumpus(Max))", "all x.((Max(x) & -Wumpus(x)) -> -(Wumpus(x) & -Wumpus(x))))", "all x.((Max(x) & -Wumpus(x)) -> -(Wumpus(x) | Wumpus(x))))", "all x.((Max(x) & -Wumpus(x)) -> -(Wumpus(x) & Wumpus(x))))", "all x.((Max(x) & -Wumpus(x)) -> -(Wumpus(x) | Wumpus(x)))", "all x.(Max(x) -> -Wumpus(x))", "(-Wumpus(Max) & -Wumpus(Max))", "all x.((Max(x) & -Wumpus(x)) -> -(Wumpus(x) | Humpus(x))))"]}
{"id": "prontoqa_validation_88", "nl": "Zumpuses are impuses.", "fol": "all x. (zumpus(x) -> impus(x))", "prediction": ["all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpus(x) -> Issues(x))", "all x.(Zumpuse(x) -> Issues(x))", "all x.(Zombie(x) -> Issue(x))", "all x.(Zumpus(x) -> Ispose(x))", "all x.(Zumpus(x) -> Impossible(x))", "all x.(Zombies(x) -> Issues(x))", "all x.(Zumpuse(x) -> Ispose(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zumpus(x) -> Impose(x))", "all x.(Zumpus(x) -> Isolated(x))", "all x.(Zimpus(x) -> Issue(x))", "all x.(Zumpuse(x) -> Impossible(x))", "all x.(Zumpus(x) -> Issued(x))", "all x.(Zumpuse(x) -> Isolated(x))"]}
{"id": "prontoqa_validation_89", "nl": "Alex is a tumpus and Alex is not an impus and Alex is a rompus.", "fol": "(tumpus(Alex) & -impus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x))) & (Alex(x) -> Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x))) & (Alex(x) -> Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> -Impossible(y))) & all z.(Alex(z) -> Rompus(z))))", "all x.(Alex(x) -> (Tumpus(x) & -Impossible(x) & Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> -Impossible(y))) & all z.(Alex(z) -> Rompus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x)) & (Alex(x) -> Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> -Impossible(y))) & all z.(Alex(z) -> Rompus(z))))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> -Impossible(y))) & all z.(Alex(z) -> Rompus(z)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> -Issue(y))) & all z.(Alex(z) -> Rompus(z))))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Issue(x)) & (Alex(x) -> Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x)) & (Alex(x) -> Rompus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & (Alexa(x) -> -Impossible(x))) & (Alexa(x) -> Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Issue(x)) & (Alex(x) -> Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & all y.(Alex(y) -> -Issue(y))) & all z.(Alex(z) -> Rompus(z))))", "all x.(Alex(x) -> (Tumpus(x) & -Issue(x) & Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x)) & (Alex(x) -> Rompus(x))))"]}
{"id": "prontoqa_validation_90", "nl": "Alex is not a zumpus.", "fol": "-zumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Tompus(x))", "All x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Zombipus(x))", "all x.(Alex(x) -> -Zombip(x))", "all x.(Alex(x) -> -Zombie(x))", "all x.(Alex(x) -> -Zupus(x))", "Alex is not a zumpus.", "All x.(Alex(x) -> -Tompus(x))", "all x.(Alex(x) -> -Zombius(x))", "all x.(Alex(x) -> -Zimpus(x))", "all x.(Alex(x) -> -Zombia(x))", "All x.(Alex(x) -> -Zombipus(x))", "all x.(Alex(x) -> -Zuppus(x))", "all x.(Alex(x) & -Zumpus(x))", "all x.(Alex(x) -> -Zoompus(x))"]}
{"id": "prontoqa_validation_91", "nl": "Tumpuses are wumpuses.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpuse(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.((Tumpus(x) & Wumpus(x)) -> Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Tumpus(x) -> Wompus(x))", "all x.(Tumpus(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.((Tumpus(x) & Wumpus(x)) -> Wampus(x))", "all x.(Tumpus(x) -> wumpus(x))", "all x.(Tumulus(x) -> Wumpus(x))", "all x.(Tumper(x) -> Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Wampus(x))", "all x.(Tumpuse(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wempus(x))"]}
{"id": "prontoqa_validation_92", "nl": "Rex is a zumpus, Rex is a gorpus, and Rex is not a wumpus.", "fol": "(zumpus(Rex) & gorpus(Rex) & -wumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & -Wumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x))))", "(all x y z.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Gorpus(y)) & (Rex(z) -> -Wumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & -Wumpus(y)))", "(all x y z.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Gorpus(y)) & (Rex(z) -> -Wumpus(z))))", "(all x y z.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Gorpus(y)) & (Rex(z) -> -Wumpus(z)))", "all x y z.((Rex(x) & Zumpus(x) & Gorpus(y) & -Wumpus(z)) -> (Tompus(x) & Gorpus(y) & -Wumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x))))"]}
{"id": "prontoqa_validation_93", "nl": "Rex is not a tumpus.", "fol": "-tumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Tumpus(x))", "All x.(Rex(x) -> -Tumpus(x))", "(-Tumpus(Rex))", "Rex is notTumpus(x)", "-Tumpus(Rex)", "(-Tumpus(Rex) & -Tumpus(Rex))", "all x.(Rex(x) -> -Tumpus(x))", "Rex.(Tumpus(x) -> -Tumpus(x))", "all x.(Rex(x) -> -Tompus(x))", "Rex.(Tumpus(x) & -Tumpus(x))", "Rex is notTumpus(Rex)", "Rex.(Tumpus(x) -> -Tumpus(x))", "All x.(Rex(x) -> -Tumpus(x))", "Rex is notTumpus(x) -> -Tumpus(x))", "all x.(Rex(x) -> (-Tumpus(x)))", "Rex is notTumpus(rex)"]}
{"id": "prontoqa_validation_94", "nl": "Tumpuses are lorpuses.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumulus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Lorpuse(x))", "all x.(Tumulus(x) -> Lorpuse(x))", "all x.(Tumulus(x) -> Loomis(x))", "all x.(Tumpus(x) -> Loomis(x))", "all x.(Tumpus(x) -> Lorpuse(x))", "all x.(Tumpuse(x) -> Loomis(x))", "all x.(Tumult(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tump(x) -> Lorpus(x))", "all x.(Tumper(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpuse(x))", "all x.(Tumult(x) -> Lorpuse(x))", "all x.(Tumulus(x) -> (Lorpuse(x) & LivesIn(x)))"]}
{"id": "prontoqa_validation_95", "nl": "Sam is not a lorpus, Sam is an impus, and Sam is a grimpus.", "fol": "(-lorpus(Sam) & impus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y)) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Impossible(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Impossible(y))) & all z.(Sam(z) -> Grimpus(z)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Ispose(y)) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Impossible(y)) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Ispose(y))) & all z.(Sam(z) -> Grimpus(z)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y))) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Ispose(y))) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Imperator(y)) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Impossible(y))) & all z.(Sam(z) -> Grimpus(z))))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Ispose(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> Grimpus(x))))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Impossible(y)) & all z.(Sam(z) -> Grimpus(z)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y))) & all z.(Sam(z) -> Grimpus(z)))"]}
{"id": "prontoqa_validation_96", "nl": "Every vumpus is a jompus.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))", "all x y.((Vumpus(x) & Jompus(y)) -> Is(x,y))", "all x y.((Vumpus(x) & Jompus(y)) -> Has(x,y))", "all x.((Vumpus(x) & Jompus(x)) -> HasVumpus(x))", "all x y.((Vumpus(x) & Jompus(y)) -> HasVumpus(x,y))", "all x y.((Vumpus(x) & Jompus(y)) -> -Vumpus(x))", "all x.(Vimpus(x) -> Jompus(x))", "all x.((Vumpus(x) & Jompus(x)) -> -Vumpus(x))", "all x.((Vumpus(x) & Jompus(x)) -> Vumpus(x))", "all x.((Vumpus(x) & Jompus(x)) -> EveryVumpus(x))", "all x y.((Vumpus(x) & Jompus(y)) -> Becomes(x,y))", "all x.((Vumpus(x) & Jompus(x)) -> Is(x,y))", "(all x.(Vumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_97", "nl": "Fae is a brimpus and Fae is a numpus and Fae is not a jompus.", "fol": "(brimpus(Fae) & numpus(Fae) & -jompus(Fae))", "prediction": ["(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jompus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jompus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Jompus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jimpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jompus(x))))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jumpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jimpus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jompus(z)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Jimpus(z)))", "(all x y z.(Fae(x) -> Brimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Jompus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jimpus(x))))", "all x y z.((Fae(x) & Brimpus(x) & Fae(y) & Numpus(y)) -> (Brimpus(x) & Numpus(y) & -Jompus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y))) & all z.(Fae(z) -> -Jompus(z))))", "(all x y z.(Fae(x) -> Brimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Jompus(z))))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & -Jimpus(z)) -> (Brimpus(x) & Numpus(y) & -Jimpus(z)))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jumpus(x)))"]}
{"id": "prontoqa_validation_98", "nl": "Fae is not a vumpus.", "fol": "-vumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Vumpus(x))", "all x.(Fae(x) -> -Vimpus(x))", "all x.(Fae(x) -> -Vumpus(x))", "exists x.(Fae(x) & -Vumpus(x))", "-Vumpus(Fae)", "(-Vumpus(Fae))", "exists x.(Fae(x) & -Vimpus(x))", "(Vumpus(Fae) & -Vumpus(Fae))", "all x.(Fae(x) -> -Vumpus(x))", "All x.(Fae(x) -> -Vumpus(x))", "all x.(Fae(x) -> -Vampus(x))", "exists x.(Fae(x) & -Vumpus(x))", "all x.(Fae(x) -> -Vimpus(x))", "-Vumpus(Fae)", "all x.(Fae(x) -> -Voompus(x))", "All x.(Fae(x) -> -Vimpus(x))"]}
{"id": "prontoqa_validation_99", "nl": "Lempuses are gorpuses.", "fol": "all x. (lempus(x) -> gorpus(x))", "prediction": ["all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempus(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lemme(x) -> Gorpus(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x,y))", "all x.(Lempus(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lemme(x) -> Gorpuse(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Is(x,y))", "all x.(Lempus(x) -> Gorpuse(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpuse(x))"]}
{"id": "prontoqa_validation_100", "nl": "Sally is an impus and Sally is a tumpus and Sally is not a gorpus.", "fol": "(impus(Sally) & tumpus(Sally) & -gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y)) & all z.(Sally(z) -> -Gorpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x))))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y)) & all z.(Sally(z) -> -Gorpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y))) & all z.(Sally(z) -> -Gorpus(z))))", "all x.(Sally(x) -> (Impossible(x) & Tumpus(x) & -Gorpus(x)))", "all x y.((Sally(x) & Sally(y)) -> (Impossible(x) & Tumpus(y) & -Gorpus(y)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x y.((Sally(x) & IsImpossible(x) & Sally(y)) -> (Tumpus(y) & -Gorpus(y)))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y)) & all z.(Sally(z) -> -Gorpus(z))))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> (Tumpus(y) & -Gorpus(y))))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x))))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y))) & all z.(Sally(z) -> -Gorpus(z)))"]}
{"id": "prontoqa_validation_101", "nl": "Sally is not a lempus.", "fol": "-lempus(Sally)", "prediction": ["all x.(Sally(x) -> -Lempus(x))", "Sally is not a lempus.", "All x.(Sally(x) -> -Lempus(x))", "Sally -Lempus(Sally)", "Sally is not a Lempus.", "all x.(Sally(x) -> -Limpus(x))", "Sally & -Lempus(Sally)", "Sally n'est pas lempus.", "All x.(Sally(x) -> -Limpus(x))", "all x.(Sally(x) -> -Lempus(x))", "all x.(Sally(x) -> -Lampus(x))", "(-Lempus(Sally))", "all x.(Sally(x) -> -lempus(x))", "Sally is -Lempus(Sally)", "all x.(Sally(x) -> -Lumpus(x))", "Sally n\u2019est pas lempus."]}
{"id": "prontoqa_validation_102", "nl": "Wumpuses are grimpuses.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wimpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grumpus(x))", "all x.(Wumpus(x) -> Grypus(x))", "all x.(Wumpus(x) -> Grappa(x))", "all x.(Wushuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grappus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "all x y.((Wumpus(x) & Grimpus(y)) -> Grimpuse(x))", "all x y.((Wumpus(x) & Grimpus(y)) -> Grimpus(x))", "all x.((Wumpuse(x) & Grimpuse(x)) -> Is(x,y))", "all x y.((Wumpus(x) & Grimpus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_103", "nl": "Rex is a jompus, Rex is a vumpus, and Rex is not a grimpus.", "fol": "(jompus(Rex) & vumpus(Rex) & -grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Voompus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Voompus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x y z.(Rex(x) -> Jompus(x)) & (Rex(y) -> Vumpus(y)) & (Rex(z) -> -Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & -Grimpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Voompus(x)) & (Rex(x) -> -Grimpus(x))))", "(all x y z.(Rex(x) -> Jompus(x)) & (Rex(y) -> Vumpus(y)) & (Rex(z) -> -Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & all y.((Rex(y) & Vumpus(y)) -> -Grimpus(y)))", "all x y z.((Rex(x) & Jompus(y) & Vumpus(z)) -> (Jompus(x) & Vumpus(x) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Voompus(x)) & -Grimpus(x)))"]}
{"id": "prontoqa_validation_104", "nl": "Rex is not a wumpus.", "fol": "-wumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Wumpus(x))", "All x.(Rex(x) -> -Wumpus(x))", "(-Wumpus(Rex))", "Rex is not a wumpus.", "(Wumpus(Rex) & -Wumpus(Rex))", "-Wumpus(Rex)", "Rex is notWumpus(x)", "Rex.(Wumpus(x) -> -Wumpus(x))", "all x.(Rex(x) -> -Wumpus(x))", "(-Wumpus(Rex) & -Wumpus(Rex))", "Rex.(Wumpus(x) & -Wumpus(x))", "Rex.(Wumpus(x) -> -Wumpus(x))", "All x.(Rex(x) -> -Wumpus(x))", "all x.(Rex(x) -> (-Wumpus(x)))", "all x.(Rex(x) -> NoWumpus(x))", "Rex is notWumpus(Rex)"]}
{"id": "prontoqa_validation_105", "nl": "Every vumpus is a zumpus.", "fol": "all x. (vumpus(x) -> zumpus(x))", "prediction": ["all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vimpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> HasVumpus(x,y))", "all x.(Vumpus(x) -> Zurpus(x))", "all x.((Vumpus(x) & Zumpus(x)) -> HasVumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Has(x,y))", "exists x.(Vumpus(x) & Zumpus(x))", "all x.(Vumpus(x) -> Tompus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Vumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> -Vumpus(x))", "all x.((Vumpus(x) & Zumpus(x)) -> Vumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Becomes(x,y))", "all x y.((Vumpus(x) & Zumpus(y)) -> InVumpus(x,y))"]}
{"id": "prontoqa_validation_106", "nl": "Fae is a lempus and Fae is not a zumpus and Fae is a dumpus.", "fol": "(lempus(Fae) & -zumpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Zumpus(y))) & all z.(Fae(z) -> Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Tompus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Zumpus(y)) & all z.(Fae(z) -> Dumpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Zumpus(y))) & all z.(Fae(z) -> Dumpus(z))))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(z) -> Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Tompus(y))) & all z.(Fae(z) -> Dumpus(z)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Dumpus(y)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Dumpus(z)) -> (-Zumpus(y) & Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (-Fae(x) -> Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (-Fae(x) -> Zumpus(x)) & (-Fae(x) -> Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x))))", "all x y.((Fae(x) & Lempus(x) & Fae(y)) -> (-Zumpus(y) & Dumpus(y)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Tompus(y))) & all z.(Fae(z) -> Dumpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Tompus(x))) & (Fae(x) -> Dumpus(x)))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_107", "nl": "Each grimpus is an impus.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> Impossible(x))", "all x.(Grimpus(x) -> IsImpossible(x))", "all x.(Grimpus(x) -> Isolated(x))", "all x.(Grimpus(x) -> Illegal(x))", "all x.(Grimpus(x) -> Impeccable(x))", "all x.(Grimpus(x) -> Is(x))", "all x.(Grimpus(x) -> Imperator(x))", "all x.(Grampus(x) -> Impossible(x))", "all x.(Grimpus(x) -> IsImprovement(x))", "all x.(Grimpus(x) -> IsImpediment(x))", "all x.(Grimpus(x) -> IsImpossed(x))", "all x.(Grimpus(x) -> Implicator(x))", "all x.(Grimpus(x) -> Imperium(x))", "all x.(Grimpus(x) -> Is(x,y))", "all x.(Grimpus(x) -> IsPrimary(x))", "all x.(Grimpus(x) -> Implicit(x))"]}
{"id": "prontoqa_validation_108", "nl": "Stella is not an impus and Stella is a zumpus and Stella is a rompus.", "fol": "(-impus(Stella) & zumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Rompus(z))))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Rompus(z)))", "(all x.(Stella(x) -> -Issue(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Rompus(z))))", "(all x.(Stella(x) -> -Issue(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Rompus(z))))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Rompus(z)))", "(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x))))", "all x y.((Stella(x) & Stella(y)) -> (-Impossible(x) & Zumpus(y) & Rompus(y)))", "(all x.(Stella(x) -> -Impos(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "(all x.(Stella(x) -> -Issue(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Rompus(z)))", "(all x.(Stella(x) -> -Issue(x)) & all y.(Stella(y) -> Zumpus(y))) & all z.(Stella(z) -> Rompus(z))))", "(all x.(Stella(x) -> -Impossible(x)) & ((Stella(x) & Zumpus(x)) | (Stella(x) & Rompus(x)))))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Tosspus(y)) & all z.(Stella(z) -> Rompus(z))))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(y)))"]}
{"id": "prontoqa_validation_109", "nl": "Grimpuses are impuses.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Issues(x))", "all x.(Grimpus(x) -> Issue(x))", "all x.(Grimpus(x) -> Ispose(x))", "all x.(Grimpus(x) -> Impose(x))", "all x.(Grimpus(x) -> Impossible(x))", "all x.(Grimpse(x) -> Issue(x))", "all x.(Grimpus(x) -> Imperium(x))", "all x.(Gruppuse(x) -> Issue(x))", "all x.(Gripper(x) -> Issue(x))", "all x.(Grimpus(x) -> Impermissible(x))", "all x.(Grimpuse(x) -> Issues(x))", "all x.(Grimpus(x) -> Issues(x))", "all x.(Grimpuse(x) -> Ispose(x))", "all x.(Grimpuse(x) -> Impose(x))"]}
{"id": "prontoqa_validation_110", "nl": "Polly is not an impus, Polly is a brimpus, and Polly is a numpus.", "fol": "(-impus(Polly) & brimpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x.(Polly(x) -> -Impossible(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> -Impossible(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x))))", "(all x.(Polly(x) -> -Issue(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x.(Polly(x) -> -Issue(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> Numpus(z))))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> Numpus(z)))", "(all x.(Polly(x) -> -Issue(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x))))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Poly(z) -> Numpus(z))))", "(all x.(Polly(x) -> -Impossible(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Issue(x) & Brimpus(y) & Numpus(z)))", "(all x.(Poly(x) -> -Impossible(x)) & all y.(Poly(y) -> Brimpus(y)) & all z.(Poly(z) -> Numpus(z))))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> Numpus(z))))"]}
{"id": "prontoqa_validation_111", "nl": "Every jompus is a zumpus.", "fol": "all x. (jompus(x) -> zumpus(x))", "prediction": ["all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jumpus(x) -> Zumpus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jomess(x) -> Zumpus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> Is(x,y))", "all x.(Jompus(x) -> Zurpus(x))", "exists x.(Jompus(x) & Zumpus(x))", "all x.(Jampus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Tompus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> HasBeen(x,y))", "all x y.((Jompus(x) & Zumpus(y)) -> HasTompus(x,y))", "all x y.((Jompus(x) & Zumpus(y)) -> Becomes(x,y))", "all x.(Joompus(x) -> Zumpus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> HasJompus(x,y))"]}
{"id": "prontoqa_validation_112", "nl": "Fae is not a zumpus, Fae is a shumpus, and Fae is a numpus.", "fol": "(-zumpus(Fae) & shumpus(Fae) & numpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Numpus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & Shumpus(y) & Numpus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> (Shumpus(y) & Numpus(y))))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> Humpus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> shumpus(x)) & (Fae(x) -> Numpus(x)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> -Shumpus(y))) & all z.(Fae(z) -> Numpus(z)))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Tompus(x)) & ((Fae(z) & Humpus(z))) -> Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> -Shumpus(y)) & all z.(Fae(z) -> Numpus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Shumpus(z)))", "(all x.(Fae(x) -> -Tompus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Numpus(x)))"]}
{"id": "prontoqa_validation_113", "nl": "Brimpuses are lempuses.", "fol": "all x. (brimpus(x) -> lempus(x))", "prediction": ["all x.(Brompus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Birmuse(x) -> Lempuse(x))", "all x.(Brimuse(x) -> Lempuse(x))", "all x.(Brimbus(x) -> Lempuse(x))", "all x.(Brombus(x) -> Lempuse(x))", "all x.(Brumpus(x) -> Lempuse(x))", "all x.(Brimbus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempus(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempus(x))", "all x.(Brumpuse(x) -> Lempuse(x))", "all x.(Brimuse(x) -> Lempuse(x))", "all x.(Bridge(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_114", "nl": "Wren is a yumpus, Wren is a shumpus, and Wren is not a lempus.", "fol": "(yumpus(Wren) & shumpus(Wren) & -lempus(Wren))", "prediction": ["(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Shumpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x))))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> -Lempus(z))))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> -Lempus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "(all x.(Wren(x) -> Yampus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> -Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x))))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x))))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> -Lempus(x)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))"]}
{"id": "prontoqa_validation_115", "nl": "Wren is not a brimpus.", "fol": "-brimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brumpus(x))", "all x.(Wren(x) -> -Brompus(x))", "All x.(Wren(x) -> -Brimpus(x))", "all x.((Wren(x) & -Brimpus(x)) -> -Brimpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "exists x.(Wren(x) & -Brimpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "all x.((Wren(x) & -Brimpus(x)) -> -Brumpus(x))", "all x.((Wren(x) & -Brimpus(x)) -> -Brompus(x))", "(-Brimpus(Wren))", "All x.(Wren(x) -> -Brumpus(x))", "(all x.(Wren(x) -> -Brimpus(x)))", "all x.(Wren(x) -> -Brumpus(x))", "exists x.(Wren(x) & -Brumpus(x))", "all x.(Wren(x) & -Brimpus(x))"]}
{"id": "prontoqa_validation_116", "nl": "Shumpuses are sterpuses.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shupuse(x) -> Sterpuse(x))", "all x.(Shampus(x) -> Sterpuse(x))", "all x.(Shuppus(x) -> Sterpuse(x))", "all x.(Shimpus(x) -> Sterpuse(x))", "all x.(Shupus(x) -> Sterpuse(x))", "all x.(Shuppe(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shutus(x) -> Sterpuse(x))", "all x.(Shumpuse(x) -> Sterpuse(x))", "all x.(Shumpuse(x) -> Sterpuse(x))", "all x.(Sshumpuse(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Steroid(x))", "all x.(Shampoo(x) -> Sterpuse(x))", "all x.(Shumpus(x) -> Sterus(x))"]}
{"id": "prontoqa_validation_117", "nl": "Wren is not a sterpus, Wren is a yumpus, and Wren is a numpus.", "fol": "(-sterpus(Wren) & yumpus(Wren) & numpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yampus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) | Numpus(x))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yuppus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpsum(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yampus(y))) & all z.(Wren(z) -> Numpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> Numpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> Numpus(z)))", "(all x.(Wren(x) -> -Sterepus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) & Numpus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yampus(y))) & all z.(Wren(z) -> Numpus(z))))", "all x y z.((Wren(x) & Yumpus(y) & Numpus(z)) -> (-Sterpus(x) & -Yumpus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y))) & all z.(Wren(z) -> Numpus(z))))"]}
{"id": "prontoqa_validation_118", "nl": "Wren is not a shumpus.", "fol": "-shumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "all x.((Wren(x) & -Shumpus(x)) -> -Shumpus(x))", "All x.(Wren(x) -> -Shumpus(x))", "exists x.(Wren(x) & -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "all x y.((Wren(x) & Humpback(y)) -> -Shumpus(x))", "all x y.((Wren(x) & Shumpus(y)) -> -Shumpus(x))", "(all x.(Wren(x) -> -Shumpus(x)))", "all x.(Wren(x) & -Shumpus(x))", "all x.(Wren(x) -> (-Shumpus(x)))", "(Shumpus(Wren) & -Shumpus(Wren))", "(-Shumpus(Wren) & -Shumpus(Wren))", "-Shumpus(Wren)", "ALL x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -shumpus(x))"]}
{"id": "prontoqa_validation_119", "nl": "Gorpuses are rompuses.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompuse(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompuse(x))", "all x.(Gorpuse(x) -> Rompuse(x))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpuse(x) & Rompus(y)) -> Rompus(x))", "all x.(Rompus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompuse(x))", "all x y.((Gorpuse(x) & Rompus(y)) -> Is(x,y))", "all x.(Orpheus(x) -> Rompus(x))", "all x.((Gorpuse(x) & Rompus(x)) -> IsRompus(x))"]}
{"id": "prontoqa_validation_120", "nl": "Sam is a shumpus and Sam is a numpus and Sam is not a rompus.", "fol": "(shumpus(Sam) & numpus(Sam) & -rompus(Sam))", "prediction": ["all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Numpus(y) & -Rompus(y)))", "all x y z.((Sam(x) & Sam(y) & Sam(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & Numpus(z) & -Rompus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z))))", "all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Rompus(x)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & -Rompus(x)))", "all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & Numpus(z) & -Rompus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z))))", "all x y z.((Shumpus(x) & Numpus(y) & Sam(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Nompus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z))))", "(all x.(Sam(x) -> Shumpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Rompus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z)))", "all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & Numpus(x) & -Rompus(x)))", "all x y z.((Sam(x) & Shumpus(y) & Numpus(z)) -> (Sam(x) & -Rompus(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z)))"]}
{"id": "prontoqa_validation_121", "nl": "Sam is not a gorpus.", "fol": "-gorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "all x.((Sam(x) & -Gorpus(x)) -> -Gorpus(x))", "all x.((Sam(x) & -Gorpus(x)) -> -Gorpus(x))", "(-Gorpus(Sam))", "all x.((Sam(x) & -Gorpus(x)) -> -Gorpus(x))", "all x.((Sam(x) & -Gorpus(x)) -> -Sam(x))", "All x.(Sam(x) -> -Gorpus(x))", "exists x.(Sam(x) & -Gorpus(x))", "all x.((Sam(x) & -Gorpus(x)) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "all x.((Sam(x) & -Gorpus(x)) -> -(Gorpus(x) & Gorpus(x)))", "all x.((Sam(x) & -Gorpus(x)) -> -(Sam(x) & Gorpus(x)))", "all x.((Sam(x) & -Gorpus(x)) -> -Sam(x))", "all x.((Sam(x) & -Gorpus(x)) -> -(Gorpus(x) & Gorpus(x))))", "all x.((Sam(x) & -Gorpus(x)) -> -(Gorpus(x) | Gorpus(x))))"]}
{"id": "prontoqa_validation_122", "nl": "Vumpuses are sterpuses.", "fol": "all x. (vumpus(x) -> sterpus(x))", "prediction": ["all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Steroid(x))", "all x.(Vumpuse(x) -> Sterpuse(x))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterus(x))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Vumpus(x) -> (Sterpuse(x) & Sterpuse(x)))", "all x y.((Vumpus(x) & Sterpuse(y)) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterepuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> sterpuse(x))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpuse(x,y))", "all x y.((Vumpus(x) & Steroid(y)) -> Sterpuse(x))", "all x.(Vumpus(x) -> Steropod(x))"]}
{"id": "prontoqa_validation_123", "nl": "Sally is not a sterpus and Sally is a lorpus and Sally is a zumpus.", "fol": "(-sterpus(Sally) & lorpus(Sally) & zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Sterpus(x)) & all y.(Sally(y) -> Lorpus(y)) & all z.(Sally(z) -> Zumpus(z))))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & Lorpus(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Sterpus(x)) & (Sally(x) -> Lorpus(x)) & (Sally(x) -> Zumpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & Lorpus(y) & Zumpus(z)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & -Lorpus(x) & -Zumpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & -Lorpus(y) & -Zumpus(z)))", "(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) & Zumpus(x)))", "(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) | Zumpus(x))))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Sally(y) -> Lorpus(y)) & all z.(Sally(z) -> Zumpus(z)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Sally(y) -> Lorpus(y))) & all z.(Sally(z) -> Zumpus(z)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) -> Zumpus(y)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & All z.(Zumpus(z))) -> -Sterpus(x)))", "(all x.(Sally(x) -> -Sterpus(x)) & ((Sally(x) & Lorpus(x)) & ((Sally(x) & Zumpus(x)))))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & -Lorpus(x) & -Stompus(x)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & All z.(Zumpus(z))) -> -Sterpus(x)))", "all x.(Sally(x) -> (-Sterpus(x) & -Lorpus(x) & -Zumpus(x)))"]}
{"id": "prontoqa_validation_124", "nl": "Sally is not a vumpus.", "fol": "-vumpus(Sally)", "prediction": ["Sally is not a vumpus.", "all x.(Sally(x) -> -Vumpus(x))", "all x.(Sally(x) -> -Vimpus(x))", "all x.(Sally(x) -> -Vumpus(x))", "All x.(Sally(x) -> -Vumpus(x))", "Sally is not a Vumpus.", "Sally -Vumpus(Sally)", "Sally n'est pas vumpus.", "All x.(Sally(x) -> -Vimpus(x))", "All x.(Sally(x) -> -Vumpus(x))", "Sally is not a Vumpus(Sally)", "Sally & -Vumpus(Sally)", "all x.(Sally(x) -> -Vampus(x))", "Sally n\u2019est pas vumpus.", "Sally -Vimpus(Sally)", "(-Vumpus(Sally))"]}
{"id": "prontoqa_validation_125", "nl": "Every wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Is(x,y))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "exists x.(Wumpus(x) & Brimpus(x))", "all x.(Wumpus(x) -> Brumpus(x))", "all x.(Wumpus(x) -> Brumpus(x))", "all x.((Wumpus(x) & Brimpus(x)) -> HasWumpus(x))", "all x.(Wumpus(x) -> Birmpus(x))", "(all x.(Wumpus(x) -> Brimpus(x)))", "all x y.((Wumpus(x) & Brimpus(y)) -> HasWumpus(x,y))", "all x.(Wumpus(x) -> Brampus(x))", "all x.(Wumpus(x) & Brimpus(x))", "all x.((Wumpus(x) & Brimpus(x)) -> HasBrimpus(x))", "all x.(Wempus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> HasBrimpus(x,y))"]}
{"id": "prontoqa_validation_126", "nl": "Rex is not a brimpus and Rex is a numpus and Rex is a sterpus.", "fol": "(-brimpus(Rex) & numpus(Rex) & sterpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Sterpus(z))))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(y) & Sterpus(z)))", "(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x))))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Nompus(y) & Sterpus(y))))", "(all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> -Brimpus(x)) & ((Rex(x) & Sterpus(x)) -> Sterpus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Nompus(y) & Sterpus(y)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Sterepus(z))))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y))) & all z.(Rex(z) -> Sterpus(z)))", "(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterepus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y))) & all z.(Rex(z) -> Sterpus(z))))", "(all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> -Brimpus(x)) & ((Rex(x) & Numpus(x)) -> Sterpus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Sterpus(z)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.((Rex(y) & Numpus(y))) -> Sterpus(y)))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & -Numpus(x) & -Sterpus(x)))"]}
{"id": "prontoqa_validation_127", "nl": "Numpuses are yumpuses.", "fol": "all x. (numpus(x) -> yumpus(x))", "prediction": ["all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpuse(x) -> Yumpus(x))", "all x.(Numpuse(x) -> Yampus(x))", "all x.(Numpuse(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yumpuse(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpuse(x) -> Yumpuse(x))", "all x y.((Numpus(x) & Yumpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Yampuse(x))", "all x.(Numpus(x) -> Yupus(x))", "all x y.((Numpus(x) & Yumpus(y)) -> Yampus(x))", "all x.(Numpus(x) -> Yumpa(x))", "all x y.((Numpus(x) & Yumpus(y)) -> Yumpus(x))"]}
{"id": "prontoqa_validation_128", "nl": "Fae is not a yumpus, Fae is an impus, and Fae is a shumpus.", "fol": "(-yumpus(Fae) & impus(Fae) & shumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Shumpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Humpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Shumpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Impossible(y)) & all z.(Fae(z) -> Humpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Impossible(x)) & (Fae(x) -> Humpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Humpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> (Shumpus(z)))))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Impossible(y)) & all z.(Fae(z) -> Humpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Impossible(x)) & (Fae(x) -> Shumpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Shumpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Ispose(y)) & all z.(Fae(z) -> Humpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Impossible(y)) & all z.(Fae(z) -> Shumpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Ispose(y)) & all z.(Fae(z) -> Shumpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Shumpus(z))))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y))) & all z.(Fae(z) -> (Shumpus(z)))))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Humpus(x))))"]}
{"id": "prontoqa_validation_129", "nl": "Fae is not a numpus.", "fol": "-numpus(Fae)", "prediction": ["all x.(Fae(x) -> -Numpus(x))", "all x.(Fae(x) -> -Numpus(x))", "all x.(Fae(x) -> -numpus(x))", "exists x.(Fae(x) & -Numpus(x))", "all x.(Fae(x) -> -Nompus(x))", "all x.(Fae(x) -> -Numpus(x))", "(-numpus(Fae))", "All x.(Fae(x) -> -Numpus(x))", "(Numpus(Fae) & -Numpus(Fae))", "all x.(Fae(x) -> -Numpus(x))", "all x.(Fae(x) -> -Number(x))", "exists x.(Fae(x) & -Numpus(x))", "-numpus(Fae)", "-Numpus(Fae)", "exists x.(Fae(x) & -numpus(x))", "all x.(Fae(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_130", "nl": "Every sterpus is a wumpus.", "fol": "all x. (sterpus(x) -> wumpus(x))", "prediction": ["all x.(Sterpus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Sterepus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wampus(x))", "all x.(Sterpus(x) -> Wompus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Strohpus(x) -> Wumpus(x))", "all x.(Sterus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wampus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wempus(x))", "all x.(Steerpus(x) -> Wompus(x))", "all x.(Starpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Hush(x))", "all x.(Streep(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_131", "nl": "Sam is a vumpus and Sam is not a wumpus and Sam is a lorpus.", "fol": "(vumpus(Sam) & -wumpus(Sam) & lorpus(Sam))", "prediction": ["(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Sam(y) -> -Wumpus(y)) & all z.(Sam(z) -> Lorpus(z))))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Sam(y) -> -Wumpus(y))) & all z.(Sam(z) -> Lorpus(z)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x))))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Sam(y) -> -Wumpus(y))) & all z.(Sam(z) -> Lorpus(z))))", "all x y.((Sam(x) & Vumpus(x) & Sam(y)) -> (-Wumpus(y) & -Lorpus(y)))", "(all x.(Sam(x) -> Vumpus(x)) & (-Wumpus(x) & -Lorpus(x)))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Wumpus(y) & Lorpus(z)))", "all x y.((Sam(x) & Vumpus(x) & Sam(y)) -> (-Wumpus(y) & Lorpus(y)))", "(all x.(Sam(x) -> Vumpus(x)) & ((Sam(x) & -Wumpus(x))) | (-Sam(x) & Lorpus(x))))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Wumpus(y) & -Lorpus(y)))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Vumpus(y) & -Wumpus(y) & -Lorpus(y)))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Vumpus(y) & -Wumpus(y) & -Lorpus(z)))", "(all x.(Sam(x) -> Vumpus(x)) & all y.(Sam(y) -> -Wumpus(y)) & all z.(Lorpus(z) -> Vumpus(z))))", "(all x.(Sam(x) -> Vumpus(x)) & ((Sam(x) & -Wumpus(x))) | (Sam(x) & Lorpus(x))))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & -Wumpus(y)) -> (Lorpus(z)))"]}
{"id": "prontoqa_validation_132", "nl": "Sam is not a sterpus.", "fol": "-sterpus(Sam)", "prediction": ["all x.(Sam(x) -> -Sterpus(x))", "all x.(Sam(x) -> -Sterepus(x))", "all x.((Sam(x) & -Sterpus(x)) -> -Sterpus(x))", "all x.(Sam(x) -> -Steerpus(x))", "all x.((Sam(x) & -Sterpus(x)) -> -Sterpus(x))", "all x.((Sam(x) & -Sterepus(x)) -> -Sterpus(x))", "all x.(Sam(x) -> -Sterpus(x))", "All x.(Sam(x) -> -Sterpus(x))", "all x.(Sam(x) -> -Sterpus(x))", "all x.((Sam(x) & -Sterepus(x)) -> -Sterepus(x))", "exists x.(Sam(x) & -Sterpus(x))", "all x.((Sam(x) & -Sterepus(x)) -> -Sam(x))", "all x.((Sam(x) & -Sterepus(x)) -> -Sterpus(x))", "(-Sterpus(Sam))", "all x.(Sam(x) -> -Sterpus(x))", "all x.(Sam(x) -> -Sterus(x))"]}
{"id": "prontoqa_validation_133", "nl": "Tumpuses are zumpuses.", "fol": "all x. (tumpus(x) -> zumpus(x))", "prediction": ["all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpuse(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumulus(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zurpus(x))", "all x.(Tumulus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Tompus(x))", "all x.(Tompus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zurpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Mumpus(x) -> Zumpus(x))", "all x.((Tumpus(x) & Zumpus(x)) -> Tompus(x))"]}
{"id": "prontoqa_validation_134", "nl": "Sam is a rompus, Sam is not a zumpus, and Sam is a dumpus.", "fol": "(rompus(Sam) & -zumpus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Tompus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Dumpus(z)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> -Zumpus(y)) & all z.(Sam(z) -> Dumpus(z))))", "all x y z.((Sam(x) & Rompus(x) & Zumpus(y) & Dumpus(z)) -> (Rompus(x) & -Zumpus(y) & Dumpus(z)))", "all x y z.((Sam(x) & Rompus(x) & Zumpus(y) & Dumpus(z)) -> (Rompus(x) & -Tompus(y) & Dumpus(z)))", "(all x.(Sam(x) -> Rompus(x)) & (-Sam(x) -> Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (-Sam(x) -> Zumpus(x)) & (-Sam(x) -> Dumpus(x)))", "all x y z.((Rompus(x) & Zumpus(y) & Dumpus(z)) -> (Rompus(x) & -Tompus(y) & Dumpus(z)))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> -Zumpus(y))) & all z.(Sam(z) -> Dumpus(z))))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Dumpus(z)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x))))", "(all x.(Sam(x) -> Rompus(x)) & all y.(Sam(y) -> -Tompus(y))) & all z.(Sam(z) -> Dumpus(z)))", "all x y z.((Rompus(x) & Zumpus(y) & Dumpus(z)) -> (Rompus(x) & -Zumpus(y) & Dumpus(z)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Dumpus(z)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_validation_135", "nl": "Tumpuses are jompuses.", "fol": "all x. (tumpus(x) -> jompus(x))", "prediction": ["all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumulus(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jombus(x))", "all x.(Tumpuse(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumult(x) -> Jompuse(x))", "all x.(Tumulus(x) -> Jompus(x))", "all x.(Tumper(x) -> Jompuse(x))", "all x.(Tumulus(x) -> Jombus(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jombus(x))", "all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jomuse(x))", "all x y.((Tumpuse(x) & Jompus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_136", "nl": "Polly is a lorpus, Polly is not a jompus, and Polly is a dumpus.", "fol": "(lorpus(Polly) & -jompus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Jompus(y))) & all z.(Polly(z) -> Dumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Jompus(y)) & all z.(Polly(z) -> Dumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Jompus(y))) & all z.(Polly(z) -> Dumpus(z))))", "(all x.(Polly(x) -> Llorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jimpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x))))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Loomis(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Poly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x))) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(y) & Dumpus(z)))", "(all x y z.(Polly(x) -> Lorpus(x)) & (Polly(y) -> -Jompus(y)) & (Polly(z) -> Dumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(x) & Dumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Poly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_137", "nl": "Polly is not a tumpus.", "fol": "-tumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Tumpus(x))", "all x.((Polly(x) & -Tumpus(x)) -> -Tumpus(x))", "(-Tumpus(Polly))", "all x.(Polly(x) -> -Tumpus(x))", "all x.(Polly(x) -> -Tumpus(x))", "All x.(Polly(x) -> -Tumpus(x))", "exists x.(Polly(x) & -Tumpus(x))", "all x.(Poly(x) -> -Tumpus(x))", "all x.(Tumpus(x) -> -Tumpus(x))", "all x.(Polly(x) -> -Tumpus(x))", "all x.(Polly(x) -> -Tompus(x))", "all x.(Tumpus(x) -> Polly(x))", "all x.((Polly(x) & -Tumpus(x)) -> -Tompus(x))", "-Tumpus(Polly)", "all x.((Polly(x) & -Tumpus(x)) -> Polly(x))", "all x.((Polly(x) & -Tumpus(x)) -> -Tumpback(x))"]}
{"id": "prontoqa_validation_138", "nl": "Every vumpus is a rompus.", "fol": "all x. (vumpus(x) -> rompus(x))", "prediction": ["all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vimpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x y.((Vumpus(x) & Rompus(y)) -> Is(x,y))", "exists x.(Vumpus(x) & Rompus(x))", "all x.(Vumpus(x) -> Roma(x))", "all x.((Vumpus(x) & Rompus(x)) -> HasVumpus(x))", "all x.(Vumpus(x) -> Roman(x))", "all x y.((Vumpus(x) & Rompus(y)) -> Has(x,y))", "all x y.((Vumpus(x) & Rompus(y)) -> HasVumpus(x,y))", "all x.((Vumpus(x) & Rompus(x)) -> Vumpus(x))", "all x.(Vumpus(x) -> Romanus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.((Vumpus(x) & Rompus(x)) -> Is(x,y))", "all x.((Vumpus(x) & Rompus(x)) -> -Vumpus(x))"]}
{"id": "prontoqa_validation_139", "nl": "Alex is a jompus, Alex is a sterpus, and Alex is not a rompus.", "fol": "(jompus(Alex) & sterpus(Alex) & -rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Rompus(z))))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & -Rompus(y)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Rompus(x)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Rompus(x))))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) & Sterpus(y) & -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Rompus(x)))", "(all x.(Alexa(x) -> Jompus(x)) & all y.(Alexa(y) -> Sterpus(y)) & all z.(Alexa(z) -> -Rompus(z))))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterepus(y)) & all z.(Alex(z) -> -Rompus(z))))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y))) & all z.(Alex(z) -> -Rompus(z))))", "(all x y z.(Alex(x) -> Jompus(x)) & (Alex(y) -> Sterpus(y)) & (Alex(z) -> -Rompus(z))))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) | Sterpus(y) & -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y))) & all z.(Alex(z) -> -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterepus(y)) & -Rompus(y)))", "all x y z.((Alex(x) & Jompus(x) & Sterepus(y) & -Rompus(z)) -> (Jompus(x) & Sterpus(y) & -Rompus(z)))"]}
{"id": "prontoqa_validation_140", "nl": "Alex is not a vumpus.", "fol": "-vumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vimpus(x))", "All x.(Alex(x) -> -Vumpus(x))", "All x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vampus(x))", "all x.(Alex(x) -> -Voompus(x))", "Alex is not a vumpus.", "All x.(Alex(x) -> -Vimpus(x))", "all x.(Alex(x) & -Vumpus(x))", "all x.(Alex(x) -> -Vampus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) & -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Umpus(x))", "all x.(Alex(x) -> -Volumpus(x))"]}
{"id": "prontoqa_validation_141", "nl": "Every dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "all x.(Dupus(x) -> Wumpus(x))", "all x.(Dumps(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wompus(x))", "exists x.(Dumpus(x) & Wumpus(x))", "all x.(Dumpus(x) -> Humpus(x))", "all x.(Dumpus(x) -> Wempus(x))", "all x.(Dumpus(x) -> Wampus(x))", "all x.(Dumpus(x) -> Hush(x))", "all x.(Dumpus(x) -> wumpus(x))", "(all x.(Dumpus(x) -> Wumpus(x)))", "all x.(Dumpus(x) -> Wumus(x))"]}
{"id": "prontoqa_validation_142", "nl": "Alex is not a wumpus, Alex is a yumpus, and Alex is a zumpus.", "fol": "(-wumpus(Alex) & yumpus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yampus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yampus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yampus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yumpus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yampus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & -Yumpus(y) & -Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z)))", "(all x y z.(Alex(x) -> -Wumpus(x)) & (Alex(y) -> Yumpus(y)) & (Alex(z) -> Zumpus(z)))"]}
{"id": "prontoqa_validation_143", "nl": "Alex is not a dumpus.", "fol": "-dumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Dumpus(x))", "All x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dumus(x))", "Alex is not a Dumpus.", "ALL x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dumus(x))", "all x.(Alex(x) & -Dumpus(x))", "all x.(Alex(x) -> -Dumpus(x))", "(-Dumpus(Alex))", "all x.(Alex(x) -> -Dumpedus(x))", "all x.(Alex(x) -> -Dumpsus(x))", "all x.(Alex(x) -> -Duskus(x))", "all x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dupus(x))", "Alex is not a Dumpus(Alex)", "All x.(Alex(x) -> -Dumus(x))"]}
{"id": "prontoqa_validation_144", "nl": "Every lempus is a jompus.", "fol": "all x. (lempus(x) -> jompus(x))", "prediction": ["all x.(Lempus(x) -> Jompus(x))", "all x.(Limpus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "exists x.(Lempus(x) & Jompus(x))", "all x y.((Lempus(x) & Jompus(y)) -> Is(x,y))", "all x y.((Lempus(x) & Jompus(y)) -> Has(x,y))", "all x y.((Lempus(x) & Jompus(y)) -> HasLempus(x,y))", "all x.((Lempus(x) & Jompus(x)) -> HasLempus(x))", "all x.exists y.(Lempus(x) & Jompus(y))", "all x.(Lempus(x) -> Jompus(x))", "(all x.(Lempus(x) -> Jompus(x)))", "all x.(Lampus(x) -> Jompus(x))", "all x y.((Lempus(x) & Jompus(y)) -> Becomes(x,y))", "all x.exists y.(Lempus(x) & Jompus(y) & HasLempus(x,y))", "all x y.((Lempus(x) & Jompus(y)) -> HasBeen(x,y))", "all x y.((Lempus(x) & Jompus(y)) -> -Lempus(x))"]}
{"id": "prontoqa_validation_145", "nl": "Max is a sterpus and Max is not a jompus and Max is a yumpus.", "fol": "(sterpus(Max) & -jompus(Max) & yumpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Jompus(y))) & all z.(Max(z) -> Yumpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) & -Jompus(x)) | (-Max(x) & Yumpus(x)))))", "(all x.(Max(x) -> Sterepus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Jompus(x))) & ((Max(x) -> Yumpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & (-Jompus(x) & -Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Jompus(y))) & all z.(Max(z) -> Yumpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) & -Jompus(x))) | (-Max(x) & Yumpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & all y.((Max(y) & -Jompus(y))) -> Yumpus(y)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Jompus(y))) & all z.(Max(z) -> Yumpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & (-Jompus(x)) | (-Jompus(x) & Yumpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & (-Jompus(x) & (Yumpus(x) | -Jompus(x))))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Jompus(x))) | (-Max(x) -> Yumpus(x))))", "all x.(Max(x) -> (Sterpus(x) & -Jompus(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_146", "nl": "Max is not a lempus.", "fol": "-lempus(Max)", "prediction": ["all x.(Max(x) -> -Lempus(x))", "all x.(Max(x) -> -Limpus(x))", "All x.(Max(x) -> -Lempus(x))", "-Lempus(Max)", "(-Lempus(Max))", "all x.(Max(x) -> -lempus(x))", "All x.(Max(x) -> -Limpus(x))", "all x.(Max(x) -> -Lumpus(x))", "(-lempus(Max))", "all x.(Max(x) -> -Lempus(x))", "all x.(Max(x) -> -Lampus(x))", "all x.(Max(x) -> -Limes(x))", "all x.(Max(x) -> -Lempus(x))", "-lempus(Max)", "all x.(Max(x) & -Lempus(x))", "-Limpus(Max)"]}
{"id": "prontoqa_validation_147", "nl": "Each yumpus is a zumpus.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "all x y.((Yumpus(x) & Zumpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(Yumpus(x) & Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> HasYumpus(x,y))", "all x.(Yumpus(x) -> Zurpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> HasTompus(x,y))", "all x.(yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Contains(x,y))", "all x.((Yumpus(x) & Zumpus(x)) -> HasYumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> HasBeen(x,y))", "all x y.((Yumpus(x) & Zumpus(y)) -> HasTompus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Becomes(x,y))", "all x y.((Yumpus(x) & Zumpus(y)) -> HasYumpus(x))", "all x.exists y.(Yumpus(x) & Zumpus(y))"]}
{"id": "prontoqa_validation_148", "nl": "Rex is a rompus, Rex is a dumpus, and Rex is not a zumpus.", "fol": "(rompus(Rex) & dumpus(Rex) & -zumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Zumpus(z))))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x)))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) & Dumpus(y) & -Zumpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x))))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Tompus(z))))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & -Zumpus(x)))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) | Dumpus(y) & -Zumpus(z)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) & Dumpus(y) & -Rompus(z)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & -Tompus(x)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Zumpus(z)))", "(all x.(Rompus(x) -> Rex)) & all y.(Dumpus(y) -> Rex)) & all z.(Tompus(z) -> -Rex)))", "(all x y z.(Rex(x) -> Rompus(x)) & (Rex(y) -> Dumpus(y)) & (Rex(z) -> -Zumpus(z))))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) & Dumpus(y) & -Tompus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Dumpus(y) -> -Zumpus(y)))", "(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Tompus(x)))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) & Dumpus(z) & -Zumpus(z)))"]}
{"id": "prontoqa_validation_149", "nl": "Rex is not a yumpus.", "fol": "-yumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Yumpus(x))", "All x.(Rex(x) -> -Yumpus(x))", "(-Yumpus(Rex))", "Rex is notYumpus(x)", "-Yumpus(Rex)", "(Yumpus(Rex) & -Yumpus(Rex))", "all x.(Rex(x) -> -Yumpus(x))", "Rex.(Yumpus(x) -> -Yumpus(x))", "(-Yumpus(Rex) & -Yumpus(Rex))", "Rex.(Yumpus(x) & -Yumpus(x))", "Rex.(Yumpus(x) -> -Yumpus(x))", "all x.(Rex(x) -> -yumpus(x))", "All x.(Rex(x) -> -Yumpus(x))", "all x.(Rex(x) -> (-Yumpus(x)))", "all x.(Rex(x) -> NoYumpus(x))", "Rex is notyumpus."]}
{"id": "prontoqa_validation_150", "nl": "Tumpuses are impuses.", "fol": "all x. (tumpus(x) -> impus(x))", "prediction": ["all x.(Tumulus(x) -> Issue(x))", "all x.(Tumult(x) -> Issue(x))", "all x.(Tumpuse(x) -> Issue(x))", "all x.(Tumpus(x) -> Issue(x))", "all x.(Tumulus(x) -> Issues(x))", "all x.(Tump(x) -> Issue(x))", "all x.(Tumult(x) -> Issues(x))", "all x.(Tumpuse(x) -> Issues(x))", "all x.(Tumpus(x) -> Issues(x))", "all x.(Tumpus(x) -> Issue(x))", "all x.(Tumper(x) -> Issue(x))", "all x.(Tump(x) -> Issues(x))", "all x.(Tumulus(x) -> Isolated(x))", "all x.(Tumpuse(x) -> Isolated(x))", "all x.(Tumult(x) -> Isolated(x))", "all x.(Tumulus(x) -> Impose(x))"]}
{"id": "prontoqa_validation_151", "nl": "Sally is a jompus and Sally is a dumpus and Sally is not an impus.", "fol": "(jompus(Sally) & dumpus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Impossible(z))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Impossible(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Issue(z))))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Illegal(z))))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Issue(z))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & -Impossible(x)))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y) & -Impossible(z)) -> (Jompus(x) & Dumpus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Illegal(z))))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Issue(x)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Imperial(z))))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y))) & all z.(Sally(z) -> -Issue(z)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Illegal(x))))"]}
{"id": "prontoqa_validation_152", "nl": "Sally is not a tumpus.", "fol": "-tumpus(Sally)", "prediction": ["all x.(Sally(x) -> -Tumpus(x))", "Sally is not a tumpus.", "All x.(Sally(x) -> -Tumpus(x))", "Sally -Tumpus(Sally)", "Sally is not a Tumpus.", "Sally & -Tumpus(Sally)", "(-Tumpus(Sally))", "Sally is notTumpus(Sally)", "all x.(Sally(x) -> -Tumpus(x))", "Sally is -Tumpus(Sally)", "Sally n'est pasTumpus(Sally)", "Sally is not a Tumpus(Sally)", "Sally is not tumpus.", "Sally -Tumpus(s)", "all x.(Sally(x) -> -Tompus(x))", "all x.(Sally(x) & -Tumpus(x))"]}
{"id": "prontoqa_validation_153", "nl": "Each zumpus is a vumpus.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Zumpus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Voompus(x))", "all x.(Tompus(x) -> Voompus(x))", "all x.(Zumpus(x) -> Vampus(x))", "all x.(Tompus(x) -> Vampus(x))", "all x.(Tommus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vulmpus(x))", "all x.(Sumpus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vulmpus(x))", "all x.(Tommy(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vampire(x))", "all x.(Zumpus(x) -> Vampire(x))", "all x.(Zumpus(x) -> Vampum(x))"]}
{"id": "prontoqa_validation_154", "nl": "Sally is not a vumpus and Sally is a yumpus and Sally is a dumpus.", "fol": "(-vumpus(Sally) & yumpus(Sally) & dumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Sally(x) -> -Vumpus(x)) & (Yumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & (Yumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y)) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z))))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & Yumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z))))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z))))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(x) & -Dumpus(x)))"]}
{"id": "prontoqa_validation_155", "nl": "Sally is not a zumpus.", "fol": "-zumpus(Sally)", "prediction": ["Sally is not a zumpus.", "all x.(Sally(x) -> -Zumpus(x))", "All x.(Sally(x) -> -Zumpus(x))", "all x.(Sally(x) -> -Tompus(x))", "all x.(Sally(x) -> -Zombipus(x))", "Sally & -Zumpus(Sally)", "All x.(Sally(x) -> -Tompus(x))", "(-Zumpus(Sally))", "Sally -Zumpus(Sally)", "all x.(Sally(x) -> -Zombie(x))", "Sally is -Zumpus(Sally)", "all x.(Sally(x) -> -Zimpus(x))", "All x.(Sally(x) -> -Zombipus(x))", "Sally n'est pas zumpus.", "all x.(Sally(x) -> -Zombip(x))", "Sally is not zumpus."]}
{"id": "prontoqa_validation_156", "nl": "Every jompus is a rompus.", "fol": "all x. (jompus(x) -> rompus(x))", "prediction": ["all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jumpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jomess(x) -> Rompus(x))", "all x y.((Jompus(x) & Rompus(y)) -> Is(x,y))", "exists x.(Jompus(x) & Rompus(x))", "all x y.((Jompus(x) & Rompus(y)) -> Has(x,y))", "all x.(Jampus(x) -> Rompus(x))", "all x.(Jomes(x) -> Rompus(x))", "all x.(Joompus(x) -> Rompus(x))", "all x y.((Jompus(x) & Rompus(y)) -> Becomes(x,y))", "all x.(Jompus(x) -> Rompus(x))", "(all x.(Jompus(x) -> Rompus(x))", "(all x.(Jompus(x) -> Rompus(x)))", "all x.(Jompus(x) -> Roman(x))"]}
{"id": "prontoqa_validation_157", "nl": "Alex is not a rompus and Alex is a zumpus and Alex is a shumpus.", "fol": "(-rompus(Alex) & zumpus(Alex) & shumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Humpus(z)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Humpus(z))))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(y) & Humpus(z)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(x) & Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Shumpus(z))))", "(all x.(Alex(x) -> -rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x))))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Shumpus(z)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(x) & Humpus(y)))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Shumpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Shumpus(z))))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Shumpus(z))))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-rompus(x) & Zumpus(y) & Humpus(z)))"]}
{"id": "prontoqa_validation_158", "nl": "Alex is not a jompus.", "fol": "-jompus(Alex)", "prediction": ["all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jimpus(x))", "all x.(Alex(x) -> -Jumpus(x))", "All x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jampus(x))", "All x.(Alex(x) -> -Jimpus(x))", "all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Joompus(x))", "All x.(Alex(x) -> -Jumpus(x))", "all x.(Alex(x) & -Jompus(x))", "Alex is not a jompus.", "all x.(Alex(x) -> -Jomess(x))", "all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -jompus(x))", "all x.(Alex(x) & -Jimpus(x))", "all x.(Alex(x) -> -Jombus(x))"]}
{"id": "prontoqa_validation_159", "nl": "Alex is a lorpus and Alex is a grimpus and Alex is not a tumpus.", "fol": "(lorpus(Alex) & grimpus(Alex) & -tumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(x) & Grimpus(y) & -Tumpus(z)) -> (Lorpus(x) & Grimpus(y) & -Tumpus(z)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(z) & -Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y))) & all z.(Alex(z) -> -Tumpus(z)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(x) & Grimpus(y) & Tumpus(z)) -> (Lorpus(x) & Grimpus(y) & -Tumpus(z)))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> -Tumpus(x))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & -Tumpus(y)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Tumpus(x))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & -Alex(x)))", "(all x.(Alex(x) -> Loomis(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & -Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grumpus(x) & -Tumpus(x)))"]}
{"id": "prontoqa_validation_160", "nl": "Alex is not an impus.", "fol": "-impus(Alex)", "prediction": ["all x.(Alex(x) -> -Impossible(x))", "All x.(Alex(x) -> -Impossible(x))", "all x.(Alex(x) -> -Imposer(x))", "all x.(Alex(x) -> -Issue(x))", "All x.(Alex(x) -> -Issue(x))", "All x.(Alex(x) -> -Imposer(x))", "all x.(Alex(x) -> -Impediment(x))", "Alex -Impossible(Alex)", "all x.(Alex(x) -> -Imperial(x))", "All x.(Alex(x) -> -Impediment(x))", "all x.(Alex(x) -> -Illegal(x))", "-Impossible(Alex)", "all x.(Alex(x) -> -Impose(x))", "all x.(Alex(x) -> -Imposible(x))", "All x.(Alex(x) -> -Imperial(x))", "All x.(Alex(x) -> -Illegal(x))"]}
{"id": "prontoqa_validation_161", "nl": "Yumpuses are brimpuses.", "fol": "all x. (yumpus(x) -> brimpus(x))", "prediction": ["all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimbus(x))", "all x.(Umpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x y.((Yumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimmuse(x))", "all x.(Umpus(x) -> Brimpus(x))", "all x y.((Yumpus(x) & Brimpuse(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Brimpus(x))", "all x y.((Yumpus(x) & Brimpus(y)) -> Is(x,y))", "all x y.((Yumpus(x) & Brimpus(y)) -> Brimpuse(x))", "all x.(Yumpuse(x) -> Brimpuse(x))", "all x y.((Yumpus(x) & Brimpuse(y)) -> Has(x,y))", "All x.(Yumpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_validation_162", "nl": "Wren is not a brimpus and Wren is a zumpus and Wren is a grimpus.", "fol": "(-brimpus(Wren) & zumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y))) & all z.(Wren(z) -> Grimpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y))) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Brumpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x))))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Gruppus(z))))", "(all x y.((Wren(x) & Brimpus(x)) -> -Brimpus(x)) & ((Wren(y) & Zumpus(y)) -> Grimpus(y)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z)))", "(all x.(Wren(x) -> -Brumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Zumpus(z)) -> Grimpus(z)))", "(all x y z.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(z) & Zumpus(z))) -> Grimpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Gruppus(x)))", "all x y.((Wren(x) & Wren(y)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(y)))", "(all x y.((Wren(x) & Brimpus(y)) -> -Brimpus(x)) & ((Wren(x) & Zumpus(y)) -> Grimpus(x)))"]}
{"id": "prontoqa_validation_163", "nl": "Wren is not a yumpus.", "fol": "-yumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Yumpus(x))", "All x.(Wren(x) -> -Yumpus(x))", "exists x.(Wren(x) & -Yumpus(x))", "(-Yumpus(Wren))", "all x.(Wren(x) -> -Yumpus(x))", "(all x.(Wren(x) -> -Yumpus(x)))", "(Yumpus(Wren) & -Yumpus(Wren))", "-Yumpus(Wren)", "all x.(Wren(x) -> (-Yumpus(x)))", "all x.(Wren(x) & -Yumpus(x))", "all x.(Wren(x) -> -yumpus(x))", "(yumpus(Wren) & -Yumpus(Wren))", "(yumpus(wren) & -yumpus(wren))", "(yumpus(wren) & -Yumpus(wren))", "(-Yumpus(Wren) & -Yumpus(Wren))", "all x.(Wren(x) -> NoYumpus(x))"]}
{"id": "prontoqa_validation_164", "nl": "Numpuses are dumpuses.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numptus(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> Dumpuse(x))", "all x y.((Numpus(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Nupuse(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> Are(x,y))", "all x.(Numpus(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> Has(x,y))", "all x.(Numpuse(x) -> Dumpus(x))", "all x.(Numpuse(x) -> Pussuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> -Dumpuse(x))", "all x y.((Numpus(x) & Dumpuse(y)) -> Dumpuse(x))"]}
{"id": "prontoqa_validation_165", "nl": "Wren is not a dumpus, Wren is a sterpus, and Wren is a lorpus.", "fol": "(-dumpus(Wren) & sterpus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) -> Sterpus(x))) & ((Wren(x) -> Lorpus(x))))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & (Wren(x) -> Sterpus(x)) & (Wren(x) -> Lorpus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterepus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Lorpus(x)))))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.((Wren(y) & Sterpus(y))) -> Lorpus(y)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.((Wren(y) & Sterpus(y)) -> Lorpus(y)))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) -> Sterpus(x)) & ((Wren(x) -> Lorpus(x))))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | ((Wren(x) & Lorpus(x)))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z))) -> Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) -> Sterpus(x)) | (Wren(x) -> Lorpus(x))))"]}
{"id": "prontoqa_validation_166", "nl": "Each brimpus is an impus.", "fol": "all x. (brimpus(x) -> impus(x))", "prediction": ["all x.(Brimpus(x) -> Impossible(x))", "all x.(Brimpus(x) -> IsImpossible(x))", "all x.(Brimpus(x) -> IsImpossed(x))", "all x.(Brumpus(x) -> Impossible(x))", "all x.(Brimpus(x) -> IsBrimpus(x))", "all x.(Brimpus(x) -> Isolated(x))", "all x.(Brimpus(x) -> Impeccable(x))", "all x.(Brumpus(x) -> IsImpossible(x))", "all x.(Brimpus(x) -> Imperator(x))", "all x.(Brimpus(x) -> Imperative(x))", "all x.(Brumpus(x) -> IsImpossed(x))", "all x.(Brimpus(x) -> Is(x))", "all x.(Brimpus(x) -> Impermissible(x))", "all x.(Brimpus(x) -> Implicator(x))", "all x.(Brimpus(x) -> Is(x,Impossible))", "all x.(Brimpus(x) -> Illegal(x))"]}
{"id": "prontoqa_validation_167", "nl": "Max is a sterpus and Max is not an impus and Max is a gorpus.", "fol": "(sterpus(Max) & -impus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x))) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Gorpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x))) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Gorpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Issue(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Impossible(x))) & ((Max(x) -> Gorpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Issue(y))) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Issue(y))) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Gorpus(x))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Issue(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Issue(y))) & all z.(Max(z) -> Gorpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) & -Impossible(x))) | (-Max(x) & Gorpus(x))))"]}
{"id": "prontoqa_validation_168", "nl": "Shumpuses are grimpuses.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shuppus(x) -> Grimpuse(x))", "all x.(Shampus(x) -> Grimpuse(x))", "all x.(Shimpus(x) -> Grimpuse(x))", "all x.(Shupuse(x) -> Grimpuse(x))", "all x.(Shutus(x) -> Grimpuse(x))", "all x.(Sshumpuse(x) -> Grimpuse(x))", "all x.(Shuppe(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shuppuse(x) -> Grimpuse(x))", "all x.(Shupus(x) -> Grimpuse(x))", "all x.(Shumps(x) -> Grimpuse(x))", "all x.(Shutup(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shampus(x) -> Grimpus(x))", "all x.(Shuppus(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_169", "nl": "Max is not a grimpus and Max is a lempus and Max is a gorpus.", "fol": "(-grimpus(Max) & lempus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> -Grimpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y))) & all z.(Max(z) -> Gorpus(z)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y))) & all z.(Max(z) -> Gorpus(z)))", "all x y z.((Max(x) & Lempus(y) & Gorpus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x))))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y))) & all z.(Max(z) -> Gorpus(z))))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y))) & all z.(Max(z) -> Gorpus(z))))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))"]}
{"id": "prontoqa_validation_170", "nl": "Max is not a shumpus.", "fol": "-shumpus(Max)", "prediction": ["all x.(Max(x) -> -Shumpus(x))", "(-Shumpus(Max))", "-Shumpus(Max)", "all x.((Max(x) & -Shumpus(x)) -> -Shumpus(x))", "All x.(Max(x) -> -Shumpus(x))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) & -Shumpus(x)))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) & -Shumpus(x))))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) & Shumpus(x)))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) | Humpus(x))))", "all x.(Max(x) -> -Shumpus(x))", "(-Shumpus(Max) & -Shumpus(Max))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) & Humpus(x)))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) & Shumpus(x))))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) | Humpus(x)))", "all x.((Max(x) & -Shumpus(x)) -> -(Shumpus(x) | Shumpus(x))))", "-(Shumpus(Max) & -Shumpus(Max))"]}
{"id": "prontoqa_validation_171", "nl": "Zumpuses are jompuses.", "fol": "all x. (zumpus(x) -> jompus(x))", "prediction": ["all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "all x.(Zimpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "all x.(Zombus(x) -> Jompuse(x))", "all x.(Zumpuse(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> (Jumpus(x) & Jompuse(x)))", "all x.(Zombuse(x) -> Jompuse(x))", "all x.(Zumpus(x) -> (Jimpus(x) & Jompuse(x)))", "all x.(Zumpus(x) -> (Jumpus(x) & Jompus(x)))", "all x.(Zumpus(x) -> (Jimpus(x) & Jompus(x)))", "all x.(Zumpus(x) -> Jombus(x))", "all x.(Zimpus(x) -> Jompus(x))", "all x.(Zumpus(x) -> (Jompuse(x) & Jompuse(x)))", "all x.(Zombies(x) -> Jompuse(x))"]}
{"id": "prontoqa_validation_172", "nl": "Wren is a grimpus and Wren is not a jompus and Wren is a yumpus.", "fol": "(grimpus(Wren) & -jompus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jompus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Jompus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Wren(x) -> Jompus(x)) & (-Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jompus(y))) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & -Yumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Jompus(x)) & (Wren(x) -> Yumpus(x))))", "all x y.((Wren(x) & Grimpus(x) & Wren(y)) -> (-Jompus(y) & Yumpus(y)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Yompus(z)) -> (-Jompus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Jompus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jompus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & (Yumpus(x) | Wren(x))))", "(all x.(Wren(x) -> Grimpus(x)) & (-Wren(x) -> Jompus(x)) & (-Wren(x) -> Yumpus(x))))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jompus(y)) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Wren(x) -> Jompus(x)) & (-Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & all y.(Wren(y) -> -Jompus(y))) & all z.(Wren(z) -> Yampus(z)))"]}
{"id": "prontoqa_validation_173", "nl": "Wren is not a zumpus.", "fol": "-zumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Zumpus(x))", "all x.(Wren(x) -> -Tompus(x))", "all x.(Wren(x) -> -Zombipus(x))", "all x.(Wren(x) -> -Zombip(x))", "All x.(Wren(x) -> -Zumpus(x))", "all x.(Wren(x) -> -Zombie(x))", "(-Zumpus(Wren))", "all x.(Wren(x) -> -Zombia(x))", "all x.(Wren(x) -> -Zimpus(x))", "all x.(Wren(x) -> -Zumpus(x))", "exists x.(Wren(x) & -Zumpus(x))", "all x.(Wren(x) -> -Zombius(x))", "All x.(Wren(x) -> -Tompus(x))", "all x.(Wren(x) -> -Zombies(x))", "all x.(Wren(x) -> -Zimmer(x))", "all x.(Wren(x) -> -zumpus(x))"]}
{"id": "prontoqa_validation_174", "nl": "Every jompus is a wumpus.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wampus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wompus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompus(x) -> Wempus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Hush(x))", "all x.(Jomess(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wampus(x))", "exists x.(Jompus(x) & Wumpus(x))", "all x.(Jimpus(x) -> Wompus(x))", "all x.(Jompus(x) -> Wasp(x))", "all x.(Jompus(x) -> Husk(x))"]}
{"id": "prontoqa_validation_175", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a sterpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & sterpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterepus(z))))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Sterepus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z))))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Sterpus(x)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Sterepus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterepus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Steerpus(z))))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterepus(z)))"]}
{"id": "prontoqa_validation_176", "nl": "Zumpuses are brimpuses.", "fol": "all x. (zumpus(x) -> brimpus(x))", "prediction": ["all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpuse(x) -> Brimpuse(x))", "all x.(Zimpus(x) -> Brimpuse(x))", "all x.(Zumpuse(x) -> Brimpus(x))", "all x.(Zimpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimbus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x y.((Zumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x y.((Zumpuse(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimmuse(x))", "all x y.((Zumpus(x) & Brimpus(y)) -> (Brimpus(x) & Brimpus(y)))", "all x.(Zombus(x) -> Brimpus(x))", "all x y.((Zumpuse(x) & Brimpus(y)) -> (Brimpus(x) & Brimpus(y)))"]}
{"id": "prontoqa_validation_177", "nl": "Fae is a grimpus and Fae is a numpus and Fae is not a brimpus.", "fol": "(grimpus(Fae) & numpus(Fae) & -brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brimpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -Brimpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brumpus(z))))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(y) -> -Brimpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brumpus(x)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brimpus(x))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y))) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -Brumpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y))) & all z.(Fae(z) -> -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brompus(z))))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(y) -> -Brumpus(y)))"]}
{"id": "prontoqa_validation_178", "nl": "Fae is not a zumpus.", "fol": "-zumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Zumpus(x))", "(-Zumpus(Fae))", "-Zumpus(Fae)", "all x.(Fae(x) -> -Tompus(x))", "exists x.(Fae(x) & -Zumpus(x))", "All x.(Fae(x) -> -Zumpus(x))", "all x.(Fae(x) -> -Zombipus(x))", "all x.(Fae(x) -> -Zimpus(x))", "all x.(Fae(x) -> -Zumpus(x))", "(-Zumpus(Fae) & -Zumpus(Fae))", "all x.(Fae(x) -> -zumpus(x))", "all x.(Fae(x) -> -Zombip(x))", "all x.(Fae(x) -> -Zupus(x))", "All x.(Fae(x) -> -Tompus(x))", "all x.(Fae(x) -> -Zombies(x))", "exists x.(Fae(x) & -Tompus(x))"]}
{"id": "prontoqa_validation_179", "nl": "Impuses are rompuses.", "fol": "all x. (impus(x) -> rompus(x))", "prediction": ["all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompuse(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Imbuse(x) -> Rompus(x))", "all x.(Impus(x) -> Rompuse(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impue(x) -> Rompus(x))", "all x.(Impeduse(x) -> Rompus(x))", "all x.(Impuses(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impes(x) -> Rompus(x))", "all x.(Imbis(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_180", "nl": "Max is not a rompus, Max is a dumpus, and Max is a wumpus.", "fol": "(-rompus(Max) & dumpus(Max) & wumpus(Max))", "prediction": ["(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y))) & all z.(Max(z) -> Wumpus(z)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & Dumpus(y) & Wumpus(z)))", "(all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> -Rompus(x)) & ((Max(x) & Dumpus(x)) -> Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y))) & all z.(Max(z) -> Wumpus(z))))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z))) -> Wumpus(z)))", "all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x))))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & -Dumpus(y) & -Wumpus(z)))", "all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> (-Rompus(x) & -Dumpus(x) & -Wumpus(x)))", "(all x.(Max(x) -> -rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z)) -> Wumpus(z)))", "(all x.(Max(x) -> -rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "(all x y z.(Max(x) -> -Rompus(x)) & (Max(y) -> Dumpus(y)) & (Max(z) -> Wumpus(z)))"]}
{"id": "prontoqa_validation_181", "nl": "Max is not an impus.", "fol": "-impus(Max)", "prediction": ["all x.(Max(x) -> -Impossible(x))", "All x.(Max(x) -> -Impossible(x))", "-Impossible(Max)", "all x.(Max(x) -> -Issue(x))", "all x.(Max(x) -> -Imposer(x))", "(-Impossible(Max))", "all x.(Max(x) -> -Impediment(x))", "All x.(Max(x) -> -Issue(x))", "All x.(Max(x) -> -Imposer(x))", "all x.(Max(x) -> -Imposible(x))", "All x.(Max(x) -> -Impediment(x))", "all x.(Max(x) -> -Impose(x))", "all x.(Max(x) -> -Issued(x))", "all x.(Max(x) -> -Immersion(x))", "all x.(Max(x) -> -Implementation(x))", "all x.(Max(x) -> -Illegal(x))"]}
{"id": "prontoqa_validation_182", "nl": "Every numpus is a vumpus.", "fol": "all x. (numpus(x) -> vumpus(x))", "prediction": ["all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Voompus(x))", "all x.(Numpus(x) -> Voompus(x))", "all x.(Numpus(x) -> Vulmpus(x))", "all x.(Nompus(x) -> Vulmpus(x))", "all x.(Nompus(x) -> Vampus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Nompus(x) -> Vampire(x))", "all x.(Numpus(x) -> Vampus(x))"]}
{"id": "prontoqa_validation_183", "nl": "Alex is a sterpus and Alex is a lorpus and Alex is not a vumpus.", "fol": "(sterpus(Alex) & lorpus(Alex) & -vumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Vumpus(z))))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x))))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Vumpus(z))))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & -Vumpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Vumpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vimpus(z))))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & -Alex(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x))))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Vumpus(z)))", "(all x.(Alex(x) -> Sterepus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x y z.(Alex(x) -> Sterpus(x)) & (Alex(y) -> Lorpus(y)) & (Alex(z) -> -Vumpus(z))))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y))) & all z.(Alex(z) -> -Vimpus(z))))"]}
{"id": "prontoqa_validation_184", "nl": "Each yumpus is a sterpus.", "fol": "all x. (yumpus(x) -> sterpus(x))", "prediction": ["all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterepus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "exists x.(Yumpus(x) & Sterpus(x))", "all x.(Yumpus(x) -> Sterus(x))", "all x.(Yumpus(x) -> Steroid(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Yumpus(x) -> sterpus(x))", "all x.(Yumpus(x) -> Steerpus(x))", "all x.(Yumpus(x) -> Sterotus(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> Contains(x,y))", "all x y.((Yumpus(x) & Sterpus(y)) -> HasSterpus(x,y))", "all x y.((Yumpus(x) & Sterpus(y)) -> Has(x,y))", "all x y.((Yumpus(x) & Sterepus(y)) -> Sterpus(x))"]}
{"id": "prontoqa_validation_185", "nl": "Rex is a jompus and Rex is not a sterpus and Rex is a grimpus.", "fol": "(jompus(Rex) & -sterpus(Rex) & grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterpus(x)) & (Rex(x) -> Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterepus(x)) & (Rex(x) -> Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterpus(y))) & all z.(Rex(z) -> Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterpus(y))) & all z.(Rex(z) -> Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterepus(y))) & all z.(Rex(z) -> Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterpus(y)) & all z.(Rex(z) -> Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterpus(x)) & (Rex(x) -> Grimpus(x))))", "(all x.(Rex(x) -> Jompus(x)) & all y.((Rex(y) & -Sterepus(y))) -> Grimpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterepus(y))) & all z.(Rex(z) -> Grimpus(z))))", "(all x.(Rex(x) -> Jompus(x)) & all y.((Rex(y) & -Sterpus(y))) -> Grimpus(y)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Steerpus(x)) & (Rex(x) -> Grimpus(x)))", "all x y z.((Rex(x) & Jompus(x) & -Sterpus(y) & Grimpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterepus(x)) & (Rex(x) -> Grimpus(x))))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterpus(x)) & (Rex(x) -> Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterpus(x)) & (Rex(x) -> Gruppus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterepus(y)) & all z.(Rex(z) -> Grimpus(z))))"]}
{"id": "prontoqa_validation_186", "nl": "Every numpus is a zumpus.", "fol": "all x. (numpus(x) -> zumpus(x))", "prediction": ["all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "all x.(Numerus(x) -> Zumpus(x))", "all x.(numpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Number(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Zurpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> HasNumpus(x,y))", "exists x.(Numpus(x) & Zumpus(x))", "all x.((Numpus(x) & Zumpus(x)) -> HasNumpus(x))", "all x.(Sumpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> HasNumber(x,y))", "all x.(Numpus(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_187", "nl": "Stella is a rompus and Stella is not a zumpus and Stella is a grimpus.", "fol": "(rompus(Stella) & -zumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> -Zumpus(y))) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> -Zumpus(y))) & all z.(Stella(z) -> Grimpus(z)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Gruppus(x)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> -Tompus(y))) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> -Tompus(y))) & all z.(Stella(z) -> Grimpus(z)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Tompus(x))) & (Stella(x) -> Grimpus(x)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> -Zumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x))))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Gruppus(x)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> -Zumpus(y))) & all z.(Stella(z) -> Gruppus(z)))", "(all x.(Stella(x) -> Rompus(x)) & all y.(Stella(y) -> -Zumpus(y))) & all z.(Stella(z) -> Gruppus(z))))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Grimpus(z)) -> (Rompus(x) & -Zumpus(y) & Grimpus(z)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Grimpus(y)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Tompus(x)) & (Stella(x) -> Grimpus(x))))"]}
{"id": "prontoqa_validation_188", "nl": "Stella is not a numpus.", "fol": "-numpus(Stella)", "prediction": ["Stella is not a Numpus(Stella)", "all x.(Stella(x) -> -Numpus(x))", "all x.(Stella(x) -> -Numpus(x))", "Stella is not Numpus(Stella)", "Stella is not a Numpus.", "all x.(Stella(x) -> -Nompus(x))", "exists x.(Stella(x) & -Numpus(x))", "all x.(Stella(x) -> -numpus(x))", "exists x.(Stella(x) & -Numpus(x))", "(-numpus(Stella))", "Stella is not a Numpus(s)", "exists x.(Stella(x) & -numpus(x))", "all x.(Stella(x) -> -Number(x))", "all x.(Stella(x) -> -Numpus(x))", "exists x.(Stella(x) & -Nompus(x))", "(-Numpus(Stella))"]}
{"id": "prontoqa_validation_189", "nl": "Vumpuses are impuses.", "fol": "all x. (vumpus(x) -> impus(x))", "prediction": ["all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpus(x) -> Ispose(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Vumpus(x) -> Impose(x))", "all x.(Vumpus(x) -> Issued(x))", "all x.(Vumpus(x) -> Isolated(x))", "all x.(Vumpus(x) -> Impossible(x))", "all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpuse(x) -> Issue(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x))", "all x.(Vumpus(x) -> Impermissible(x))", "all x.(Vumpus(x) -> Imperium(x))", "all x.(Vumpus(x) -> Isolates(x))", "all x.(Vumpuse(x) -> Issues(x))", "all x.(Vumpus(x) -> Isolate(x))"]}
{"id": "prontoqa_validation_190", "nl": "Rex is a dumpus and Rex is a rompus and Rex is not an impus.", "fol": "(dumpus(Rex) & rompus(Rex) & -impus(Rex))", "prediction": ["(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y)) & all z.(Rex(z) -> -Impossible(z))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> -Impossible(y)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y))) & all z.(Rex(z) -> -Impossible(z))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y))) & all z.(Rex(z) -> -Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y)) & all z.(Rex(z) -> -Impossible(z))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y))) & all z.(Rex(z) -> -Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y)) & all z.(Rex(z) -> -Issue(z))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y))) & all z.(Rex(z) -> -Impossible(z))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y)) & all z.(Issue(z) -> -Issue(z))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y)) & all z.(Rex(z) -> -Illegal(z))))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Issue(x)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rex(y) -> Rompus(y)) & all z.(Rex(z) -> -Impossible(z)))", "all x y.((Rex(x) & Dumpus(x) & Rompus(y)) -> -Impossible(x))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & -Impossible(x)))"]}
{"id": "prontoqa_validation_191", "nl": "Numpuses are gorpuses.", "fol": "all x. (numpus(x) -> gorpus(x))", "prediction": ["all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpus(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "all x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x,y))", "all x y.((Numpus(x) & Gorpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Gorpus(x))", "all x y.((Numpus(x) & Gorpus(y)) -> Are(x,y))", "all x y.((Numpus(x) & Gorpus(y)) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_192", "nl": "Fae is a grimpus and Fae is a jompus and Fae is not a gorpus.", "fol": "(grimpus(Fae) & jompus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(y) -> -Gorpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y))) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y))) & all z.(Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Gorpus(x)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(z) -> -Gorpus(z)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(y) -> -Gorpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z)))"]}
{"id": "prontoqa_validation_193", "nl": "Shumpuses are tumpuses.", "fol": "all x. (shumpus(x) -> tumpus(x))", "prediction": ["all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumulus(x))", "all x.(Shupuse(x) -> Tumulus(x))", "all x.(Shupuse(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shampus(x) -> Tumpus(x))", "all x.(Shampus(x) -> Tumpus(x))", "all x.(Shuppus(x) -> Tumpus(x))", "all x.(Shutus(x) -> Tumpus(x))", "all x.(Sshumpuse(x) -> Tumpus(x))", "all x.(Shuppus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_194", "nl": "Sam is a wumpus and Sam is a dumpus and Sam is not a tumpus.", "fol": "(wumpus(Sam) & dumpus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Dumpus(y))) & all z.(Sam(z) -> -Tumpus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Dumpus(y))) & all z.(Sam(z) -> -Tumpus(z))))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & -Tumpus(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & Sam(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & -Tumpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x))))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(z) & -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & -Tumpus(z)) -> (Wumpus(x) & Dumpus(y)))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & -Sam(x)))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(x) & -Tumpus(x)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Tumpus(z)))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "all x y z.((Wumpus(x) & Dumpus(y) & Sam(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))"]}
{"id": "prontoqa_validation_195", "nl": "Sam is not a shumpus.", "fol": "-shumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Shumpus(x))", "all x.((Sam(x) & -Shumpus(x)) -> -Shumpus(x))", "(-Shumpus(Sam))", "exists x.(Sam(x) & -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "All x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam) & -Shumpus(Sam))", "-Shumpus(Sam)", "(-Shumpus(sam) & -Shumpus(sam))", "all x.((Sam(x) & -Shumpus(x)) -> -Shumpus(x))", "all x.(Sam(x) -> -(Shumpus(x) & -Shumpus(x)))", "all x.((Sam(x) & -Shumpus(x)) -> -Sam(x))", "all x.(Sam(x) -> -shumpus(x))", "all x.(Sam(x) -> (-Shumpus(x)))", "all x.((Sam(x) & -Shumpus(x)) -> NotShumpus(x))", "all x.(Sam(x) & -Shumpus(x))"]}
{"id": "prontoqa_validation_196", "nl": "Every vumpus is a numpus.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Number(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Is(x,y))", "exists x.(Vumpus(x) & Numpus(x))", "all x.(Vumpus(x) -> Nompus(x))", "all x.(Vimpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Has(x,y))", "all x.((Vumpus(x) & Numpus(x)) -> Is(x,y))", "all x.((Vumpus(x) & Numpus(x)) -> HasVumpus(x))", "all x.((Vumpus(x) & Numpus(x)) -> -Vumpus(x))", "all x.((Vumpus(x) & Numpus(x)) -> Vumpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> -Vumpus(x))", "all x.((Vumpus(x) & Numpus(x)) -> Has(x,y))", "all x.((Vumpus(x) & Numpus(x)) -> InVumpus(x))"]}
{"id": "prontoqa_validation_197", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a tumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & tumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x))))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x))))", "all x y z.((Lorph(x) & Polly(y) & Numpus(z)) -> (Lorph(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Numpus(y)) & all z.(Polly(z) -> Tumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Numpus(y))) & all z.(Polly(z) -> Tumpus(z))))", "all x y z.((Lorph(x) & Polly(y) & Numpus(z)) -> (Lorph(x) & -Numpus(y) & Tumpus(z)))", "all x y z.((Lorph(x) & Polly(y) & Numpus(z)) -> (Lorph(y) & -Numpus(y) & Tumpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(y)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))"]}
{"id": "prontoqa_validation_198", "nl": "Wren is a tumpus, Wren is a rompus, and Wren is not a sterpus.", "fol": "(tumpus(Wren) & rompus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterepus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterepus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Steerpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Steerpus(z))))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x))))", "all x y z.((Wren(x) & Rumpus(y) & Sterpus(z)) -> (Tumpus(x) & Rompus(y) & -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterpus(z)))", "all x y z.((Wren(x) & Rumpus(y) & Sterpus(z)) -> (Tumpus(x) | Rompus(y) | -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & ((Wren(x) -> Rompus(x))) & ((Wren(x) -> -Sterepus(x))))"]}
{"id": "prontoqa_validation_199", "nl": "Wren is not a vumpus.", "fol": "-vumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Vumpus(x))", "all x.(Wren(x) -> -Vimpus(x))", "all x.(Wren(x) -> -Vumpus(x))", "exists x.(Wren(x) & -Vumpus(x))", "All x.(Wren(x) -> -Vumpus(x))", "(-Vumpus(Wren))", "all x.(Wren(x) -> -Vampus(x))", "all x.(Wren(x) -> -Vumpus(x))", "all x.(Wren(x) -> -Voompus(x))", "(Vumpus(Wren) & -Vumpus(Wren))", "-Vumpus(Wren)", "All x.(Wren(x) -> -Vimpus(x))", "exists x.(Wren(x) & -Vimpus(x))", "All x.(Wren(x) -> -Vumpus(x))", "all x.(Wren(x) & -Vumpus(x))", "exists x.(Wren(x) & -Vumpus(x))"]}
{"id": "prontoqa_validation_200", "nl": "Wren is a sterpus and Wren is a jompus and Wren is not a numpus.", "fol": "(sterpus(Wren) & jompus(Wren) & -numpus(Wren))", "prediction": ["(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Nompus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x))))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x))))", "(all x.(Wren(x) -> Sterepus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y))) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Numpus(z))))", "(all x.(Wren(x) -> Sterepus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y))) & all z.(Wren(z) -> -Numpus(z))))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Nompus(x)))", "(all x.(Wren(x) -> Sterepus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "(all x.(Wren(x) -> Sterpus(x)) & ((Wren(x) -> Jompus(x))) & ((Wren(x) -> -Numpus(x))))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z)))"]}
{"id": "prontoqa_validation_201", "nl": "Wren is not a lempus.", "fol": "-lempus(Wren)", "prediction": ["all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -Limpus(x))", "All x.(Wren(x) -> -Lempus(x))", "exists x.(Wren(x) & -Lempus(x))", "(-Lempus(Wren))", "all x.(Wren(x) -> -Lempus(x))", "all x.(Wren(x) -> -lempus(x))", "all x.(Wren(x) -> -Lampus(x))", "all x.(Wren(x) -> -Lempus(x))", "-Lempus(Wren)", "all x.(Wren(x) -> -Limes(x))", "all x.(Wren(x) & -Lempus(x))", "all x.(Wren(x) -> -Lumpus(x))", "all x.(Wren(x) -> (-Lempus(x)))", "All x.(Wren(x) -> -Limpus(x))", "(-Lempus(Wren) & -Lempus(Wren))"]}
{"id": "prontoqa_validation_202", "nl": "Each rompus is a grimpus.", "fol": "all x. (rompus(x) -> grimpus(x))", "prediction": ["all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Gruppus(x))", "all x.(Rompus(x) -> Grumpus(x))", "exists x.(Rompus(x) & Grimpus(x))", "all x.(rompus(x) -> Grimpus(x))", "all x.(Romesue(x) -> Grimpus(x))", "all x.(Rrompus(x) -> Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> exists z.(Rompus(z) & Grimpus(z))))", "all x.(Rumpus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grupus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> exists z.(Rompus(z) & Gruppus(z))))", "(all x.(Rompus(x) -> Grimpus(x)))", "all x y.((Rompus(x) & Grimpus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Grumpy(x))"]}
{"id": "prontoqa_validation_203", "nl": "Polly is a wumpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(wumpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y))) & all z.(Polly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & Polly(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y))) & all z.(Polly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & -Grimpus(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y))) & all z.(Polly(z) -> -Grimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y))) & all z.(Polly(z) -> -Grimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x))))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & -Polly(x)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & -Polly(x)))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Gorpus(y) & -Grimpus(y)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Poly(z) -> -Grimpus(z))))"]}
{"id": "prontoqa_validation_204", "nl": "Polly is not a rompus.", "fol": "-rompus(Polly)", "prediction": ["all x.(Polly(x) -> -Rompus(x))", "all x.((Polly(x) & -Rompus(x)) -> -Rompus(x))", "all x.(Polly(x) -> -Rompus(x))", "(-Rompus(Polly))", "All x.(Polly(x) -> -Rompus(x))", "all x.(Polly(x) -> -Rompus(x))", "exists x.(Polly(x) & -Rompus(x))", "all x.((Polly(x) & -rompus(x)) -> -Rompus(x))", "all x.((Polly(x) & -Rompus(x)) -> -(Rompus(x) & -Rompus(x)))", "all x.((Polly(x) & -Rompus(x)) -> -(Rompus(x) & Polly(x)))", "all x.(Polly(x) -> -rompus(x))", "all x.(Polly(x) -> -Romesh(x))", "all x.((Polly(x) & -Rompus(x)) -> -(Rompus(x) & Polly(x))))", "all x.((Polly(x) & -Rompus(x)) -> -(Rompus(x) & -Rompus(x))))", "all x.((Polly(x) & -Rompus(x)) -> -(Polly(x) & -Rompus(x)))", "all x.(Polly(x) -> -Rompus(x))"]}
{"id": "prontoqa_validation_205", "nl": "Each gorpus is a lorpus.", "fol": "all x. (gorpus(x) -> lorpus(x))", "prediction": ["all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lordpus(x))", "all x.(Gorpus(x) -> Llorpus(x))", "all x.(Gorpus(x) -> Loomis(x))", "all x.(Gorpus(x) -> Loompus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> lorpus(x))", "exists x.(Gorpus(x) & Lorpus(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Lopus(x))", "all x.(Gorpus(x) -> Lord(x))", "all x.(Gorpus(x) -> Larpus(x))", "all x.(Gorpus(x) -> Lordus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lark(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Contains(x,y))"]}
{"id": "prontoqa_validation_206", "nl": "Sally is a brimpus, Sally is not a lorpus, and Sally is a yumpus.", "fol": "(brimpus(Sally) & -lorpus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x))))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z))))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Sally(x) -> Lorpus(x)) & (-Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumps(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpa(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumps(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y)) & all z.(Sally(z) -> Yumpus(z))))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpsum(x)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpa(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & -Yumpus(x)))"]}
{"id": "prontoqa_validation_207", "nl": "Sally is not a gorpus.", "fol": "-gorpus(Sally)", "prediction": ["all x.(Sally(x) -> -Gorpus(x))", "all x.(Sally(x) -> -Gorpus(x))", "All x.(Sally(x) -> -Gorpus(x))", "Sally is not a Gorpus.", "Sally -Gorpus(Sally)", "Sally is not a Gorpus.", "Sally is not a gorpus.", "(-Gorpus(Sally))", "All x.(Sally(x) -> -Gorpus(x))", "Sally is -Gorpus(Sally)", "Sally & -Gorpus(Sally)", "all x.(Sally(x) -> -Gorpus(x))", "all x.(Sally(x) & -Gorpus(x))", "Sally is not gorpus.", "Sally is not a Gorpus(Sally)", "all x.(Sally(x) -> -Rose(x))"]}
{"id": "prontoqa_validation_208", "nl": "Each dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumps(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dupus(x) -> Wumpus(x))", "exists x.(Dumpus(x) & Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wompus(x))", "all x.(Dumpus(x) -> Humpus(x))", "all x.(Dumpus(x) -> Wempus(x))", "all x.(Dumpus(x) -> wumpus(x))", "all x y.((Dumpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Dumpus(x) -> Hush(x))", "all x.(Dumpsus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumus(x))"]}
{"id": "prontoqa_validation_209", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a zumpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Zumpus(x)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z))))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(y)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Zumpus(y)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(z) & Zumpus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x y.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(x) & Lempus(x)) -> Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) | Zumpus(x)))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(z) & Lempus(z))) -> Zumpus(z)))"]}
{"id": "prontoqa_validation_210", "nl": "Each lempus is a grimpus.", "fol": "all x. (lempus(x) -> grimpus(x))", "prediction": ["all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Gruppus(x))", "all x.(Lempus(x) -> Grupus(x))", "exists x.(Lempus(x) & Grimpus(x))", "all x.(Lempus(x) -> Grumpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x y.((Lempus(x) & Grimpus(y)) -> Is(x,y))", "all x.((Lempus(x) & Grimpus(x)) -> Lempus(x))", "all x.(Lempus(x) -> Grappa(x))", "all x.(Limpus(x) -> Gruppus(x))", "(all x.(Lempus(x) -> Grimpus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> HasLempus(x,y))", "all x.((Lempus(x) & Grimpus(x)) -> HasLempus(x))", "all x y.((Lempus(x) & Grimpus(y)) -> Lempus(x))", "all x.(Lempus(x) -> Grappus(x))"]}
{"id": "prontoqa_validation_211", "nl": "Max is a brimpus and Max is not a grimpus and Max is a zumpus.", "fol": "(brimpus(Max) & -grimpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> -Grimpus(y))) & all z.(Max(z) -> Zumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x))) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> -Grimpus(y))) & all z.(Max(z) -> Zumpus(z))))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> -Grimpus(y)) & all z.(Max(z) -> Zumpus(z))))", "all x y.((Max(x) & Brimpus(x) & Max(y)) -> (-Grimpus(y) & Zumpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x))))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (-Max(x) -> Zumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Grimpus(z)) -> (Brimpus(x) & -Grimpus(y) & Zumpus(z)))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Grimpus(z)) -> (-Grimpus(y) & Zumpus(z)))", "all x y z.((Max(x) & Brimpus(x) & -Grimpus(y) & Zumpus(z)) -> (Brimpus(x) & -Grimpus(y) & Zumpus(z)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) -> -Grimpus(x))) & ((Max(x) -> Zumpus(x))))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Grimpus(z)) -> (Brimpus(x) & -Grimpus(y) & Zumpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & ((Max(x) -> -Grimpus(x))) | (Max(x) -> Zumpus(x))))", "all x.(Max(x) -> (Brimpus(x) & -Grimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_validation_212", "nl": "Sterpuses are shumpuses.", "fol": "all x. (sterpus(x) -> shumpus(x))", "prediction": ["all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpuse(x))", "all x.(Sterpuse(x) -> Shumpuse(x))", "all x.(Strerpus(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpuse(x))", "all x.(Sterpuse(x) -> Humpus(x))", "all x.(Stupid(x) -> Shumpus(x))", "all x.(Sterpus(x) -> (Shumpus(x) & Shumpus(x)))", "all x.(Sterpus(x) -> Humpus(x))", "all x.(Sterpuse(x) -> Humpus(x))", "all x.(Sterpus(x) -> (Shumpus(x) & Sterpus(x)))", "all x.(Sterpuse(x) -> (Shumpus(x) & Shumpus(x)))", "all x.(Sterpus(x) -> (Shumpus(x) & -Shumpus(x)))"]}
{"id": "prontoqa_validation_213", "nl": "Polly is a brimpus, Polly is not a shumpus, and Polly is a yumpus.", "fol": "(brimpus(Polly) & -shumpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> -Shumpus(y))) & all z.(Polly(z) -> Yumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Brimpus(x) -> Polly(x)) & (-Shumpus(x) -> Polly(x)) & (Yumpus(x) -> Polly(x)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yampus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x))))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))", "(all x.(Brimpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> -Shumpus(y))) & all z.(Polly(z) -> Yumpus(z))))", "(all x.(Polly(x) -> Brimpus(x)) & all y.(Polly(y) -> -Shumpus(y))) & all z.(Polly(z) -> Yumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))", "(all x.(Brimpus(x) -> Polly(x)) & all y.(Shumpus(y) -> Polly(y))) & all z.(Yumpus(z) -> Polly(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yampus(x)))"]}
{"id": "prontoqa_validation_214", "nl": "Polly is not a sterpus.", "fol": "-sterpus(Polly)", "prediction": ["all x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterepus(x))", "all x.((Polly(x) & -Sterpus(x)) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterpus(x))", "All x.(Polly(x) -> -Sterpus(x))", "all x.(Poly(x) -> -Sterpus(x))", "(-Sterpus(Polly))", "all x.((Polly(x) & -Sterepus(x)) -> -Sterpus(x))", "all x.(Polly(x) -> -Steerpus(x))", "exists x.(Polly(x) & -Sterpus(x))", "all x.((Polly(x) & -Sterpus(x)) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterpus(x))", "all x.((Polly(x) & -Sterepus(x)) -> -Sterepus(x))", "all x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterepus(x))"]}
{"id": "prontoqa_validation_215", "nl": "Each dumpus is a brimpus.", "fol": "all x. (dumpus(x) -> brimpus(x))", "prediction": ["all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumps(x) -> Brimpus(x))", "exists x.(Dumpus(x) & Brimpus(x))", "all x.(Dupus(x) -> Brimpus(x))", "all x y.((Dumpus(x) & Brimpus(y)) -> Is(x,y))", "all x y.((Dumpus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Dumpus(x) -> Brimpus(x)))", "all x.(Dumpsus(x) -> Brimpus(x))", "all x y.((Dumpus(x) & Brimpus(y)) -> Dumpus(x))", "all x.(Dumpus(x) -> Brumpus(x))", "all x y.((Dumpus(x) & Brimpus(y)) -> HasBrimpus(x,y))", "all x.(Dumpus(x) -> Birmpus(x))", "all x y.((Dumpus(x) & Brimpus(y)) -> Contains(x,y))", "all x y.((Dumpus(x) & Brimpus(y)) -> -Dumpus(x))"]}
{"id": "prontoqa_validation_216", "nl": "Rex is a gorpus and Rex is not a brimpus and Rex is a lorpus.", "fol": "(gorpus(Rex) & -brimpus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> -Brimpus(x)) & (Rex(x) -> Lorpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & -Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> -Brimpus(x)) & (Rex(x) -> Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & all y.(Rex(y) -> -Brimpus(y)) & all z.(Rex(z) -> Lorpus(z))))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> -Brumpus(x)) & (Rex(x) -> Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> -Brimpus(x)) & (Rex(x) -> Lorpus(x))))", "(all x.(Rex(x) -> Gorpus(x)) & all y.(Rex(y) -> -Brimpus(y))) & all z.(Rex(z) -> Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x))))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & -Lorpus(z)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x.(Rex(x) -> Gorpus(x)) & all y.(Rex(y) -> -Brimpus(y))) & all z.(Rex(z) -> Lorpus(z))))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & -Lorpus(z)))"]}
{"id": "prontoqa_validation_217", "nl": "Rex is not a dumpus.", "fol": "-dumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Dumpus(x))", "All x.(Rex(x) -> -Dumpus(x))", "Rex is not a Dumpus.", "(-Dumpus(Rex))", "all x.(Rex(x) -> -Dumpus(x))", "-Dumpus(Rex)", "all x.(Rex(x) -> -Dupus(x))", "all x.(Rex(x) -> -Dumus(x))", "all x.(Rex(x) -> -Dumpus(x))", "All x.(Rex(x) -> -Dumpus(x))", "all x.(Rex(x) -> -Dumpsus(x))", "Rex is notDumpus(x)", "all x.(Rex(x) -> -Dumps(x))", "Rex is not a Dumpus(Rex)", "Rex is notDumpus(Rex)", "Rex is not a Dumpus(x)"]}
{"id": "prontoqa_validation_218", "nl": "Each tumpus is a lorpus.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Loomis(x))", "all x.(Tumpus(x) -> Lordpus(x))", "all x.(Tumpus(x) -> lorpus(x))", "all x.(Tumpus(x) -> Loompus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Thrombosis(x))", "all x.(Tumpus(x) -> Lordus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> HasTumpus(x,y))", "all x y.((Tumpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Llorpus(x))", "exists x.(Tumpus(x) & Lorpus(x))", "all x.(Tumpus(x) -> Larpus(x))", "all x.(Tumpus(x) -> Lord(x))", "all x.(Tumpus(x) -> Lemur(x))", "all x.(Tumpus(x) -> Moose(x))"]}
{"id": "prontoqa_validation_219", "nl": "Stella is not a lorpus, Stella is a yumpus, and Stella is a wumpus.", "fol": "(-lorpus(Stella) & yumpus(Stella) & wumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yampus(y)) & all z.(Stella(z) -> Wumpus(z))))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpus(y))) & all z.(Stella(z) -> Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> Wumpus(z))))", "(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) -> Yampus(x)) & (Stella(x) -> Wumpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> Wumpus(z))))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y))) & all z.(Wumpus(z) -> -Lorpus(z))))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y))) & all z.(Wumpus(z) -> -Lorpus(z)))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) & -Yumpus(y) & -Wumpus(z)))", "(all x y z.((Stella(x) & Lorpus(y)) -> -Lorpus(x)) & ((Stella(z) & Yumpus(z))) -> Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpsum(y)) & all z.(Stella(z) -> Wumpus(z))))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpus(y))) & all z.(Stella(z) -> Wumpus(z))))", "(all x.(Lorpus(x) -> -Lorpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Wumpus(x) -> -Lorpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Yumpus(x) | Wumpus(x))))", "(all x.(Lorpus(x) -> -Lorpus(x)) & (Yumpus(x) -> -Lorpus(x))) & (Wumpus(x) -> -Lorpus(x)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y))) & all z.(Wumpus(z) -> (Wumpus(z))))"]}
{"id": "prontoqa_validation_220", "nl": "Stella is not a tumpus.", "fol": "-tumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Tumpus(x))", "exists x.(Stella(x) & -Tumpus(x))", "(-Tumpus(Stella))", "Stella is notTumpus(Stella)", "Stella is not a Tumpus(Stella)", "Stella is not a tumpus.", "all x.(Stella(x) -> -Tumpus(x))", "Stella is not a Tumpus.", "(-Tumpus(Stella) & -Tumpus(Stella))", "Stella -Tumpus(Stella)", "Stella is -Tumpus(Stella)", "Stella -Tumpus(Stella))", "all x.(Stella(x) -> -Tompus(x))", "-Tumpus(Stella)", "Stella is notTumpus(s)", "Stella is not Tumpus(Stella)"]}
{"id": "prontoqa_validation_221", "nl": "Brimpuses are numpuses.", "fol": "all x. (brimpus(x) -> numpus(x))", "prediction": ["all x.(Brimpus(x) -> Numpus(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpuse(x))", "all x.(Brompus(x) -> Numpuse(x))", "all x.(Brimpuse(x) -> Numpuse(x))", "all x.(Birmuse(x) -> Numpuse(x))", "all x.(Brimbus(x) -> Numpus(x))", "all x.(Brimbus(x) -> Numpuse(x))", "all x.(Brimuse(x) -> Numpuse(x))", "all x.(Brimpus(x) -> Numpus(x))", "all x.(Brumpus(x) -> Numpus(x))", "all x.(Brimpuse(x) -> Numpus(x))", "all x.(Brimpuse(x) -> Numpuse(x))", "all x.(Brimbus(x) -> Numpus(x))", "all x.(Brimbus(x) -> Numpuse(x))", "all x.(Brombus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_222", "nl": "Stella is a lempus and Stella is not a numpus and Stella is a dumpus.", "fol": "(lempus(Stella) & -numpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> -Numpus(y))) & all z.(Stella(z) -> Dumpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> -Numpus(y)) & all z.(Stella(z) -> Dumpus(z))))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> -Numpus(y))) & all z.(Stella(z) -> Dumpus(z))))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x))))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> -Numpus(y))) & all z.(Stella(z) -> Dumpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> -Numpus(y)) & all z.(Stella(z) -> Dumpus(z))))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Nompus(x)) & (Stella(x) -> Dumpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (-Numpus(y) & Dumpus(y)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> -Numpus(y))) & all z.(Stella(z) -> Dumpus(z))))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(y) & Dumpus(z)) -> (Lempus(x) & -Numpus(y) & Dumpus(z)))", "all x y.((Stella(x) & Lempus(x) & Stella(y)) -> (-Numpus(y) & Dumpus(y)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (-Numpus(y) & Dumpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -numpus(x)) & (Stella(x) -> Dumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x))))"]}
{"id": "prontoqa_validation_223", "nl": "Stella is not a brimpus.", "fol": "-brimpus(Stella)", "prediction": ["all x.(Stella(x) -> -Brimpus(x))", "all x.(Stella(x) -> -Brumpus(x))", "Stella is not a Brimpus.", "Stella is not a brimpus.", "exists x.(Stella(x) & -Brimpus(x))", "Stella is not a Brimpus(Stella)", "all x.(Stella(x) -> -Brompus(x))", "All x.(Stella(x) -> -Brimpus(x))", "exists x.(Stella(x) & -Brumpus(x))", "(-Brimpus(Stella))", "All x.(Stella(x) -> -Brumpus(x))", "all x.(Stella(x) -> -Brimpus(x))", "all x.(Stella(x) -> -Brimpus(x))", "all x.(Stella(x) -> -Brumpus(x))", "all x.(Stella(x) -> -Brampus(x))", "all x.(Stella(x) -> -Bimpus(x))"]}
{"id": "prontoqa_validation_224", "nl": "Max is a yumpus, Max is a shumpus, and Max is not an impus.", "fol": "(yumpus(Max) & shumpus(Max) & -impus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y))) & all z.(Max(z) -> -Impossible(z))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Shumpus(y)) & all z.(Max(z) -> -Impossible(z))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & -Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "(all x.(Max(x) -> Yampus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> Issue(z))))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Humpus(x)) & -Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Shumpus(x)) & (Max(x) -> -Impossible(x))))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Issue(z))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Shumpus(x)) & (Max(x) -> -Impossible(x)))"]}
{"id": "prontoqa_validation_225", "nl": "Max is not a numpus.", "fol": "-numpus(Max)", "prediction": ["all x.(Max(x) -> -Numpus(x))", "all x.(Max(x) -> -Numpus(x))", "(-numpus(Max))", "all x.(Max(x) -> -numpus(x))", "All x.(Max(x) -> -Numpus(x))", "all x.(Max(x) -> -Nompus(x))", "All x.(Max(x) -> -Numpus(x))", "all x.(Max(x) -> -Number(x))", "all x.(Max(x) -> -Numpus(x))", "-(Max(Max) & Numpus(Max))", "-numpus(Max)", "all x.(Max(x) -> -Numerus(x))", "All x.(Max(x) -> -Nompus(x))", "All x.(Max(x) -> -numpus(x))", "All x.(Max(x) -> -Number(x))", "(-Numpus(Max))"]}
{"id": "prontoqa_validation_226", "nl": "Each vumpus is a brimpus.", "fol": "all x. (vumpus(x) -> brimpus(x))", "prediction": ["all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "all x y.((Vumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Vimpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brumpus(x))", "all x y.((Vumpus(x) & Brimpus(y)) -> (Vumpus(x) & Brimpus(x)))", "all x.((Vumpus(x) & Brimpus(x)) -> Vumpus(x))", "all x y.((Vumpus(x) & Brimpus(y)) -> Has(x,y))", "all x y.((Vumpus(x) & Brimpus(y)) -> -Vumpus(x))", "(all x.(Vumpus(x) -> Brimpus(x)))", "all x.((Vumpus(x) & Brimpus(x)) -> -Vumpus(x))", "all x y.((Vumpus(x) & Brimpus(y)) -> (Vumpus(x) & Brimpus(y)))", "all x y.((Vumpus(x) & Brimpus(y)) -> HasVumpus(x,y))", "all x y.((Vumpus(x) & Brimpus(y)) -> Vumpus(x))"]}
{"id": "prontoqa_validation_227", "nl": "Wren is a jompus, Wren is a tumpus, and Wren is not a brimpus.", "fol": "(jompus(Wren) & tumpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brumpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brumpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & -Brimpus(z)) -> (Jompus(x) & Tumpus(y) & -Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & ((Wren(x) -> Tumpus(x))) & ((Wren(x) -> -Brimpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> -Brimpus(z)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brumpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brompus(z))))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jompus(x) | Tumpus(z) | -Brimpus(x)))"]}
{"id": "prontoqa_validation_228", "nl": "Each sterpus is a jompus.", "fol": "all x. (sterpus(x) -> jompus(x))", "prediction": ["all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterepus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Starpus(x) -> Jompus(x))", "all x.(Sterus(x) -> Jompus(x))", "exists x.(Sterpus(x) & Jompus(x))", "all x.(Streep(x) -> Jompus(x))", "all x.(Sternpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Stereo(x) -> Jompus(x))", "all x.(Steeper(x) -> Jompus(x))", "all x.(Steroid(x) -> Jompus(x))", "all x.(Steep(x) -> Jompus(x))", "all x.(Stern(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_229", "nl": "Polly is not a jompus, Polly is a lempus, and Polly is a rompus.", "fol": "(-jompus(Polly) & lempus(Polly) & rompus(Polly))", "prediction": ["(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y))) & all z.(Polly(z) -> Rompus(z)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(y) & Rompus(z)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Poly(z) -> Rompus(z))))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y))) & all z.(Polly(z) -> Rompus(z))))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(x) & Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y))) & all z.(Polly(z) -> Rompus(z)))", "(all x y z.((Polly(x) & Jompus(y)) -> -Jompus(x)) & ((Polly(z) & Lempus(z))) -> Rompus(z)))", "(all x.(Poly(x) -> -Jompus(x)) & all y.(Poly(y) -> Lempus(y)) & all z.(Poly(z) -> Rompus(z))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(y) & Rompus(z)))"]}
{"id": "prontoqa_validation_230", "nl": "Vumpuses are numpuses.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> (Numpus(x) & Numpus(y)))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x,y))", "all x y.((Vumpus(x) & Numpus(y)) -> Is(x,y))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> (Numpus(x) & Numpus(x)))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x,y))", "all x.(Vumpus(x) -> Numpe(x))", "all x.(Vumpus(x) -> (Numpus(x) & Numpus(x)))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpuse(x))", "all x.((Vumpus(x) & Numpus(x)) -> Numpus(x))", "all x.(Volumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_231", "nl": "Stella is not a numpus, Stella is a shumpus, and Stella is a sterpus.", "fol": "(-numpus(Stella) & shumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x))))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x))))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "(all x y z.((Stella(x) & Numpus(y)) -> -Numpus(x)) & ((Stella(z) & Humpus(z))) -> Sterpus(z)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(y) & Sterpus(z)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(y) & Sterpus(z)))", "all x y z.((Stella(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterepus(y)))"]}
{"id": "prontoqa_validation_232", "nl": "Stella is not a vumpus.", "fol": "-vumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Vumpus(x))", "Stella is not a vumpus.", "all x.(Stella(x) -> -Vumpus(x))", "all x.(Stella(x) -> -Vimpus(x))", "exists x.(Stella(x) & -Vumpus(x))", "Stella is not a Vumpus(Stella)", "Stella is not a Vumpus.", "exists x.(Stella(x) & -Vumpus(x))", "(-Vumpus(Stella))", "exists x.(Stella(x) & -Vimpus(x))", "Stella -Vumpus(Stella))", "all x.(Stella(x) -> -Vampus(x))", "all x.(Stella(x) -> -Vumpus(x))", "Stella is not a Vumpus(Stella)", "all x.(Stella(x) -> -Voompus(x))", "Stella is -Vumpus(Stella)"]}
{"id": "prontoqa_validation_233", "nl": "Each wumpus is a grimpus.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grumpus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "exists x.(Wumpus(x) & Grimpus(x))", "all x.(Wumpus(x) -> Grupus(x))", "all x y.((Wumpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Grimpus(x))", "all x y.((Wumpus(x) & Grimpus(y)) -> exists z.(Wumpus(z) & Grimpus(z))))", "(all x.(Wumpus(x) -> Grimpus(x)))", "all x.(Wumpus(x) -> Grumpy(x))", "all x.(Wumpus(x) -> Grrumpus(x))", "all x y.((Wumpus(x) & Grimpus(y)) -> Has(x,y))", "all x.((Wumpus(x) & Grimpus(x)) -> exists y.(Wumpus(y) & Grimpus(y)))", "all x y.((Wumpus(x) & Grimpus(y)) -> Produces(x,y))", "all x.((Wumpus(x) & Grimpus(x)) -> HasWumpus(x))", "all x.(Wumpus(x) -> Grappa(x))"]}
{"id": "prontoqa_validation_234", "nl": "Polly is a lorpus and Polly is a numpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & numpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(x) & -Grimpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Numpus(y))) & all z.(Polly(z) -> -Grimpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(z) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Poly(z) -> -Grimpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & -Polly(x)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(z) & -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & -Grimpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & Polly(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Numpus(y))) & all z.(Polly(z) -> -Grimpus(z)))", "all x y z.((Lorpus(x) & Numpus(y) & Polly(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & Grimpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) | Numpus(z) | -Grimpus(z)))"]}
{"id": "prontoqa_validation_235", "nl": "Rex is not a grimpus and Rex is a rompus and Rex is a lorpus.", "fol": "(-grimpus(Rex) & rompus(Rex) & lorpus(Rex))", "prediction": ["all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(y) & Lorpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Rompus(y)) & all z.(Lorpus(z) -> -Grimpus(z))))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) | Lorpus(x))))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) & -Lorpus(y))))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Rompus(y))) & all z.(Lorpus(z) -> -Grimpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) & -Lorpus(y)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Rompus(y)) & all z.(Lorpus(z) -> -Grimpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) & All z.(Lorpus(z))) -> -Grimpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & -Rompus(y) & -Lorpus(z)))", "(all x y.((Rex(x) & Grimpus(y)) -> -Grimpus(x)) & ((Rex(x) & Rompus(y)) -> Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> Rex(y))) & all z.(Lorpus(z) -> Rex(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> Rex(y))) & all z.(Lorpus(z) -> Rex(z))))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Rompus(y))) & all z.(Lorpus(z) -> -Grimpus(z))))"]}
{"id": "prontoqa_validation_236", "nl": "Every vumpus is a lorpus.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lordpus(x))", "all x.(Vumpus(x) -> Loompus(x))", "all x.(Vumpus(x) -> Loomis(x))", "all x.(Vumpus(x) -> Lord(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vimpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> lorpus(x))", "exists x.(Vumpus(x) & Lorpus(x))", "all x.(Vumpus(x) -> Lompus(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> HasVumpus(x,y))", "all x y.((Vumpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Lordus(x))", "all x y.((Vumpus(x) & Lorpus(y)) -> LocatedIn(x,y))"]}
{"id": "prontoqa_validation_237", "nl": "Polly is not a lorpus and Polly is a wumpus and Polly is a grimpus.", "fol": "(-lorpus(Polly) & wumpus(Polly) & grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Grimpus(z)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Grimpus(z))))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Polly(z) -> Grimpus(z))))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Grimpus(z)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Poly(z) -> Grimpus(z)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x))))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Gruppus(z)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Gruppus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x)))", "(all x y.((Lorpus(x) & Polly(y)) -> -Lorpus(x)) & ((Wumpus(y) & Polly(y)) -> Grimpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(y) & Grimpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(x) & Grimpus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Poly(x) -> Grimpus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Grimpus(z))))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Gruppus(z))))"]}
{"id": "prontoqa_validation_238", "nl": "Sally is a tumpus, Sally is not a rompus, and Sally is an impus.", "fol": "(tumpus(Sally) & -rompus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Impossible(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Impossible(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Issue(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Imperator(z))))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Issue(z))))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Impossible(z))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Impermissible(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Issue(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y))) & all z.(Sally(z) -> Impossible(z)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperative(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y))) & all z.(Sally(z) -> Imperator(z)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Implicator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y))) & all z.(Sally(z) -> Issue(z)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y))) & all z.(Sally(z) -> Impossible(z)))"]}
{"id": "prontoqa_validation_239", "nl": "Each yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Voompus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Vulmpus(x))", "all x.(Yumpus(x) -> Vubis(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x.(Yumpus(x) & Vumpus(x))", "all x.(Yumpus(x) -> vumpus(x))", "all x.(Yumpus(x) -> Vukpus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x y.((Yumpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Vampire(x))", "all x.(Yumpus(x) -> Vuxpus(x))", "all x.(Yumpus(x) -> Vuze(x))"]}
{"id": "prontoqa_validation_240", "nl": "Stella is not a vumpus, Stella is a sterpus, and Stella is a shumpus.", "fol": "(-vumpus(Stella) & sterpus(Stella) & shumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vimpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterepus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y)))", "(all x y z.((Stella(x) & Vumpus(y) & Sterpus(z)) -> -Vumpus(x)) & ((Stella(x) & Sterpus(x)) -> Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y))) & all z.(Shumpus(z) -> -Vumpus(y)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterepus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Shumpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y))))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y))))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x))))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(z))))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y))) & all z.(Shumpus(z) -> -Vumpus(y)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> Shumpus(z))))"]}
{"id": "prontoqa_validation_241", "nl": "Stella is not a yumpus.", "fol": "-yumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Yumpus(x))", "exists x.(Stella(x) & -Yumpus(x))", "Stella is notYumpus(Stella)", "(-Yumpus(Stella))", "Stella is not yumpus.", "Stella is not a yumpus.", "Stella -Yumpus(Stella)", "all x.(Stella(x) -> -Yumpus(x))", "Stella is -Yumpus(Stella)", "Stella -Yumpus(Stella))", "(-Yumpus(Stella) & -Yumpus(Stella))", "-Yumpus(Stella)", "all x.(Stella(x) -> -yumpus(x))", "Stella is notyumpus(Stella)", "all x.(Stella(x) -> (-Yumpus(x)))", "Stella & -Yumpus(Stella)"]}
{"id": "prontoqa_validation_242", "nl": "Lempuses are tumpuses.", "fol": "all x. (lempus(x) -> tumpus(x))", "prediction": ["all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x y.((Lempuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpuse(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempus(x) -> Tumpus(x))", "all x y.((Lempuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x y.((Lempuse(x) & Tumpus(y)) -> Tumpus(x,y))", "all x.(Lempuse(x) -> Tumpuse(x))", "all x.(Lempus(x) -> Tumulus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumor(x))", "all x.(Lempuse(x) -> Tumuse(x))", "all x.(Lumpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_243", "nl": "Alex is a lorpus and Alex is not a tumpus and Alex is an impus.", "fol": "(lorpus(Alex) & -tumpus(Alex) & impus(Alex))", "prediction": ["(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Impossible(x)))", "all x y z.((Alex(x) & Lorpus(x) & Tumpus(y) & Imperator(z)) -> (Lorpus(x) & -Tumpus(y) & Imperator(z)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Imperator(z)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Issue(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Impossible(z)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Imperator(z))))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y)) & all z.(Alex(z) -> Imperator(z))))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Issue(z))))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Issue(z)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Impermissible(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperative(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y))) & all z.(Alex(z) -> Impossible(z))))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y)) & all z.(Alex(z) -> Issue(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperium(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> -Tumpus(y)) & all z.(Alex(z) -> Impossible(z))))"]}
{"id": "prontoqa_validation_244", "nl": "Alex is not a lempus.", "fol": "-lempus(Alex)", "prediction": ["all x.(Alex(x) -> -Lempus(x))", "All x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Limpus(x))", "all x.(Alex(x) -> -lempus(x))", "Alex is not a lempus.", "all x.(Alex(x) -> -Lampus(x))", "ALL x.(Alex(x) -> -Lempus(x))", "exists x.(Alex(x) & -Lempus(x))", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) & -Lempus(x))", "All x.(Alex(x) -> -Limpus(x))", "all x.(Alex(x) -> -Lumpus(x))", "all x.(Alex(x) -> -Lempus(x))", "all x.(Alex(x) -> -Limes(x))", "(-Lempus(Alex))", "all x.(Alex(x) -> NoLempus(x))"]}
{"id": "prontoqa_validation_245", "nl": "Every jompus is a grimpus.", "fol": "all x. (jompus(x) -> grimpus(x))", "prediction": ["all x.(Jompus(x) -> Grimpus(x))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Gruppus(x))", "all x.(Jumpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grumpus(x))", "all x.(Jimpus(x) -> Gruppus(x))", "all x.(Jompus(x) -> Grupus(x))", "all x.(Jomess(x) -> Grimpus(x))", "exists x.(Jompus(x) & Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x y.((Jompus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Jumpus(x) -> Gruppus(x))", "all x.(Jompus(x) -> Grumpy(x))", "all x.(Jompus(x) -> Grappa(x))", "all x.(Jampus(x) -> Grimpus(x))", "all x.(Jimpus(x) -> Grumpus(x))"]}
{"id": "prontoqa_validation_246", "nl": "Wren is a vumpus, Wren is not a grimpus, and Wren is a yumpus.", "fol": "(vumpus(Wren) & -grimpus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (-Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yampus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yampus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z))))", "(all x.(Wren(x) -> Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (-Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.((Wren(y) & -Grimpus(y))) -> Yumpus(y)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x))))", "(all x.(Wren(x) -> Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (-Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z))))"]}
{"id": "prontoqa_validation_247", "nl": "Wren is not a jompus.", "fol": "-jompus(Wren)", "prediction": ["all x.(Wren(x) -> -Jompus(x))", "all x.(Wren(x) -> -Jimpus(x))", "all x.(Wren(x) -> -Jumpus(x))", "(-Jompus(Wren))", "All x.(Wren(x) -> -Jompus(x))", "all x.(Wren(x) -> -Jampus(x))", "exists x.(Wren(x) & -Jompus(x))", "all x.(Wren(x) -> -Jompus(x))", "-Jompus(Wren)", "all x.(Wren(x) -> -Joompus(x))", "all x.(Wren(x) -> -Jomessian(x))", "All x.(Wren(x) -> -Jimpus(x))", "all x.(Wren(x) & -Jompus(x))", "all x.(Wren(x) -> -Jomess(x))", "exists x.(Wren(x) & -Jimpus(x))", "All x.(Wren(x) -> -Jumpus(x))"]}
{"id": "prontoqa_validation_248", "nl": "Yumpuses are dumpuses.", "fol": "all x. (yumpus(x) -> dumpus(x))", "prediction": ["all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpus(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Umpus(x) -> Dumpuse(x))", "all x.(Umbus(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "all x y.((Yumpus(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Dumuse(x))", "all x y.((Yumpus(x) & Dumpuse(y)) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpuse(x) & Dumpuse(y)))", "all x y.((Yumpus(x) & Dumpus(y)) -> (Dumpus(x) & Dumpus(y)))", "all x.(Yumpuse(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpus(y)) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpus(y)) -> Is(x,y))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpus(y)))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(x)))"]}
{"id": "prontoqa_validation_249", "nl": "Sam is not a dumpus and Sam is a rompus and Sam is a zumpus.", "fol": "(-dumpus(Sam) & rompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Dumpus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> Zumpus(z))))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> Zumpus(z)))", "all x y z.((Sam(x) & Dumpus(x) & Rompus(y) & Zumpus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "(all x y z.((Sam(x) & Dumpus(y)) -> -Dumpus(x)) & ((Sam(z) & Rompus(z))) -> Zumpus(z)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(z) & Zumpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Sam(y) -> Rompus(y))) & all z.(Sam(z) -> Zumpus(z)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(x) & Zumpus(y)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) & Zumpus(x)))", "(all x.((Sam(x) & -Dumpus(x)) -> Rompus(x)) & all y.((Sam(y) & Zumpus(y)) -> Dumpus(y)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) | Zumpus(x)))", "(all x y z.((Sam(x) & Dumpus(y)) -> -Dumpus(x)) & ((Sam(z) & Rompus(z)) -> Zumpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Rompus(y) & All z.(Zumpus(z))) -> -Dumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) | Zumpus(x))))"]}
{"id": "prontoqa_validation_250", "nl": "Sam is not a yumpus.", "fol": "-yumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Yumpus(x))", "all x.((Sam(x) & -Yumpus(x)) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "exists x.(Sam(x) & -Yumpus(x))", "All x.(Sam(x) -> -Yumpus(x))", "all x.(Sam(x) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Yumpus(x))", "all x.((Sam(x) & -Yumpus(x)) -> -Sam(x))", "(Yumpus(Sam) & -Yumpus(Sam))", "all x.((Sam(x) & -Yumpus(x)) -> -Yampus(x))", "(-Yumpus(Sam) & -Yumpus(Sam))", "all x.((Sam(x) & -Yumpus(x)) -> NotYumpus(x))", "all x.((Sam(x) & -Yumpus(x)) -> -yumpus(x))", "-Yumpus(Sam)", "all x.((Sam(x) & -Yumpus(x)) -> -Yumpus(x))"]}
{"id": "prontoqa_validation_251", "nl": "Grimpuses are tumpuses.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpuse(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumulus(x))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x,y))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grampus(x) -> Tumpus(x))", "all x.(Grimpuse(x) -> Tumulus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppuse(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grompus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_252", "nl": "Max is not a tumpus, Max is a brimpus, and Max is a rompus.", "fol": "(-tumpus(Max) & brimpus(Max) & rompus(Max))", "prediction": ["(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y))) & all z.(Max(z) -> Rompus(z)))", "(all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> -Tumpus(x)) & ((Max(x) & Brimpus(x)) -> Rompus(x)))", "(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) & Brimpus(z))) -> Rompus(z)))", "(all x y z.(Max(x) -> -Tumpus(x)) & (Max(y) -> Brimpus(y)) & (Max(z) -> Rompus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x))))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & ((Max(x) -> Brimpus(x))) & ((Max(x) -> Rompus(x))))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & -Brimpus(x) & -Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y))) & all z.(Max(z) -> Rompus(z))))", "(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) & Brimpus(z)) -> Rompus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.((Max(y) & Brimpus(y)) -> Rompus(y)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & Brimpus(y) & Rompus(z)))"]}
{"id": "prontoqa_validation_253", "nl": "Max is not a grimpus.", "fol": "-grimpus(Max)", "prediction": ["all x.(Max(x) -> -Grimpus(x))", "All x.(Max(x) -> -Grimpus(x))", "(-Grimpus(Max))", "-Grimpus(Max)", "all x.(Max(x) -> -Grippus(x))", "all x.(Max(x) -> -Grimpus(x))", "all x.(Max(x) -> -Gruppus(x))", "all x.(Max(x) -> -Grimppus(x))", "all x.(Max(x) -> -Grampus(x))", "Max is notGrimpus(Max)", "all x.(Max(x) -> -Grisp(x))", "all x.(Max(x) -> -Grimpus(x))", "All x.(Max(x) -> -Grippus(x))", "all x.(Max(x) -> -Gripper(x))", "all x.(Max(x) & -Grimpus(x))", "All x.(Max(x) -> -Grimpus(x))"]}
{"id": "prontoqa_validation_254", "nl": "Fae is a grimpus, Fae is not a rompus, and Fae is a jompus.", "fol": "(grimpus(Fae) & -rompus(Fae) & jompus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z))))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Rompus(y)) & (Fae(z) -> Jompus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x))))", "(all x.(Fae(x) -> Grumpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y))) & all z.(Fae(z) -> Jompus(z)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Rompus(y)) & (Fae(y) -> Jompus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (-Fae(x) -> Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x y z.(Fae(x) -> Grimpus(x)) & ((Fae(y) & -Rompus(y)) | (Fae(z) & Jompus(z)))))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Rompus(z)) -> (-Rompus(y) & Jompus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y))) & all z.(Fae(z) -> Jompus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rrompus(x)) & (Fae(x) -> Jompus(x)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Rompus(y)) & (Fae(z) -> Jompus(z))))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Rompus(z)) -> (-Rompus(y) & Jompus(y)))"]}
{"id": "prontoqa_validation_255", "nl": "Fae is not a gorpus.", "fol": "-gorpus(Fae)", "prediction": ["all x.(Fae(x) -> -Gorpus(x))", "all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Fae))", "exists x.(Fae(x) & -Gorpus(x))", "-Gorpus(Fae)", "all x.(Fae(x) -> -Gorpus(x))", "All x.(Fae(x) -> -Gorpus(x))", "exists x.(Fae(x) & -Gorpus(x))", "(Gorpus(Fae) & -Gorpus(Fae))", "all x.(Fae(x) -> -Gerpus(x))", "all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Fae))", "(Gorpus(Fae) & -Gorpus(Fae))", "(-Gorpus(Fae) & -Gorpus(Fae))", "(Gorpus(Fae) & -Gorpus(Fae))", "all x.(Fae(x) -> -Rose(x))"]}
{"id": "prontoqa_validation_256", "nl": "Gorpuses are tumpuses.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumulus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpuse(x) -> Tumulus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpuse(x))", "all x y.((Gorpuse(x) & Tumpus(y)) -> Tumpus(x,y))", "all x y.((Gorpuse(x) & Tumpus(y)) -> Tumpus(x))"]}
{"id": "prontoqa_validation_257", "nl": "Fae is a vumpus and Fae is not a tumpus and Fae is a sterpus.", "fol": "(vumpus(Fae) & -tumpus(Fae) & sterpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterepus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y))) & all z.(Fae(z) -> Sterpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterepus(z))))", "(all x y.(Fae(x) -> Vumpus(x)) & (Fae(y) -> -Tumpus(y)) & (Fae(y) -> Sterpus(y)))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x))))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Sterpus(z)) -> (-Tumpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y))) & all z.(Fae(z) -> Sterpus(z))))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Sterpus(z)) -> (-Tumpus(y) & -Tumpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & (-Fae(x) -> Tumpus(x)) & (-Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (-Fae(x) -> Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Steerpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Steroid(x)))"]}
{"id": "prontoqa_validation_258", "nl": "Every yumpus is a shumpus.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpback(x))", "all x y.((Yumpus(x) & Humpus(y)) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x y.((Yumpus(x) & Humpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Scumpus(x))", "all x.(Yumpus(x) -> shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Simpus(x))", "exists x.(Yumpus(x) & Humpus(x))", "all x.(Yumpus(x) -> Shump(x))", "all x.(Yumpus(x) -> Humptious(x))", "all x.(Yumpus(x) -> Shimpus(x))", "all x y.((Yumpus(x) & Humpus(y)) -> HasShumpus(x))"]}
{"id": "prontoqa_validation_259", "nl": "Wren is not a shumpus and Wren is a lorpus and Wren is a grimpus.", "fol": "(-shumpus(Wren) & lorpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y))) & all z.(Wren(z) -> Grimpus(z)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.((Wren(y) & Lorpus(y))) -> Grimpus(y)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Grimpus(z)))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y))) & all z.(Wren(z) -> Grimpus(z))))", "(all x y z.((Wren(x) & Humpus(y)) -> -Shumpus(x)) & ((Wren(z) & Lorpus(z))) -> Grimpus(z)))", "(all x.(Wren(x) -> -Shumpus(x)) & (Wren(x) -> Lorpus(x)) & (Wren(x) -> Grimpus(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x))) & ((Wren(x) & Grimpus(x))))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Gruppus(z))))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) -> Lorpus(x))) & ((Wren(x) -> Grimpus(x))))", "(all x.(Wren(x) -> -Shumpus(x)) & (Lorpus(x) | Grimpus(x))))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) -> Lorpus(x)) & ((Wren(x) -> Grimpus(x)))))", "(all x y.((Wren(x) & Humpus(y)) -> -Shumpus(x)) & ((Wren(x) & Lorpus(y)) -> Grimpus(x)))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Grimpus(x)))"]}
{"id": "prontoqa_validation_260", "nl": "Each dumpus is an impus.", "fol": "all x. (dumpus(x) -> impus(x))", "prediction": ["all x.(Dumpus(x) -> Impossible(x))", "all x.(Dumpus(x) -> IsImpossible(x))", "all x.(Dumpus(x) -> Isolated(x))", "all x.(Dumpus(x) -> Illegal(x))", "all x.(Dumpus(x) -> Impeccable(x))", "all x.(Dumpus(x) -> Is(x))", "all x.(Dumpus(x) -> Implicator(x))", "all x.(Dumpus(x) -> Impermissible(x))", "all x.(Dumpus(x) -> IsImprovement(x))", "all x.(Dumpus(x) -> Imperempt(x))", "all x.(Dumpus(x) -> Imperative(x))", "all x.(Dumpus(x) -> Impermant(x))", "all x.(Dumpus(x) -> Implicit(x))", "all x.(Dumpus(x) -> Is(x,y))", "all x.(Dumpus(x) -> Imperium(x))", "all x.(Dumpus(x) -> Is(x,Impossible))"]}
{"id": "prontoqa_validation_261", "nl": "Rex is not an impus and Rex is a sterpus and Rex is a yumpus.", "fol": "(-impus(Rex) & sterpus(Rex) & yumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Impossible(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> Yumpus(x)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yumpus(z)))", "(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) | (Rex(x) & Yumpus(x)))))", "(all x.(Rex(x) -> -Impossible(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> Yumpus(x)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yumpus(z)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yampus(z)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.((Rex(y) & Sterpus(y))) -> Yumpus(y)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yumpus(z))))", "(all x.(Rex(x) -> -Issue(x)) & ((Rex(x) & Sterpus(x)) | (Rex(x) & Yumpus(x)))))", "(all x.(Rex(x) -> -Impossible(x)) & all y.((Rex(y) & Sterpus(y))) -> Yumpus(y)))", "(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) | (Rex(x) & Yumpus(x)))))", "(all x.(Rex(x) -> -Impossible(x)) & all y.((Rex(y) & Sterpus(y))) -> Yampus(y)))", "(all x.(Rex(x) -> -Impossible(x)) & (Rex(x) -> Sterpus(x)) & (Rex(x) -> Yumpus(x))))", "(all x.(Rex(x) -> -Issue(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yumpus(z)))", "all x y z.((Rex(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yampus(z))))"]}
{"id": "prontoqa_validation_262", "nl": "Everything that is an impus, a vumpus, or a rompus is a wumpus, a lorpus, and a yumpus.", "fol": "all x. ((impus(x) | vumpus(x) | rompus(x)) -> (wumpus(x) & lorpus(x) & yumpus(x)))", "prediction": ["all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yampus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) & Lorpus(x) & Yampus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) & Lordpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_263", "nl": "Polly is a rompus.", "fol": "rompus(Polly)", "prediction": ["all x.(Rompus(x) -> Polly(x))", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "all x.(Rompus(x) -> Polly(x))", "All x.(Polly(x) -> Rompus(x))", "All x.(Polly(x) -> Rompus(x))", "all x.((Polly(x) & Rompus(x)) -> Polly(x))", "all x.(Ploy(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "all x.((Polly(x) & Rompus(x)) -> Polly(x))", "all x.((Polly(x) & Rompus(x)) -> Is(x,y))", "Polly is a rompus.", "all x.((Polly(x) & Rompus(x)) -> Has(x,y))", "all x.((Polly(x) & Rompus(x)) -> Is(x,y))", "all x.((Polly(x) & Rompus(x)) -> Rimpus(x))", "all x.((Polly(x) & Rompus(x)) -> Raccoon(x))"]}
{"id": "prontoqa_validation_264", "nl": "Polly is a lorpus.", "fol": "lorpus(Polly)", "prediction": ["all x.(Lorpus(x) -> Polly(x))", "all x.(Polly(x) -> Lorpus(x))", "all x.(Lorph(x) -> Polly(x))", "all x.(Polly(x) -> Llorpus(x))", "all x.(Lorpus(x) -> Polly(x))", "All x.(Lorpus(x) -> Polly(x))", "Polly is a lorpus.", "exists x.(Lorpus(x) & Polly(x))", "All x.(Polly(x) -> Lorpus(x))", "all x.(Polly(x) -> Lorpus(x))", "exists x.(Polly(x) & Lorpus(x))", "all x.(Polly(x) -> Lorpus(x))", "all x.(Polly(x) -> Loomis(x))", "(Lorpus(Polly) & LivesIn(Polly))", "all x.(Polly(x) -> Lordpus(x))", "(Lorpus(Polly) & LivesIn(Polly,Lorpus))"]}
{"id": "prontoqa_validation_265", "nl": "Everything that is a jompus or a gorpus or a yumpus is a grimpus and a dumpus and a rompus.", "fol": "all x. ((jompus(x) | gorpus(x) | yumpus(x)) -> (grimpus(x) & dumpus(x) & rompus(x)))", "prediction": ["all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yuppus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Smoothpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Smoothpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) | Dumpus(x) | Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) | Dumpus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_266", "nl": "Polly is a yumpus.", "fol": "yumpus(Polly)", "prediction": ["all x.(Yumpus(x) -> Polly(x))", "all x.(Polly(x) -> Yampus(x))", "all x.(Polly(x) -> Yumpus(x))", "all x.(Polly(x) -> Yampus(x))", "all x.(Yumpus(x) -> Polly(x))", "all x.(Polly(x) -> Yumpus(x))", "exists x.(Yumpus(x) & Polly(x))", "All x.(Polly(x) -> Yampus(x))", "all x.(Polly(x) -> Yumpa(x))", "all x.(Polly(x) -> Yumpus(x))", "All x.(Yumpus(x) -> Polly(x))", "All x.(Polly(x) -> Yumpus(x))", "All x.(Polly(x) -> Yumpus(x))", "Polly is a yumpus.", "Polly is yumpus.", "all x.(Polly(x) -> Yumpa(x))"]}
{"id": "prontoqa_validation_267", "nl": "Everything that is a lorpus, a numpus, or a wumpus is a gorpus.", "fol": "all x. ((lorpus(x) | numpus(x) | wumpus(x)) -> gorpus(x))", "prediction": ["all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.(((Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x.((Lorpus(x) | Nompus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wompus(x)) -> Gorpus(x))", "all x.((Gorpus(x) & (Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x.((Gorpus(x) & (Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x.(((Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wampus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Nompus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wompus(x)) -> Gorpus(x))", "all x.((Larpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wempus(x)) -> Gorpus(x))", "all x.((Lorph(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wormpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_validation_268", "nl": "Sally is a lorpus and a dumpus and a rompus.", "fol": "(lorpus(Sally) & dumpus(Sally) & rompus(Sally))", "prediction": ["all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x y z.((Sally(x) & Lorpus(y) & Dumpus(z)) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Dumpus(z)) -> (Lorpus(x) & Dumpus(z) & Rompus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Dumpus(z)) -> (Lorpus(x) & Dumpus(z) & Rompus(z)))", "all x y z.((Sally(x) & Lorpus(y) & Dumpus(z)) -> (Lorpus(x) & Dumpus(y) & Rompus(z)))", "all x.(Sally(x) -> (Lorph(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "exists x.(Sally(x) & Lorpus(x) & Dumpus(x) & Rompus(x))", "all x y z.((Sally(x) & Lorpus(y) & Dumpus(z) & Rompus(x)) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) | Dumpus(x) | Rompus(x)))", "All x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Sally(x) & Lorpus(x) & Dumpus(y) & Rompus(z)) -> (Lorpus(x) & Dumpus(y) & Rompus(z)))", "all x y.((Sally(x) & Lorpus(x) & Dumpus(y) & Rompus(x)) -> (Lorpus(x) & Dumpus(y) & Rompus(y)))", "all x y z.((Sally(x) & Lorpus(y) & Dumpus(z)) -> (Lorpus(x) & Rompus(x)))", "all x y z.((Sally(x) & Lorpus(y) & Dumpus(z) & Rompus(x)) -> (Lorpus(x) & Dumpus(y) & Rompus(z)))"]}
{"id": "prontoqa_validation_269", "nl": "Sally is a gorpus.", "fol": "gorpus(Sally)", "prediction": ["all x.(Sally(x) -> Gorpus(x))", "all x.(Sally(x) -> Gorpus(x))", "all x.((Sally(x) & Gorpus(x)) -> Gorpus(x))", "all x.(Gorpus(x) -> Sally(x))", "all x.((Sally(x) & Gorpus(x)) -> Gorpus(x))", "all x.(Gorpus(x) -> Sally(x))", "All x.(Sally(x) -> Gorpus(x))", "All x.(Sally(x) -> Gorpus(x))", "Sally is Gorpus.", "all x.(Sally(x) -> Gorpus(x))", "all x.((Sally(x) & Gorpus(x)) -> Is(x,y))", "all x.(Gorpus(x) -> Sally(x))", "all x.(Sally(x) -> Gorpus(x))", "all x.((Sally(x) & Gorpus(x)) -> Gorpus(x))", "Sally is Gorpus(Sally)", "(Gorpus(Sally) -> Gorpus(Sally))"]}
{"id": "prontoqa_validation_270", "nl": "Brimpuses are lempuses and zumpuses and grimpuses.", "fol": "all x. (brimpus(x) -> (lempus(x) & zumpus(x) & grimpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x.(Brimpuse(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) & Zumpuse(x) & Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) & Zumpuse(x) & Grimpuse(x)))", "all x.(Brimuse(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) & Zumpus(x) & Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpus(x) | Grimpus(x)))", "all x.(Brimpus(x) -> (Lempuse(x) & Zumpus(x) & Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpus(x) | Grimpus(x)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpus(y)))", "(all x.(Brompus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpus(y)))", "(all x.(Brompus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpuse(y)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpuse(y)))"]}
{"id": "prontoqa_validation_271", "nl": "Wren is a brimpus.", "fol": "brimpus(Wren)", "prediction": ["all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "All x.(Wren(x) -> Brimpus(x))", "exists x.(Wren(x) & Brimpus(x))", "all x y.((Wren(x) & Brimpus(y)) -> Is(x,y))", "all x.(Wren(x) & Brimpus(x))", "all x y.((Wren(x) & Brimpus(y)) -> Has(x,y))", "all x.(Wren(x) -> Brumpus(x))", "all x.((Wren(x) & Brimpus(x)) -> Is(x,y))", "all x y.((Wren(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Warn(x) -> Brimpus(x))", "all x y.((Wren(x) & Brimpus(y)) -> Brumpus(x))", "all x.(Wren(x) -> Brampus(x))", "all x.((Wren(x) & Brimpus(x)) -> Has(x,y))", "all x y.((Wren(x) & Brimpus(y)) -> Brampus(x))", "all x y.((Wren(x) & Brimpus(y)) -> Breed(x,y))"]}
{"id": "prontoqa_validation_272", "nl": "Wren is a dumpus or a vumpus or a grimpus.", "fol": "(dumpus(Wren) | vumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Voompus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Dumpus(x) | Vumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Dumpus(x) | Vampus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vampus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dupus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumps(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Gruppus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Dumpus(x) | Vumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Dumps(x) | Vumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_validation_273", "nl": "Each impus is a yumpus.", "fol": "all x. (impus(x) -> yumpus(x))", "prediction": ["all x.(Impossible(x) -> Yumpus(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yampus(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x.(Issue(x) -> Yampus(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Impact(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpsum(x))", "all x.(Impossible(x) -> Yumpa(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x.(Issue(x) -> Yumpa(x))", "all x.(Impact(x) -> Yumpus(x))", "all x.(Impact(x) -> Yampus(x))", "all x.(Issue(x) -> Yumpsum(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Impedus(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_274", "nl": "Sally is a dumpus, Sally is not a yumpus, and Sally is a brimpus.", "fol": "(dumpus(Sally) & -yumpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x))))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y))) & all z.(Sally(z) -> Brimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y))) & all z.(Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) & -Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y)) & all z.(Sally(z) -> Brimpus(z)))", "(all x y z.(Sally(x) -> Dumpus(x)) & (Sally(y) -> -Yumpus(y)) & (Sally(z) -> Brimpus(z)))", "(all x y z.(Sally(x) -> Dumpus(x)) & ((Sally(y) & -Yumpus(y)) | (Sally(z) & Brimpus(z)))))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x))) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Sally(x) & Dumpus(x) & -Yumpus(y) & -Brimpus(z)))", "(all x y z.(Sally(x) -> Dumpus(x)) & ((Sally(y) & -Yumpus(y)) -> Brimpus(z)))", "(all x y z.(Sally(x) -> Dumpus(x)) & (Sally(y) -> -Yumpus(y)) & (Sally(z) -> Brimpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & ((Sally(x) & -Yumpus(x)) | (Sally(x) & Brimpus(x)))))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Dumpus(x) & Brimpus(z)))"]}
{"id": "prontoqa_validation_275", "nl": "Sally is a yumpus, Sally is not an impus, or Sally is an impus.", "fol": "(yumpus(Sally) | -impus(Sally) | impus(Sally))", "prediction": ["all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impossible(x)))", "all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impossible(x)))", "all x.((Sally(x) & Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yampus(x)) | (-Impossible(x) | Impossible(x))))", "all x.((Sally(x) & Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yampus(x)) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) & (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yampus(x)) & (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yampus(x)) | (-Sally(x) & Impossible(x))))", "(all x.(Sally(x) -> Yampus(x)) & (-Impossible(x) | Impossible(x))))", "all x y.((Sally(x) & Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) & (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Sally(x) & Impossible(x))))", "all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impeccable(x)))"]}
{"id": "prontoqa_validation_276", "nl": "Everything that is a grimpus, a brimpus, or a jompus is a lempus and a dumpus and a lorpus.", "fol": "all x. ((grimpus(x) | brimpus(x) | jompus(x)) -> (lempus(x) & dumpus(x) & lorpus(x)))", "prediction": ["all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grimpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Element(x) & (Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grampus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Rumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smopus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Gruppus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Murph(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crompus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grumps(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smaller(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smoke(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smokey(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crampus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_277", "nl": "Sally is a brimpus.", "fol": "brimpus(Sally)", "prediction": ["all x.(Sally(x) -> Brimpus(x))", "all x.(Brimpus(x) -> Sally(x))", "All x.(Sally(x) -> Brimpus(x))", "all x.(Brumpus(x) -> Sally(x))", "all x.((Sally(x) & Brimpus(x)) -> Brimpus(x))", "Sally is a Brimpus.", "Sally is a brimpus.", "all x.((Sally(x) & Brimpus(x)) -> Brampus(x))", "all x.(Brimpus(x) -> Sally(x))", "all x.((Sally(x) & Brimpus(x)) -> Is(x,y))", "all x.((Sally(x) & Brimpus(x)) -> Brumpus(x))", "exists x.(Sally(x) & Brimpus(x))", "all x.((Sally(x) & Brimpus(x)) -> Bimpus(x))", "all x.((Sally(x) & Brimpus(x)) -> Brempus(x))", "all x.(Sally(x) -> Brimpus(x))", "all x.((Sally(x) & Brimpus(x)) -> Has(x,y))"]}
{"id": "prontoqa_validation_278", "nl": "Sally is a dumpus.", "fol": "dumpus(Sally)", "prediction": ["Sally is a dumpus.", "all x.(Sally(x) -> Dumpus(x))", "All x.(Sally(x) -> Dumpus(x))", "Sally is a Dumpus.", "all x.((Sally(x) & Dumpus(x)) -> Dumpus(x))", "exists x.(Sally(x) & Dumpus(x))", "all x.((Sally(x) & Dumpus(x)) -> (Dumpus(x) & Dumpus(x)))", "all x.((Sally(x) & Dumpus(x)) -> Is(x,y))", "Sally is a Dumpus(Sally)", "all x.((Sally(x) & Dumpus(x)) -> (Dumpus(x) & Dumpus(x)))", "all x.((Sally(x) & Dumpus(x)) -> -Dumpus(x))", "all x.((Sally(x) & Dumpus(x)) -> (Dumpus(x) | Dumpus(x)))", "all x.(Sally(x) -> Dumpus(x))", "all x.((Sally(x) & Dumpus(x)) -> Has(x,y))", "all x.((Sally(x) & Dumpus(x)) -> Is(x,Sally))", "all x.((Sally(x) & Dumpus(x)) -> (Dumpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_validation_279", "nl": "Each dumpus is a grimpus, a sterpus, and a gorpus.", "fol": "all x. (dumpus(x) -> (grimpus(x) & sterpus(x) & gorpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) & Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) -> Gorpus(y)))", "exists x.(Dumpus(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))", "all x.(Dumpus(x) -> (Gruppus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Smoothpus(x) | Sterpus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & (Sterpus(x) & Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterepus(y) -> Gorpus(y)))", "all x.(Dumpus(x) -> (Grampus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) & all z.(Gorpus(z)) -> Grimpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) & all z.(Gorpus(z)) -> Grimpus(y)))", "all x.(Dumpus(x) -> (Grimpus(x) & Sterpus(x) & Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) & all z.(Gorpus(z)) -> Gorpus(z))))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterepus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_280", "nl": "Wren is a dumpus.", "fol": "dumpus(Wren)", "prediction": ["all x.(Wren(x) -> Dumpus(x))", "All x.(Wren(x) -> Dumpus(x))", "exists x.(Wren(x) & Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "all x y.((Wren(x) & Dumpus(y)) -> Is(x,y))", "all x y.((Wren(x) & Dumpus(y)) -> Has(x,y))", "all x.(Wren(x) -> Dumus(x))", "all x y.((Wren(x) & Dumpus(y)) -> Dumpus(x))", "ALL x.(Wren(x) -> Dumpus(x))", "(Dumpus(Wren))", "all x.(Wren(x) & Dumpus(x))", "all x y.((Wren(x) & Dumpus(y)) -> Affects(x,y))", "all x y.((Wren(x) & Dumpus(y)) -> Requires(x,y))", "all x y.((Wren(x) & Dumpus(y)) -> -Dumpus(x))", "all x.(Wren(x) -> (Dumpus(x) & -Dumpus(x)))", "all x y.((Wren(x) & Dumpus(y)) -> LocatedIn(x,y))"]}
{"id": "prontoqa_validation_281", "nl": "Wren is a shumpus or a sterpus or a grimpus.", "fol": "(shumpus(Wren) | sterpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Gruppus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterepus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grumpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "exists x.(Wren(x) & (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Gruppus(x))))", "all x.(Wren(x) -> (HasShumpus(x) | HasSterpus(x) | HasGrimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Steerpus(x) | Grimpus(x)))", "(all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grappus(x)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Grumpus(x))))", "all x.(Wren(x) -> (shumpus(x) | sterpus(x) | grimpus(x)))"]}
{"id": "prontoqa_validation_282", "nl": "Brimpuses are jompuses.", "fol": "all x. (brimpus(x) -> jompus(x))", "prediction": ["all x.(Brompus(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimpuse(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brompus(x) -> Jompus(x))", "all x.(Birmuse(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brompus(x) -> Jompus(x))", "all x.(Brumpus(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Jompuse(x))", "all x.(Brombus(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Jompuse(x))", "all x.(Brimuse(x) -> Jompuse(x))", "all x.(Brimuse(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jombus(x))", "all x.(Brompus(x) -> Jombus(x))"]}
{"id": "prontoqa_validation_283", "nl": "Rex is a rompus and a yumpus and a brimpus.", "fol": "(rompus(Rex) & yumpus(Rex) & brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) & Yampus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z)) -> Brimpus(z))))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) | Brimpus(x))))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brumpus(z)) -> Brimpus(z))))", "all x.(Rex(x) -> (Rompus(x) & Yompus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z) -> Brimpus(z))))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Yampus(x) | Brimpus(x)))", "all x.(Rex(x) -> (rompus(x) & yumpus(x) & brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) -> Brimpus(y)))", "all x y z.((Rex(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) & Yumpus(z) & Brimpus(z)))"]}
{"id": "prontoqa_validation_284", "nl": "Rex is a brimpus or a jompus or a gorpus.", "fol": "(brimpus(Rex) | jompus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brompus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> ((Brimpus(x) | Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> ((Brimpus(x) | Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brompus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brampus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Rex(x) -> Brimpus(x)) | (Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Blumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Bimpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_285", "nl": "Everything that is a dumpus and a sterpus and a brimpus is a wumpus.", "fol": "all x. ((dumpus(x) & sterpus(x) & brimpus(x)) -> wumpus(x))", "prediction": ["all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wampus(x))", "all x.((Dupus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.(((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterepus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Element(x) & Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Humpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brumpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wompus(x))", "all x.((Dumps(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_validation_286", "nl": "Alex is a dumpus.", "fol": "dumpus(Alex)", "prediction": ["all x.(Alex(x) -> Dumpus(x))", "All x.(Alex(x) -> Dumpus(x))", "exists x.(Alex(x) & Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumus(x))", "ALL x.(Alex(x) -> Dumpus(x))", "Alex is a Dumpus.", "all x.(Alex(x) & Dumpus(x))", "Alex is a Dumpus(Alex)", "Alex is a dumpus.", "All x.(Alex(x) -> Dumpus(x))", "Alex is Dumpus(Alex)", "All x.(Alex(x) -> Dumus(x))", "all x.(Alex(x) -> Duskus(x))", "all x.(Alex(x) -> Puss(x))", "(Dumpus(Alex) & -Dumpus(Alex))"]}
{"id": "prontoqa_validation_287", "nl": "Alex is a sterpus.", "fol": "sterpus(Alex)", "prediction": ["all x.(Alex(x) -> Sterpus(x))", "All x.(Alex(x) -> Sterpus(x))", "all x.(Sterepus(x) -> Alex(x))", "all x.(Sterepus(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Alex(x))", "all x.((Alex(x) & Sterpus(x)) -> Sterpus(x))", "all x y.((Alex(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Alex(x) -> Sterepus(x))", "all x.(Alex(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Sterpus(x))", "all x.(Sterepus(x) -> Sterepus(x))", "all x.((Alex(x) & Sterpus(x)) -> Steroid(x))", "all x.(Sterepus(x) -> Sterpus(x))", "all x.(Sterepus(x) -> Alex(x))", "all x.(Alex(x) -> Steroid(x))", "all x y.((Alex(x) & Sterpus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_288", "nl": "Alex is a brimpus.", "fol": "brimpus(Alex)", "prediction": ["all x.(Alex(x) -> Brimpus(x))", "All x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) & Brimpus(x))", "all x.((Alex(x) & Brimpus(x)) -> Brimpus(x))", "all x y.((Alex(x) & Brimpus(y)) -> Brimpus(x))", "all x y.((Alex(x) & Brimpus(y)) -> Is(x,y))", "all x.(Brampus(x) -> Alex(x))", "all x.((Alex(x) & Brimpus(x)) -> Is(x,y))", "all x.((Alex(x) & Brimpus(x)) -> Brampus(x))", "all x.(Brimpus(x) -> Alex(x))", "all x.(Alex(x) -> Brumpus(x))", "all x.((Alex(x) & Brimpus(x)) -> Has(x,y))", "all x.((Alex(x) & Brimpus(x)) -> Brempus(x))", "all x.((Alex(x) & Brimpus(x)) -> Bimpus(x))"]}
{"id": "prontoqa_validation_289", "nl": "Alex is a zumpus, a wumpus, or a rompus.", "fol": "(zumpus(Alex) | wumpus(Alex) | rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wompus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tommus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wampus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Romanpus(x)))", "all x.(Alex(x) -> (Tommpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (zumpus(x) | wumpus(x) | rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wump(x) | Rompus(x)))", "all x.(Alex(x) -> (Zombie(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Humpus(x) | Rompus(x)))", "exists x.(Alex(x) & (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Atompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Umpus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_290", "nl": "Everything that is a numpus or a jompus or a vumpus is a rompus.", "fol": "all x. ((numpus(x) | jompus(x) | vumpus(x)) -> rompus(x))", "prediction": ["all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.((Number(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vampus(x)) -> Rompus(x))", "all x.(((Nompus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.(((Numpus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "all x.(((Numpus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vampus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vampus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vampire(x)) -> Rompus(x))"]}
{"id": "prontoqa_validation_291", "nl": "Wren is a yumpus, a vumpus, and a shumpus.", "fol": "(yumpus(Wren) & vumpus(Wren) & shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vampus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Voompus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vampus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Voompus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vampus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vampus(x) & Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Shumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Shumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vulmpus(x) & Humpus(x)))", "(Yumpus(Wren) & Vumpus(Wren) & Humpus(Wren))"]}
{"id": "prontoqa_validation_292", "nl": "Wren is a rompus.", "fol": "rompus(Wren)", "prediction": ["all x.(Wren(x) -> Rompus(x))", "all x.(Rompus(x) -> Wren(x))", "All x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "exists x.(Wren(x) & Rompus(x))", "all x.(Wren(x) -> (Rompus(x) & -Rompus(x)))", "all x.(Wren(x) -> Rupus(x))", "all x y.((Wren(x) & Rompus(y)) -> Is(x,y))", "all x y.((Wren(x) & Rompus(y)) -> Raccoon(x))", "all x.(Wren(x) -> Raccoon(x))", "all x.(Wren(x) -> Rhopus(x))", "all x y.((Wren(x) & Rompus(y)) -> Has(x,y))", "all x.(Wren(x) -> Rimpus(x))", "all x y.((Wren(x) & Rompus(y)) -> Rompus(x))", "all x.(Wren(x) -> Romanose(x))", "all x.(Wren(x) -> (Rompus(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_293", "nl": "Each numpus is not a shumpus.", "fol": "all x. (numpus(x) -> -shumpus(x))", "prediction": ["all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numerus(x) -> -Shumpus(x))", "all x.(numpus(x) -> -Shumpus(x))", "all x.((Numpus(x) & -Shumpus(x)) -> -Shumpus(x))", "all x.(Number(x) -> -Shumpus(x))", "all x.(Shumpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "exists x.(Nompus(x) & -Shumpus(x))", "exists x.(Numpus(x) & -Shumpus(x))", "all x.(Nomus(x) -> -Shumpus(x))", "exists x.(Numpus(x) & -Shumpus(x))", "all x.((Numpus(x) & -Shumpus(x)) -> -Numpus(x))"]}
{"id": "prontoqa_validation_294", "nl": "Everything that is a lempus, a yumpus, or a brimpus is a shumpus.", "fol": "all x. ((lempus(x) | yumpus(x) | brimpus(x)) -> shumpus(x))", "prediction": ["all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Shumpus(x))", "all x.((Lempus(x) | Yuppus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Shumpus(x))", "all x.(((Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Shumpus(x))", "all x.((Lempus(x) | Yompus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yukpus(x) | Brimpus(x)) -> Humpus(x))", "all x.(((Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yukon(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yupus(x) | Brimpus(x)) -> Humpus(x))", "all x.(((Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Limpus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))"]}
{"id": "prontoqa_validation_295", "nl": "Rex is a numpus and a gorpus and a rompus.", "fol": "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (numpus(x) & gorpus(x) & rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & All z.(Rompus(z)) -> Rompus(z))))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) -> Rompus(y)))", "all x.(Rex(x) -> (Nompus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numerus(x) & Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Number(x) & Gorpus(x) & Rompus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & All z.(Rompus(z))) -> Rompus(z)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & all z.(Rompus(z)) -> Rompus(z))))", "(all x.(Rex(x) -> Numpus(x)) & (Gorpus(x) | Rompus(x))))", "all x.(Rex(x) -> (Numpus(x) | Gorpus(x) | Rompus(x)))", "(all x.(Rex(x) -> Numpus(x)) & (Gorpus(x) -> Rompus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & All z.(Rompus(z))) -> Nompus(x)))"]}
{"id": "prontoqa_validation_296", "nl": "Everything that is a wumpus, a jompus, and a tumpus is a zumpus and a sterpus and a brimpus.", "fol": "all x. ((wumpus(x) & jompus(x) & tumpus(x)) -> (zumpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterepus(x) & Brimpus(x)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) | Sterpus(x) | Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Stompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterus(x) & Brimpus(x)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Zumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tommpus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brumpus(x)))", "all x.(((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Toumpus(x) & Sterpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_297", "nl": "Max is a wumpus.", "fol": "wumpus(Max)", "prediction": ["all x.(Max(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Max(x))", "All x.(Max(x) -> Wumpus(x))", "all x.(Max(x) -> Wampus(x))", "(Wumpus(Max))", "all x.((Max(x) & Wumpus(x)) -> Wumpus(x))", "all x.(Max(x) -> Wompus(x))", "(Wumpus(Max) & -Wumpus(Max))", "all x.(Wumpus(x) -> Max(x))", "all x.(Max(x) -> Wempus(x))", "all x.((Max(x) & Wumpus(x)) -> Wampus(x))", "all x.((Max(x) & Wumpus(x)) -> Is(x,y))", "all x.(Max(x) -> Wumpus(x))", "(Wumpus(Max) -> Wumpus(Max))", "(Wumpus(Max) -> Wumpus(Max))", "(Wumpus(Max) & Wumpus(Max))"]}
{"id": "prontoqa_validation_298", "nl": "Max is a jompus.", "fol": "jompus(Max)", "prediction": ["all x.(Max(x) -> Jompus(x))", "All x.(Max(x) -> Jompus(x))", "all x.(Jompus(x) -> Max(x))", "all x.(Max(x) -> Jompus(x))", "all x.(Jumpus(x) -> Max(x))", "all x.((Max(x) & Jompus(x)) -> Has(x,y))", "all x.(Jompus(x) -> (Max(x) & Jompus(x)))", "all x.((Max(x) & Jompus(x)) -> Is(x,y))", "all x.((Max(x) & Jompus(x)) -> Jompus(x))", "all x.(Jimpus(x) -> Max(x))", "all x.((Max(x) & Jompus(x)) -> Has(x))", "all x.(Jompus(x) -> Max(x))", "(Jumpus(Max) -> Jompus(Max))", "(Jompus(Max))", "(Jumpus(Max) & Jompus(Max))", "(Jimpus(Max) -> Jompus(Max))"]}
{"id": "prontoqa_validation_299", "nl": "Max is a tumpus.", "fol": "tumpus(Max)", "prediction": ["all x.(Max(x) -> Tumpus(x))", "all x.(Max(x) -> Tumpus(x))", "all x.(Max(x) -> Tumulus(x))", "All x.(Max(x) -> Tumpus(x))", "all x.(Max(x) -> Totumpus(x))", "All x.(Max(x) -> Tumpus(x))", "(Tumpus(Max) -> Tumpus(Max))", "all x.(Max(x) -> Pumpus(x))", "all x.(Tumpus(x) -> Max(x))", "(Tumpus(Max) -> Tumpus(Max))", "All x.(Max(x) -> Tumulus(x))", "all x.(Max(x) -> Tumpet(x))", "(Tumpus(Max) & -Tumpus(Max))", "all x.(Max(x) -> Tumult(x))", "(Tumpus(Max) & Tumpus(Max))", "all x.(Max(x) -> Tumus(x))"]}
{"id": "prontoqa_validation_300", "nl": "Max is a zumpus.", "fol": "zumpus(Max)", "prediction": ["all x.(Max(x) -> Zumpus(x))", "All x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "exists x.(Max(x) & Zumpus(x))", "all x.(Max(x) -> Zurpus(x))", "all x.(Tompus(x) -> -Tompus(x))", "All x.(Max(x) -> Zumpus(x))", "all x.(Tompus(x) -> Max(x))", "all x.(Max(x) -> Tompus(x))", "all x.(Zumpus(x) -> Max(x))", "(Max(Max) & Zumpus(Max))", "(Zumpus(Max) & -Zumpus(Max))", "all x.(Max(x) -> zumpus(x))", "(Max(Max) -> Zumpus(Max))", "(Zumpus(Max) -> Zumpus(Max))", "(Tompus(Max) -> Zumpus(Max))"]}
{"id": "prontoqa_validation_301", "nl": "Every shumpus is a tumpus, a yumpus, and a lempus.", "fol": "all x. (shumpus(x) -> (tumpus(x) & yumpus(x) & lempus(x)))", "prediction": ["all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yampus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yampus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yompus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yompus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) -> Lempus(y)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) -> Lempus(y)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yampus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_302", "nl": "Alex is a shumpus.", "fol": "shumpus(Alex)", "prediction": ["all x.(Alex(x) -> Humpus(x))", "all x.(Alex(x) -> Shumpus(x))", "all x.(Alex(x) -> Humptus(x))", "all x.(Alex(x) -> Humptious(x))", "all x.(Shumpus(x) -> Alex(x))", "All x.(Alex(x) -> Humpus(x))", "all x.(Alex(x) -> Humpback(x))", "all x.(Alex(x) -> Humpty(x))", "all x y.((Alex(x) & Humpus(y)) -> Shumpus(x))", "Alex is a shumpus.", "all x.(Alex(x) -> Humptue(x))", "all x y.((Alex(x) & Humpback(y)) -> Shumpus(x))", "all x.(Alex(x) -> Humpus(x))", "all x.(Shumpus(x) -> Alex(x))", "All x.(Alex(x) -> Shumpus(x))", "All x.(Alex(x) -> Humptus(x))"]}
{"id": "prontoqa_validation_303", "nl": "Alex is a tumpus or a dumpus or a brimpus.", "fol": "(tumpus(Alex) | dumpus(Alex) | brimpus(Alex))", "prediction": ["all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> ((Tumpus(x) | Dumpus(x) | Brimpus(x))))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Alex(x) & (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tompus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (IsTumpus(x) | IsDumpus(x) | IsBrimpus(x)))", "all x.(Alex(x) & (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alexa(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(Tumpus(Alex) | Dumpus(Alex) | Brimpus(Alex))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Britpus(x)))", "(all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x))))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(Tumpus(Alex) | Dumpus(Alex) | Brimpus(Alex)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brumpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) | (Dumpus(x) | Brimpus(x))))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brumpus(x)))"]}
{"id": "prontoqa_validation_304", "nl": "Every sterpus is not a tumpus.", "fol": "all x. (sterpus(x) -> -tumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Sterepus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Strohpus(x) -> -Tumpus(x))", "all x.(Sternpus(x) -> -Tumpus(x))", "all x.(Starpus(x) -> -Tumpus(x))", "all x.(Streep(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Stropus(x) -> -Tumpus(x))", "all x.(Stumpus(x) -> -Tumpus(x))", "exists x.(Sterpus(x) & -Tumpus(x))", "all x.(Sterpus(x) -> -Tompus(x))", "all x.(Stern(x) -> -Tumpus(x))"]}
{"id": "prontoqa_validation_305", "nl": "Every lorpus is a tumpus.", "fol": "all x. (lorpus(x) -> tumpus(x))", "prediction": ["all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumulus(x))", "all x.(Lorph(x) -> Tumpus(x))", "all x.(Lorp(x) -> Tumpus(x))", "all x y.((Lorpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Lorph(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Totumpus(x))", "all x.(Larpus(x) -> Tumpus(x))", "exists x.(Lorpus(x) & Tumpus(x))", "all x y.((Lorpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Lorph(x) -> Tumulus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tump(x))", "all x y.((Lorpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Lorpe(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_306", "nl": "Wren is a sterpus.", "fol": "sterpus(Wren)", "prediction": ["all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterepus(x))", "All x.(Wren(x) -> Sterpus(x))", "all x y.((Wren(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "all x.((Wren(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "exists x.(Wren(x) & Sterpus(x))", "(Sterpus(Wren) & Sterpus(Wren))", "all x.(Wren(x) -> Steerpus(x))", "all x y.((Wren(x) & Sterpus(y)) -> Is(x,y))", "all x y.((Wren(x) & Sterpus(y)) -> Sterpus(x,y))", "all x.(Wren(x) -> Steroid(x))", "all x.(Wren(x) -> Sterotus(x))", "All x.(Wren(x) -> Sterepus(x))", "all x y.((Wren(x) & Sterpus(y)) -> Sterepus(x))"]}
{"id": "prontoqa_validation_307", "nl": "Wren is a grimpus or Wren is not a lorpus or Wren is a lempus.", "fol": "(grimpus(Wren) | -lorpus(Wren) | lempus(Wren))", "prediction": ["all x.((Wren(x) & (Grimpus(x) | -Lorpus(x) | Lempus(x))) -> Grimpus(x))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(y))) | exists z.(Wren(z) & Lempus(z))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(y)) | exists z.(Wren(z) & Lempus(z)))))", "all x.((Wren(x) & Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "all x y.((Wren(x) & Grimpus(x)) | (-Lorpus(x) | Lempus(y))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(y)) | exists z.(Wren(z) & Lempus(z))))", "all x y.((Wren(x) & Grimpus(x)) | (-Lorpus(y) | Lempus(y))))", "(all x.(Wren(x) -> (Grimpus(x) | -Lorpus(x) | Lempus(x))))", "all x.(Wren(x) -> (Grimpus(x) | -Lorpus(x) | Lempus(x)))", "all x.((Wren(x) & (Grimpus(x) | -Lorpus(x) | Lempus(x))) -> (Grimpus(x) | Lempus(x)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lorpus(x) | Lempus(x))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x)) | (-Lorpus(x) & Lempus(x))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(y))) | exists z.(Wren(z) & Lempus(z)))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(y)) | exists z.(Wren(z) & Lampus(z)))))", "all x.(Wren(x) -> ((Grimpus(x) | -Lorpus(x) | Lempus(x))))"]}
{"id": "prontoqa_validation_308", "nl": "Every gorpus is a tumpus.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Totumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x))", "exists x.(Gorpus(x) & Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tump(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Pumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x,y))", "all x.(Gorpus(x) -> Tumus(x))", "all x.(Gorpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_validation_309", "nl": "Sally is not a tumpus and Sally is a lempus and Sally is a vumpus.", "fol": "(-tumpus(Sally) & lempus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Sally(x) -> Lempus(x)) & (Sally(x) -> Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y))) & all z.(Sally(z) -> Vumpus(z)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(y) & Vumpus(z)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "(all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> -Tumpus(x)) & ((Sally(x) & Lempus(x)) -> Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Voompus(z))))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y))) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vampus(z))))", "(all x y.((Sally(x) & Tumpus(y)) -> -Tumpus(x)) & ((Sally(x) & Lempus(x)) -> Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vulmpus(z))))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & Vumpus(y)))"]}
{"id": "prontoqa_validation_310", "nl": "Sally is a tumpus or Sally is a lorpus or Sally is not a gorpus.", "fol": "(tumpus(Sally) | lorpus(Sally) | -gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (Sally(x) -> -Gorpus(x))))", "all x.((Sally(x) & (Tumpus(x) | Lorpus(x) | -Gorpus(x))) -> (Tumpus(x) | Lorpus(x)))", "all x.(Sally(x) -> ((Tumpus(x) | Lorpus(x) | -Gorpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (Sally(x) -> -Gorpus(x))))", "all x.((Sally(x) & (Tumpus(x) | Lorpus(x) | -Gorpus(x))) -> Tumpus(x))", "(all x.(Sally(x) -> Tumpus(x)) | (Lorpus(x) | -Gorpus(x))))", "((Sally(Sally) & Tumpus(Sally)) | (Sally(Sally) & Lorpus(Sally)) | (Sally(Sally) & -Gorpus(Sally))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "all x.((Sally(x) & Tumpus(x)) | (Lorpus(x) | -Gorpus(x))))", "all x.(Sally(x) -> ((Tumpus(x) | Lorpus(x)) | -Gorpus(x))))", "all x.((Sally(x) & (Tumpus(x) | Lorpus(x) | -Gorpus(x))) -> (Tumpus(x) | -Lorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (-Sally(x) -> Gorpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (-Sally(x) & Gorpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (Sally(x) -> -Gorpus(x))))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (-Sally(x) & Gorpus(x))))"]}
{"id": "prontoqa_validation_311", "nl": "Numpuses are yumpuses, vumpuses, and gorpuses.", "fol": "all x. (numpus(x) -> (yumpus(x) & vumpus(x) & gorpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpuse(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpuse(x)))"]}
{"id": "prontoqa_validation_312", "nl": "Rex is a grimpus, Rex is not a gorpus, and Rex is a shumpus.", "fol": "(grimpus(Rex) & -gorpus(Rex) & shumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & all y.(Rex(y) -> -Gorpus(y)) & all z.(Rex(z) -> Humpus(z))))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Shumpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x))))", "(all x.(Rex(x) -> Grimpus(x)) & all y.(Rex(y) -> -Gorpus(y)) & all z.(Rex(z) -> Humpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & all y.(Rex(y) -> -Gorpus(y))) & all z.(Rex(z) -> Humpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & all y.(Rex(y) -> -Gorpus(y)) & all z.(Rex(z) -> Shumpus(z))))", "(all x.(Rex(x) -> Grimpus(x)) & all y.(Rex(y) -> -Gorpus(y))) & all z.(Rex(z) -> Humpus(z))))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Rex(x) -> Gorpus(x)) & (-Rex(x) -> Humpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Rex(x) -> Gorpus(x)) & (-Rex(x) -> Humpus(x)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Shumpus(x))))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & (Shumpus(x) | Grimpus(x))))", "(all x.(Rex(x) -> Grimpus(x)) & all y.(Rex(y) -> -Gorpus(y))) & all z.(Rex(z) -> Shumpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Shumpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))"]}
{"id": "prontoqa_validation_313", "nl": "Rex is not a numpus.", "fol": "-numpus(Rex)", "prediction": ["all x.(Rex(x) -> -Numpus(x))", "all x.(Rex(x) -> -Numpus(x))", "All x.(Rex(x) -> -Numpus(x))", "all x.(Rex(x) -> -Nompus(x))", "All x.(Rex(x) -> -Numpus(x))", "all x.(Rex(x) -> -numpus(x))", "all x.(Rex(x) -> -Numpus(x))", "Rex is not Numpus(x)", "all x.(Rex(x) -> -Number(x))", "(-numpus(Rex))", "All x.(Rex(x) -> -Nompus(x))", "Rex is not a Numpus.", "all x.(Rex(x) -> -Numpus(x))", "Rex is not Numpus(Rex)", "all x.(Rex(x) -> -Nomus(x))", "All x.(Rex(x) -> -numpus(x))"]}
{"id": "prontoqa_validation_314", "nl": "Each yumpus is not a wumpus.", "fol": "all x. (yumpus(x) -> -wumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "exists x.(Yumpus(x) & -Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Yumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Wumpus(x))", "(all x.(Yumpus(x) -> -Wumpus(x)))", "all x.((Yumpus(x) & -Wumpus(x)) -> -Yumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Yumpus(x,y))", "all x.(yumpus(x) -> -Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -(Yumpus(x) & Wumpus(y)))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Wumpus(x,y))", "all x.(Yumpus(x) -> (-Wumpus(x)))", "all x.(Yumpus(x) & -Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -(Yumpus(x) & Wumpus(x)))", "all x.(Youmpus(x) -> -Wumpus(x))", "all x.((Yumpus(x) & -Wumpus(x)) -> -Wumpus(x))"]}
{"id": "prontoqa_validation_315", "nl": "Fae is a yumpus.", "fol": "yumpus(Fae)", "prediction": ["all x.(Fae(x) -> Yumpus(x))", "all x.(Fae(x) -> Yampus(x))", "all x.(Fae(x) -> Yumpus(x))", "all x.(Fae(x) -> Yumpa(x))", "exists x.(Fae(x) & Yumpus(x))", "all x.(Fae(x) -> Yumpsum(x))", "all x.(Fae(x) -> Yampus(x))", "All x.(Fae(x) -> Yumpus(x))", "All x.(Fae(x) -> Yampus(x))", "(Yumpus(Fae))", "all x.(Fae(x) -> Yumpus(x))", "All x.(Fae(x) -> Yumpus(x))", "exists x.(Fae(x) & Yampus(x))", "all x.(Fae(x) -> Yumpus(x))", "(Yumpus(Fae) & Yampus(Fae))", "all x.(Yumpus(x) -> Fae(x))"]}
{"id": "prontoqa_validation_316", "nl": "Fae is a vumpus or Fae is a wumpus or Fae is not a tumpus.", "fol": "(vumpus(Fae) | wumpus(Fae) | -tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "((Fae(f) & Vumpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))", "(exists x.(Fae(x) & Vumpus(x)) | exists y.(Fae(y) & Wumpus(y))) | exists z.(Fae(z) & -Tumpus(z))))", "all x y.((Fae(x) & Vumpus(x)) | (Fae(y) & Wumpus(y)) | (Fae(y) & -Tumpus(y))))", "all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x)))", "all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x)))", "all x.((Fae(x) & (Vumpus(x) | Wumpus(x) | -Tumpus(x))) -> (Vumpus(x) | Wumpus(x)))", "all x.(Fae(x) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "all x.((Fae(x) & (Vumpus(x) | Wumpus(x) | -Tumpus(x))) -> (Vumpus(x) | Wumpus(x)))", "all x.((Fae(x) & (Vimpus(x) | Wumpus(x) | -Tumpus(x))) -> (Vimpus(x) | Wumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x)) | (Fae(x) & -Tumpus(x))))", "all x.(Fae(x) -> ((Vumpus(x) | Wumpus(x) | -Tumpus(x))))", "(exists x.(Fae(x) & Vumpus(x)) | exists y.(Fae(y) & Wumpus(y))) | exists z.(Fae(z) & -Tumpus(z)))))", "(exists x.(Fae(x) & Vumpus(x)) | exists y.(Fae(y) & Wumpus(y)))) & exists z.(Fae(z) & -Tumpus(z))))", "all x.(Fae(x) -> ((Vumpus(x) | Wumpus(x)) | -Tumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x))) | (Fae(x) -> -Tumpus(x)))"]}
{"id": "prontoqa_validation_317", "nl": "Everything that is a zumpus, a brimpus, or a numpus is a rompus, a lorpus, and a lempus.", "fol": "all x. ((zumpus(x) | brimpus(x) | numpus(x)) -> (rompus(x) & lorpus(x) & lempus(x)))", "prediction": ["all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lordpus(x) | Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lampus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Loompus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (rompus(x) | lorpus(x) | lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Nompus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Rompus(x) | Lorpus(x) | Lempus(x)) -> (Tompus(x) | Brimpus(x) | Numpus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (rompus(x) & lorpus(x) & lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lordpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lower(x) | Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Loupus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_318", "nl": "Sam is a numpus.", "fol": "numpus(Sam)", "prediction": ["all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.((Sam(x) & Numpus(x)) -> Numpus(x))", "All x.(Sam(x) -> Numpus(x))", "all x y.((Sam(x) & Numpus(y)) -> Numpus(x))", "exists x.(Sam(x) & Numpus(x))", "all x.((Sam(x) & Numpus(x)) -> Nompus(x))", "all x.((Sam(x) & Numpus(x)) -> Is(x,y))", "all x y.((Sam(x) & Numpus(y)) -> Is(x,y))", "all x.((Sam(x) & Numpus(x)) -> Has(x,y))", "all x.(Numpus(x) -> Sam(x))", "all x.(Sam(x) -> Number(x))", "all x y.((Sam(x) & Numpus(y)) -> Has(x,y))", "all x.(Sam(x) -> Nompus(x))", "all x y.((Sam(x) & Numpus(y)) -> Nompus(x))", "all x y.((Sam(x) & Numpus(y)) -> Numpus(x,y))"]}
{"id": "prontoqa_validation_319", "nl": "Sam is a lempus.", "fol": "lempus(Sam)", "prediction": ["all x.(Sam(x) -> Lempus(x))", "all x.(Lempus(x) -> Sam(x))", "all x.((Sam(x) & Lempus(x)) -> Lempus(x))", "all x.(Sam(x) -> Lempus(x))", "All x.(Sam(x) -> Lempus(x))", "all x y.((Sam(x) & Lempus(y)) -> Lempus(x))", "exists x.(Sam(x) & Lempus(x))", "all x.(Lempus(x) -> Sam(x))", "all x y.((Sam(x) & Lempus(y)) -> Is(x,y))", "all x.((Sam(x) & Lempus(x)) -> Is(x,y))", "all x.(Sam(x) -> Leopard(x))", "all x y.((Sam(x) & Lempus(y)) -> Has(x,y))", "all x.(Sam(x) -> Lampus(x))", "all x.(Limpus(x) -> Sam(x))", "all x.((Sam(x) & Lempus(x)) -> -Lempus(x))", "all x.(Lampus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_320", "nl": "Everything that is a wumpus or a zumpus or a grimpus is a jompus and a gorpus and a lempus.", "fol": "all x. ((wumpus(x) | zumpus(x) | grimpus(x)) -> (jompus(x) & gorpus(x) & lempus(x)))", "prediction": ["all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lampus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lampus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jumpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jumpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) | Gorpus(x) | Lempus(x)))", "all x.(((Wumpus(x) | Zumpus(x) | Grimpus(x))) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x y.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(y) & Gorpus(y) & Lempus(y)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Hompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Dorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zurpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grumpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Hompus(x) & Gorpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_321", "nl": "Alex is a grimpus.", "fol": "grimpus(Alex)", "prediction": ["all x.(Alex(x) -> Grimpus(x))", "All x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Gruppus(x))", "all x.(Alex(x) -> Grumpus(x))", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Gruffus(x))", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) & Grimpus(x))", "all x.(Alex(x) -> Grupus(x))", "all x.(Alex(x) -> Grappa(x))", "all x y.((Alex(x) & Grimpus(y)) -> Is(x,y))", "all x.(Alex(x) -> Grapple(x))", "exists x.(Alex(x) & Grimpus(x))", "all x.((Alex(x) & Grimpus(x)) -> Is(x,y))", "all x.(Alex(x) -> Grumpy(x))", "all x.(Alex(x) -> Gruppa(x))"]}
{"id": "prontoqa_validation_322", "nl": "Alex is a gorpus.", "fol": "gorpus(Alex)", "prediction": ["all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x y.((Alex(x) & Gorpus(y)) -> Gorpus(x))", "All x.(Alex(x) -> Gorpus(x))", "All x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x y.((Alex(x) & Gorpus(y)) -> Gorpus(x))", "all x y.((Alex(x) & Gorpus(y)) -> Is(x,y))", "all x.(Alex(x) -> Gorpus(x))", "all x y.((Alex(x) & Gorpus(y)) -> Has(x,y))", "all x y.((Alex(x) & Gorpus(y)) -> Gorpus(x,y))", "all x y.((Alex(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Gorpus(x) -> Alex(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) & Gorpus(x))"]}
{"id": "prontoqa_validation_323", "nl": "Every yumpus is a sterpus and a jompus and an impus.", "fol": "all x. (yumpus(x) -> (sterpus(x) & jompus(x) & impus(x)))", "prediction": ["all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impossible(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Sterepus(x) & Jompus(x) & Impossible(x)))", "all x.(Yumpus(x) -> (Sterepus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Sterepus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impossible(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impossible(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperium(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impermiss(x)))", "(all x.(Yumpus(x) -> Sterpus(x)) & all y.(Jompus(y) -> Issue(y)))", "(all x.(Yumpus(x) -> Sterpus(x)) & all y.(Jompus(y) -> Imperator(y)))"]}
{"id": "prontoqa_validation_324", "nl": "Lempuses are not jompuses.", "fol": "all x. (lempus(x) -> -jompus(x))", "prediction": ["all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jumpus(x))", "all x.(Lempuse(x) -> -Jombuse(x))", "all x.(Lempuse(x) -> -Jimpus(x))", "all x.(Lempuse(x) -> -Jomeuse(x))", "all x.(Lempuse(x) -> -Jumpuse(x))", "all x.(Lempuse(x) -> -Jumpsuse(x))", "all x.(Lempuse(x) -> -Jimbus(x))", "all x.(Lemme(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jockuse(x))", "all x.(Lempuse(x) -> -Jompus(x))", "all x.(Lampuse(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jombus(x))", "all x.(Lempuse(x) -> -Jompus(x))", "all x.(Lemme(x) -> -Jumpus(x))"]}
{"id": "prontoqa_validation_325", "nl": "Polly is a grimpus, an impus, and a lempus.", "fol": "(grimpus(Polly) & impus(Polly) & lempus(Polly))", "prediction": ["all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Impossible(x) & Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Issue(x) & Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Issue(x) | Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Issue(y) -> Lempus(y)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) & Lempus(y)))", "all x.(Polly(x) -> (Grimpus(x) & Imperator(x) & Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) -> Lempus(y)))", "all x.(Polly(x) -> (Grimpus(x) & Impossible(x) & Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & (Impossible(x) | Lempus(x))))", "all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Imperium(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Impossible(x) & Lampus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Imperative(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lampus(x)))"]}
{"id": "prontoqa_validation_326", "nl": "Polly is not a yumpus.", "fol": "-yumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Yumpus(x))", "all x.((Polly(x) & -Yumpus(x)) -> -Yumpus(x))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "All x.(Polly(x) -> -Yumpus(x))", "exists x.(Polly(x) & -Yumpus(x))", "all x.(Polly(x) -> -Yumpus(x))", "all x.((Polly(x) & NoYumpus(x)) -> -Yumpus(x))", "all x.(Polly(x) -> -Yumpus(x))", "all x.((Polly(x) & -Yumpus(x)) -> -yumpus(x))", "all x.((Polly(x) & -Yumpus(x)) -> NoYumpus(x))", "all x.(Polly(x) -> -yumpus(x))", "all x.((Polly(x) & -Yumpus(x)) -> NotYumpus(x))", "all x.((Polly(x) & -Yumpus(x)) -> -YUMPUS(x))", "-Yumpus(Polly)", "all x.((Polly(x) & -Yumpus(x)) -> -Yuppus(x))"]}
{"id": "prontoqa_validation_327", "nl": "Everything that is a grimpus, a rompus, or a gorpus is a numpus.", "fol": "all x. ((grimpus(x) | rompus(x) | gorpus(x)) -> numpus(x))", "prediction": ["all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Element(x) & (Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Element(x) & (Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.(((Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Smopus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Crupid(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Frostpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_validation_328", "nl": "Alex is a shumpus, Alex is not a numpus, and Alex is a sterpus.", "fol": "(shumpus(Alex) & -numpus(Alex) & sterpus(Alex))", "prediction": ["(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> -Numpus(y)) & all z.(Alex(z) -> Sterpus(z))))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> -Numpus(y))) & all z.(Alex(z) -> Sterpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & all y.(Alex(y) -> -Numpus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> -Numpus(y)) & all z.(Alex(z) -> Sterpus(z))))", "all x y z.((Alex(x) & Humpus(y) & Sterpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (-Alex(x) -> Numpus(x)) & (-Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & all y.(Alex(y) -> -Numpus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> -Numpus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x))))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterepus(x)))", "(all x.(Alex(x) -> Shumpus(x)) & all y.(Alex(y) -> -Numpus(y))) & all z.(Alex(z) -> Sterpus(z))))"]}
{"id": "prontoqa_validation_329", "nl": "Alex is not a rompus.", "fol": "-rompus(Alex)", "prediction": ["all x.(Alex(x) -> -Rompus(x))", "All x.(Alex(x) -> -Rompus(x))", "Alex is not a rompus.", "all x.(Alex(x) -> -rompus(x))", "all x.(Alex(x) -> -Romesh(x))", "all x.(Alex(x) & -Rompus(x))", "all x.(Alex(x) -> -Rompus(x))", "ALL x.(Alex(x) -> -Rompus(x))", "exists x.(Alex(x) & -Rompus(x))", "(-Rompus(Alex))", "all x.(Alex(x) -> -Rophus(x))", "all x.(Alex(x) -> -Rompus(x))", "all x.(Alex(x) -> -Rrompus(x))", "all x.(Alex(x) -> NoRompus(x))", "all x.(Alex(x) -> -Romeus(x))", "(Rompus(Alex) & -Rompus(Alex))"]}
{"id": "prontoqa_validation_330", "nl": "Each wumpus is a lorpus, a sterpus, and a brimpus.", "fol": "all x. (wumpus(x) -> (lorpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterepus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x y z.((Wumpus(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) | Sterpus(z) | Brimpus(z)))", "all x.(Wumpus(x) -> (Lorpus(x) & Steerpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterepus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Steroid(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Steerpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterus(x) & Brimpus(x)))", "exists x.(Wumpus(x) & (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x y z.((Wumpus(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) & Sterpus(y) & Brimpus(z)))", "all x y z.((Wumpus(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Steroid(x) | Brimpus(x)))", "all x y z.((Wumpus(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) & Sterpus(z) & Brimpus(x)))"]}
{"id": "prontoqa_validation_331", "nl": "Stella is a wumpus.", "fol": "wumpus(Stella)", "prediction": ["Stella is a wumpus.", "all x.(Wumpus(x) -> Stella(x))", "Stella is a Wumpus.", "all x.(Stella(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Stella(x))", "All x.(Wumpus(x) -> Stella(x))", "exists x.(Wumpus(x) & Stella(x))", "(Wumpus(Stella) & -Wumpus(Stella))", "(Wumpus(Stella) & Wumpus(Stella))", "(Wumpus(Stella))", "(Wumpus(Stella) & HasWumpus(Stella))", "Stella is a Wumpus(Stella)", "(Wumpus(Stella) -> Wumpus(Stella))", "all x.(Stella(x) -> Wampus(x))", "All x.(Wumpus(x) -> Stella(x))", "(Wumpus(Stella) & HasWump(Stella))"]}
{"id": "prontoqa_validation_332", "nl": "Stella is a jompus, a lorpus, or a shumpus.", "fol": "(jompus(Stella) | lorpus(Stella) | shumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Shumpus(x)))", "all x.(Stella(x) -> (Jumpus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lordpus(x) | Humpus(x)))", "exists x.(Stella(x) & (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (IsJompus(x) | IsLorpus(x) | IsShumpus(x)))", "(all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x))))", "all x.(Stella(x) -> (Jampus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> ((Jompus(x) | Lorpus(x) | Humpus(x))))", "all x.(Stella(x) -> (Hompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jompus(x) | Loomis(x) | Humpus(x)))", "all x.(Stella(x) -> (Jomes(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Lorpus(x) | Shumpus(x)))", "all x.((Stella(x) & (Jompus(x) | Lorpus(x) | Humpus(x))) -> Stella(x))"]}
{"id": "prontoqa_validation_333", "nl": "Each sterpus is a numpus and a yumpus and a zumpus.", "fol": "all x. (sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterepus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Steerpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yampus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (numpus(x) | yumpus(x) | zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yampus(x) & Zumpus(x)))", "(all x.(Sterpus(x) -> Numpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z)) -> Zumpus(z))))", "(all x.(Sterpus(x) -> Numpus(x)) & (Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Number(x) & Yumpus(x) & Zumpus(x)))", "(all x.(Sterpus(x) -> Numpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z)) -> Zumpus(y)))"]}
{"id": "prontoqa_validation_334", "nl": "Sam is not a numpus and Sam is a jompus and Sam is a yumpus.", "fol": "(-numpus(Sam) & jompus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z)))", "(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(y) & Yumpus(z)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Yumpus(z))))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & -Jumpus(y) & -Yumpus(z)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z))))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z))))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(y) & Yumpus(z)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z)))"]}
{"id": "prontoqa_validation_335", "nl": "Everything that is a lempus, a lorpus, or a zumpus is a wumpus, an impus, and a yumpus.", "fol": "all x. ((lempus(x) | lorpus(x) | zumpus(x)) -> (wumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Impossible(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperator(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Impossible(x) | Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperative(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperator(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Impossible(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperator(x) | Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperator(x) | Yumpus(x)))"]}
{"id": "prontoqa_validation_336", "nl": "Wren is a lempus.", "fol": "lempus(Wren)", "prediction": ["all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "All x.(Wren(x) -> Lempus(x))", "exists x.(Wren(x) & Lempus(x))", "all x y.((Wren(x) & Lempus(y)) -> Lempus(x))", "all x y.((Wren(x) & Lempus(y)) -> Is(x,y))", "all x y.((Wren(x) & Lempus(y)) -> (Lempus(x) & Lempus(y)))", "all x.(Wren(x) -> (Lempus(x) & -Lempus(x)))", "all x y.((Wren(x) & Lempus(y)) -> Has(x,y))", "all x y.((Wren(x) & Lempus(y)) -> (Lempus(x) & Lempus(x)))", "all x y.((Wren(x) & Lempus(y)) -> LivesIn(x,y))", "all x.(Wren(x) -> Lampus(x))", "all x y.((Wren(x) & Lempus(y)) -> Affects(x,y))", "all x.(Wren(x) -> Loompus(x))", "all x.(Wren(x) -> (Lempus(x) & Lempus(x)))", "all x.(Wren(x) -> (Lempus(x) & -Lempus(x) & -Lempus(x)))"]}
{"id": "prontoqa_validation_337", "nl": "Wren is an impus.", "fol": "impus(Wren)", "prediction": ["all x.(Wren(x) -> Impossible(x))", "all x.(Wren(x) -> IsImpossible(x))", "all x.(Wren(x) -> Isolated(x))", "all x.(Wren(x) -> Is(x,y))", "All x.(Wren(x) -> Impossible(x))", "All x.(Wren(x) -> IsImpossible(x))", "all x.(Wren(x) -> Imperative(x))", "all x.(Wren(x) -> Implicator(x))", "all x.(Wren(x) -> Illegal(x))", "all x.(Wren(x) -> Impeccable(x))", "All x.(Wren(x) -> Isolated(x))", "all x.(Wren(x) -> IsDefired(x))", "all x.(Wren(x) -> Is(x))", "all x.(Wren(x) -> Implicit(x))", "All x.(Wren(x) -> Is(x,y))", "all x.(Wren(x) -> Is(x,Impossible))"]}
{"id": "prontoqa_validation_338", "nl": "Everything that is a rompus or a vumpus or a zumpus is a lorpus, a brimpus, and a gorpus.", "fol": "all x. ((rompus(x) | vumpus(x) | zumpus(x)) -> (lorpus(x) & brimpus(x) & gorpus(x)))", "prediction": ["all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vampus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vampus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vulmpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.(((Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rrompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Volmpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vampus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_339", "nl": "Sam is a rompus.", "fol": "rompus(Sam)", "prediction": ["all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "all x.(Rompus(x) -> Sam(x))", "All x.(Sam(x) -> Rompus(x))", "all x.(Sam(x) -> Rompus(x))", "all x.(Rompus(x) -> (Sam(x) & Rompus(x)))", "(Rompus(Sam) & -Rompus(Sam))", "exists x.(Rompus(x) & Sam(x))", "all x.((Sam(x) & Rompus(x)) -> Raccoon(x))", "all x.(Sam(x) -> Rupus(x))", "all x.((Sam(x) & Rompus(x)) -> Is(x,y))", "all x.((Sam(x) & Rompus(x)) -> Rompus(x))", "All x.(Rompus(x) -> Sam(x))", "exists x.(Sam(x) & Rompus(x))", "all x y.((Sam(x) & Rompus(y)) -> Is(x,y))", "all x.((Sam(x) & Rompus(x)) -> Rimpus(x))"]}
{"id": "prontoqa_validation_340", "nl": "Sam is a gorpus.", "fol": "gorpus(Sam)", "prediction": ["all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.((Sam(x) & Gorpus(x)) -> Gorpus(x))", "all x.(Gorpus(x) -> Sam(x))", "all x.((Sam(x) & Gorpus(x)) -> Gorpus(x))", "all x y.((Sam(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Gorpus(x) -> Sam(x))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "all x y.((Sam(x) & Gorpus(y)) -> Gorpus(x))", "all x y.((Sam(x) & Gorpus(y)) -> Is(x,y))", "All x.(Sam(x) -> Gorpus(x))", "all x.((Sam(x) & Gorpus(x)) -> Gorpus(x))", "all x y.((Sam(x) & Gorpus(y)) -> Has(x,y))", "exists x.(Sam(x) & Gorpus(x))", "All x.(Sam(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_341", "nl": "Everything that is a lorpus, a sterpus, and a grimpus is a tumpus.", "fol": "all x. ((lorpus(x) & sterpus(x) & grimpus(x)) -> tumpus(x))", "prediction": ["all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Sterpus(x) & Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumulus(x))", "all x.((Lorpus(x) | Sterepus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Steerpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.(((Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grapple(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Gruppus(x)) -> Tumpus(x))", "all x.((Larpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grumpy(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Steroid(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Totumpus(x))"]}
{"id": "prontoqa_validation_342", "nl": "Fae is not a tumpus, Fae is a dumpus, and Fae is a wumpus.", "fol": "(-tumpus(Fae) & dumpus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y))) & all z.(Fae(z) -> Wumpus(z)))", "(all x y z.((Fae(x) & Tumpus(y) & Dumpus(z)) -> -Tumpus(x)) & ((Fae(x) & Dumpus(x)) -> Wumpus(x)))", "(all x y z.((Fae(x) & Tumpus(y)) -> -Tumpus(x)) & ((Fae(z) & Dumpus(z)) -> Wumpus(z)))", "(all x y z.(Fae(x) -> -Tumpus(x)) & (Fae(y) -> Dumpus(y)) & (Fae(z) -> Wumpus(z)))", "(all x y z.((Fae(x) & Tumpus(y)) -> -Tumpus(x)) & ((Fae(z) & Dumpus(z))) -> Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wampus(z))))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x))))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & -Dumpus(y) & -Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y))) & all z.(Fae(z) -> Wumpus(z))))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wampus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wompus(z))))", "(all x y z.(Fae(x) -> -Tumpus(x)) & ((Fae(y) & Dumpus(y)) | (Fae(z) & Wumpus(z)))))"]}
{"id": "prontoqa_validation_343", "nl": "Fae is a lorpus.", "fol": "lorpus(Fae)", "prediction": ["all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Llorpus(x))", "exists x.(Fae(x) & Lorpus(x))", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(Fae) & LivesIn(Fae,Lorpus))", "All x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Lordpus(x))", "all x.(Fae(x) -> (Lorpus(x) & LivesIn(x)))", "all x y.((Fae(x) & Lorpus(y)) -> LivesIn(x,y))", "all x.(Fae(x) -> (Lorpus(x) & LivesIn(x,y)))", "all x.(Fae(x) -> Loompus(x))", "all x.(Fae(x) -> Loomis(x))", "all x y.((Fae(x) & Lorpus(y)) -> Is(x,y))", "all x.(Fae(x) -> Lompus(x))", "all x.(Fae(x) -> (Lorpus(x) & -Lorpus(x)))", "(Lorpus(Fae) & LivesIn(Fae))"]}
{"id": "prontoqa_validation_344", "nl": "Fae is a sterpus.", "fol": "sterpus(Fae)", "prediction": ["all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterepus(x))", "All x.(Fae(x) -> Sterpus(x))", "all x y.((Fae(x) & Sterpus(y)) -> Sterpus(x))", "(Sterpus(Fae) & Sterpus(Fae))", "exists x.(Fae(x) & Sterpus(x))", "all x.(Fae(x) -> Steroid(x))", "all x.(Fae(x) -> Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "(Sterpus(Fae) -> Sterpus(Fae))", "all x.(Fae(x) -> Sterus(x))", "all x.(Fae(x) -> Sterotus(x))", "all x y.((Fae(x) & Sterpus(y)) -> Is(x,y))", "(Sterepus(Fae) & Sterpus(Fae))", "all x y.((Fae(x) & Sterpus(y)) -> Sterpus(x,y))", "(Stereo(Fae) & Sterpus(Fae))"]}
{"id": "prontoqa_validation_345", "nl": "Fae is not a grimpus.", "fol": "-grimpus(Fae)", "prediction": ["all x.(Fae(x) -> -Grimpus(x))", "-Grimpus(Fae)", "(-Grimpus(Fae))", "exists x.(Fae(x) & -Grimpus(x))", "(all x.(Fae(x) -> -Grimpus(x)))", "All x.(Fae(x) -> -Grimpus(x))", "all x.(Fae(x) -> -Grimpus(x))", "(-Grimpus(Fae) & -Grimpus(Fae))", "all x.(Fae(x) -> -Grimppus(x))", "all x.(Fae(x) -> -Grippus(x))", "all x.(Fae(x) -> -Gruppus(x))", "all x.(Fae(x) -> -Grampus(x))", "all x.(Fae(x) -> -Grimpus(x))", "all x.(Fae(x) & -Grimpus(x))", "all x.(Fae(x) -> -Grisp(x))", "(-Grimpus(fae) & -Grimpus(fae))"]}
{"id": "prontoqa_validation_346", "nl": "Lempuses are dumpuses and sterpuses and wumpuses.", "fol": "all x. (lempus(x) -> (dumpus(x) & sterpus(x) & wumpus(x)))", "prediction": ["all x.(Lempuse(x) -> (Dumpuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpsuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpsuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dupuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dupuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumps(x) & Sterpuses(x) & Wumpuses(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) & Sterpuse(x) & Wumpus(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) & Steruse(x) & Wumpuse(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x))))", "all x.(Lempuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpus(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & all y.(Sterpuse(y) -> Wumpuse(y)))", "all x.(Lempuse(x) -> (Dumpsuse(x) & Steruse(x) & Wumpuse(x)))"]}
{"id": "prontoqa_validation_347", "nl": "Sam is a yumpus, a zumpus, or a sterpus.", "fol": "(yumpus(Sam) | zumpus(Sam) | sterpus(Sam))", "prediction": ["all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Steerpus(x)))", "exists x.(Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterepus(x)))", "all x.((Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x))) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (yumpus(x) | zumpus(x) | sterpus(x)))", "all x y.((Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x))) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Steroid(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | sterpus(x)))", "all x.((Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x))) -> (Yumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | STERPUS(x)))", "(all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x))))", "all x y.((Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x))) -> (Yumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterus(x)))"]}
{"id": "prontoqa_validation_348", "nl": "Each tumpus is a rompus and a zumpus and a wumpus.", "fol": "all x. (tumpus(x) -> (rompus(x) & zumpus(x) & wumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) | Zumpus(x) | Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wompus(x)))", "all x.(Tumpus(x) -> (IsRompus(x) & IsTompus(x) & IsWumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Wumpus(z) -> Wumpus(z))))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Humpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Tompus(y))) & all z.(Tompus(z) -> Wumpus(z)))", "all x.(Tumpus(x) -> (rompus(x) & zumpus(x) & wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & wumpus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Tompus(y)) & all z.(Wumpus(z) -> Tompus(z))))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wampus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Yumpus(x)))", "all x y z.((Tumpus(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Umpus(x)))"]}
{"id": "prontoqa_validation_349", "nl": "Rex is a tumpus.", "fol": "tumpus(Rex)", "prediction": ["all x.(Rex(x) -> Tumpus(x))", "all x.(Rex(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Rex(x))", "All x.(Rex(x) -> Tumpus(x))", "Rex is a tumpus.", "All x.(Rex(x) -> Tumpus(x))", "all x.(Rex(x) -> Tumulus(x))", "All x.(Tumpus(x) -> Rex(x))", "all x.(Tumpus(x) -> Rex(x))", "all x.(Rex(x) -> Pumpus(x))", "All x.(Rex(x) -> Tumulus(x))", "Rex is tumpus.", "all x.(Rex(x) -> Totumpus(x))", "all x.(Rex(x) -> Tumpet(x))", "(Tumpus(Rex) & Tumpus(Rex))", "(Tumpus(Rex) -> Tumpus(Rex))"]}
{"id": "prontoqa_validation_350", "nl": "Rex is a lempus, a jompus, or a rompus.", "fol": "(lempus(Rex) | jompus(Rex) | rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lampus(x) | Jompus(x) | Rompus(x)))", "all x y.((Rex(x) & (Lempus(y) | Jompus(y) | Rompus(y))) -> (Lempus(x) | Jompus(y) | Rompus(y)))", "exists x.(Rex(x) & (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> ((Lempus(x) | Jompus(x) | Rompus(x))))", "(all x.(Rex(x) -> Lempus(x)) | (Jompus(x) | Rompus(x))))", "(exists x.(Rex(x) & Lempus(x)) | exists y.(Jompus(y) & Rex(y))) | exists z.(Rompus(z) & Rex(z))))", "(exists x.(Rex(x) & Lempus(x)) | exists y.(Jompus(y) & -Lempus(y))) | exists z.(Rompus(z) & -Lempus(z))))", "all x y.((Rex(x) & Lempus(y)) | Jompus(y) | Rompus(y)) -> (Lempus(x) | Jompus(y) | Rompus(y)))", "(exists x.(Rex(x) & Lempus(x)) | exists y.(Jompus(y) & Rex(x))) | exists z.(Rompus(z) & Rex(z))))", "(exists x.(Rex(x) & Lempus(x)) | exists y.(Jompus(y) & -Lempus(y))) | exists z.(Rompus(z) & -Lempus(z)))))", "(all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (lempus(x) | jompus(x) | rompus(x)))"]}
{"id": "prontoqa_validation_351", "nl": "Everything that is a wumpus and a numpus and a brimpus is a lorpus, a jompus, and a rompus.", "fol": "all x. ((wumpus(x) & numpus(x) & brimpus(x)) -> (lorpus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) | Numpus(x) | Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) | Numpus(x) | Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x y.((Wumpus(x) & Numpus(y) & Brimpus(y)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x y.((Wumpus(x) & Numpus(y) & Brimpus(y)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.(((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Nompus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.(((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x y z.((Wumpus(x) & Numpus(y) & Brimpus(z)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numerus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Nompus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x y z.((Wumpus(x) & Numpus(y) & Brimpus(z)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numerus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.(((Wumpus(x) | Numpus(x) | Brimpus(x))) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Lorpus(x) | Jompus(x) | Rompus(x)) -> (Wumpus(x) & Numpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_352", "nl": "Stella is a numpus.", "fol": "numpus(Stella)", "prediction": ["all x.(Stella(x) -> Numpus(x))", "Stella is Numpus(Stella)", "Stella is a Numpus.", "All x.(Stella(x) -> Numpus(x))", "Stella is a Numpus(Stella)", "all x.((Stella(x) & Numpus(x)) -> Numpus(x))", "exists x.(Stella(x) & Numpus(x))", "(Numpus(Stella) & Numpus(Stella))", "all x.((Stella(x) & Numpus(x)) -> Is(x,y))", "all x.((Stella(x) & Numpus(x)) -> Nompus(x))", "all x.(Stella(x) -> Numpus(x))", "(Numpus(Stella) & Numpus(Stella))", "Stella is Numpus(s)", "(Numpus(Stella) -> Numpus(Stella))", "all x.((Stella(x) & Numpus(x)) -> Has(x,y))", "all x.((Stella(x) & Numpus(x)) -> Is(x,numpus))"]}
{"id": "prontoqa_validation_353", "nl": "Stella is a brimpus.", "fol": "brimpus(Stella)", "prediction": ["all x.(Stella(x) -> Brimpus(x))", "Stella is a brimpus.", "Stella is a Brimpus.", "All x.(Stella(x) -> Brimpus(x))", "all x.(Stella(x) -> Brimpus(x))", "all x.((Stella(x) & Brimpus(x)) -> Brimpus(x))", "all x.(Brimpus(x) -> Stella(x))", "exists x.(Stella(x) & Brimpus(x))", "Stella is a Brimpus(Stella)", "all x.((Stella(x) & Brimpus(x)) -> Is(x,y))", "all x.((Stella(x) & Brimpus(x)) -> Brampus(x))", "all x.(Brumpus(x) -> Stella(x))", "(Brimpus(Stella) -> Brimpus(Stella))", "all x.((Stella(x) & Brimpus(x)) -> Brempus(x))", "(Brimpus(Stella) & Brimpus(Stella))", "all x.((Stella(x) & Brimpus(x)) -> Brumpus(x))"]}
{"id": "prontoqa_validation_354", "nl": "Stella is a jompus.", "fol": "jompus(Stella)", "prediction": ["all x.(Stella(x) -> Jompus(x))", "Stella is a Jompus.", "All x.(Stella(x) -> Jompus(x))", "Stella is a jompus.", "all x.((Stella(x) & Jompus(x)) -> Jompus(x))", "exists x.(Stella(x) & Jompus(x))", "all x.((Stella(x) & Jompus(x)) -> Is(x,y))", "Stella is a Jompus(Stella)", "all x.(Jompus(x) -> Stella(x))", "all x.(Stella(x) -> Jompus(x))", "Stella is Jompus(Stella)", "(Jompus(Stella) & Jompus(Stella))", "(Jimpus(Stella) & Jompus(Stella))", "all x.((Stella(x) & Jompus(x)) -> Has(x,y))", "(Jompus(Stella) -> Jompus(Stella))", "all x.((Stella(x) & Jompus(x)) -> HasStella(x))"]}
{"id": "prontoqa_validation_355", "nl": "Each shumpus is a sterpus and a vumpus and a jompus.", "fol": "all x. (shumpus(x) -> (sterpus(x) & vumpus(x) & jompus(x)))", "prediction": ["all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Steerpus(x) & Vumpus(x) & Jompus(x)))", "all x y z.((Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)) -> (Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)))", "all x.(Shumpus(x) -> (Sterus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "exists x.(Shumpus(x) & Sterpus(x) & Vumpus(x) & Jompus(x))", "all x y z.((Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x y z.((Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)) -> (Esterpus(x) & Esterpus(y) & Esterpus(z) & Esterpus(z)))", "(all x.(Shumpus(x) -> Sterpus(x)) & (Vumpus(x) | Jompus(x))))", "(all x.(Shumpus(x) -> Sterpus(x)) & all y.(Vumpus(y) & all z.(Jompus(z)) -> Jompus(z))))", "all x y z.((Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)) -> (Esterpus(x) & Esterpus(y) & Esterpus(z)))", "all x y z.((Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)) -> (Sterpus(x) & Vumpus(y) & Jompus(z)))"]}
{"id": "prontoqa_validation_356", "nl": "Stella is a yumpus and Stella is not a jompus and Stella is a gorpus.", "fol": "(yumpus(Stella) & -jompus(Stella) & gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jimpus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> Yampus(x)) & all y.(Stella(y) -> -Jompus(y))) & all z.(Stella(z) -> Gorpus(z)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) & all y.(Stella(y) -> -Jompus(y))) & all z.(Stella(z) -> Gorpus(z)))", "(all x.(Yumpus(x) -> Stella)) & (-Jompus(x) -> Stella)) & (Gorpus(x) -> Stella)))", "(all x.(Stella(x) -> Yampus(x)) & all y.(Stella(y) -> -Jompus(y))) & all z.(Stella(z) -> Gorpus(z))))", "(all x.(Stella(x) -> Yampus(x)) & all y.(Stella(y) -> -Jompus(y)) & all z.(Stella(z) -> Gorpus(z))))", "(all x.(Yumpus(x) -> Stella(x)) & (-Jompus(x) -> Stella(x))) & (-Jompus(x) -> Stella(x)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (Yumpus(x) & -Jompus(z) & Gorpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (Yumpus(x) & -Jompus(z) & Gorpus(z)))", "(all x.(Stella(x) -> Yumpus(x)) & all y.(Stella(y) -> -Jompus(y))) & all z.(Stella(z) -> Gorpus(z))))"]}
{"id": "prontoqa_validation_357", "nl": "Stella is not a shumpus.", "fol": "-shumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Shumpus(x))", "Stella is not a shumpus.", "(-Shumpus(Stella))", "exists x.(Stella(x) & -Shumpus(x))", "All x.(Stella(x) -> -Shumpus(x))", "Stella is notShumpus(Stella)", "all x.(Stella(x) -> -Shumpus(x))", "-Shumpus(Stella)", "Stella is not a shumpus(Stella)", "Stella is not shumpus.", "Stella -Shumpus(Stella)", "Stella is -Shumpus(Stella)", "Stella -Shumpus(Stella))", "Stella is notShumpus(Stilla)", "all x.(Stella(x) & -Shumpus(x))", "all x.(Stella(x) -> (-Shumpus(x)))"]}
{"id": "prontoqa_validation_358", "nl": "Dumpuses are lempuses.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.((Dumpuse(x) & Lempuse(x)) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Lempuse(x,y))", "all x y.((Dumpuse(x) & Lempuse(y)) -> (Lempuse(x) & Lempuse(y)))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Is(x,y))", "all x y.((Dumpuse(x) & Lempuse(y)) -> (Lampuse(x) & Lempuse(y)))", "all x.(Dupus(x) -> Lempuse(x))", "all x.(Dempuse(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> (Lempuse(x) & Lempuse(x)))", "all x y.((Dumpuse(x) & Lempuse(y)) -> (Lempuse(x) & -Lempuse(y)))", "(all x.(Dumpuse(x) -> Lempuse(x)))", "all x.(Dumpuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_359", "nl": "Stella is not a lempus, Stella is a tumpus, and Stella is a grimpus.", "fol": "(-lempus(Stella) & tumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Grimpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Grimpus(z))))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Grimpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gruppus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Gruppus(z))))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grumpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grapple(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_validation_360", "nl": "Stella is a lorpus, Stella is a shumpus, or Stella is not a dumpus.", "fol": "(lorpus(Stella) | shumpus(Stella) | -dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x))))", "all x.((Stella(x) & Lorpus(x)) | (Stella(x) & Humpus(x)) | (-Stella(x) & Dumpus(x))))", "all x y.((Stella(x) & Lorpus(x)) | (Stella(y) & Humpus(y)) | (-Stella(y) & Dumpus(y))))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x)))", "all x.((Stella(x) & Lorpus(x)) | (Stella(x) & Humpus(x)) | (Stella(x) & -Dumpus(x))))", "(all x.(Stella(x) -> Lorpus(x)) & all y.(Stella(y) -> Humpus(y))) & (Stella(y) -> -Dumpus(y)))", "all x y.((Stella(x) & Lorpus(x)) | (Stella(y) & Humpus(y)) | (Stella(y) & -Dumpus(y))))", "all x.(Stella(x) -> (Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | -Dumpus(x)) -> Stella(x))", "all x y.((Lorpus(x) & Shumpus(y)) -> (Lorpus(x) | Shumpus(y) | -Dumpus(y)))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x))))", "all x y z.((Stella(x) & Lorpus(y) & Shumpus(z)) | (Stella(x) & -Dumpus(x))))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "all x y z.((Stella(x) & Lorpus(x) & Shumpus(y)) | (Stella(z) & -Dumpus(z))))"]}
{"id": "prontoqa_validation_361", "nl": "Each lorpus is a numpus, a vumpus, and a tumpus.", "fol": "all x. (lorpus(x) -> (numpus(x) & vumpus(x) & tumpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (numpus(x) | vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (numpus(x) & vumpus(x) & tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Nompus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Number(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Number(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (numpus(x) | vumpus(x) | tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Voompus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & all y.(Vumpus(y) -> Tumpus(y)))", "all x.(Lorpus(x) -> (Numerus(x) | Vumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_validation_362", "nl": "Everything that is a yumpus, a grimpus, and a brimpus is not a numpus.", "fol": "all x. ((yumpus(x) & grimpus(x) & brimpus(x)) -> -numpus(x))", "prediction": ["all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Nompus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numerus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numbus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numbpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Number(x))", "all x.(((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Nompus(x))", "all x.(((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_validation_363", "nl": "Max is a yumpus.", "fol": "yumpus(Max)", "prediction": ["all x.(Max(x) -> Yumpus(x))", "all x.(Max(x) -> Yampus(x))", "all x.(Max(x) -> Yumpus(x))", "all x.(Max(x) -> Yumpa(x))", "All x.(Max(x) -> Yumpus(x))", "All x.(Max(x) -> Yampus(x))", "all x.(Yumpus(x) -> Max(x))", "All x.(Max(x) -> Yumpus(x))", "all x.(Max(x) -> Yumpu(x))", "all x.(Max(x) -> Yumps(x))", "all x.(Max(x) -> Yumpsum(x))", "All x.(Max(x) -> Yumpa(x))", "(Yumpus(Max))", "all x.(Matthew(x) -> Yumpus(x))", "(Yumpus(Max) -> Yampus(Max))", "(Yumpus(Max) -> Yampus(Max))"]}
{"id": "prontoqa_validation_364", "nl": "Max is a grimpus.", "fol": "grimpus(Max)", "prediction": ["all x.(Max(x) -> Grimpus(x))", "All x.(Max(x) -> Grimpus(x))", "all x.(Max(x) -> Gruppus(x))", "all x.(Matthew(x) -> Grimpus(x))", "all x.(Matt(x) -> Grimpus(x))", "all x.(Max(x) -> Grumpus(x))", "all x.(Max(x) -> Grimpus(x))", "all x.(Max(x) -> Grupus(x))", "exists x.(Max(x) & Grimpus(x))", "all x.((Max(x) & Grimpus(x)) -> Is(x,y))", "all x.(Max(x) -> Gruppa(x))", "all x.(Max(x) -> Gruffus(x))", "all x.(Max(x) -> Grumpy(x))", "All x.(Max(x) -> Gruppus(x))", "all x.((Max(x) & Grimpus(x)) -> Scarlett(x))", "all x.(Max(x) -> Grappa(x))"]}
{"id": "prontoqa_validation_365", "nl": "Max is a brimpus.", "fol": "brimpus(Max)", "prediction": ["all x.(Max(x) -> Brimpus(x))", "All x.(Max(x) -> Brimpus(x))", "all x.(Max(x) -> Brimpus(x))", "all x.(M Max(x) -> Brimpus(x))", "all x.((Max(x) & Brimpus(x)) -> Brimpus(x))", "all x.(Matt(x) -> Brimpus(x))", "all x.((Max(x) & Brimpus(x)) -> Is(x,y))", "all x.((Max(x) & Brimpus(x)) -> Brampus(x))", "all x.((Max(x) & Brimpus(x)) -> Has(x,y))", "(Brimpus(Max) -> Brimpus(Max))", "all x.((Max(x) & Brimpus(x)) -> Bimpus(x))", "all x.((Max(x) & Brimpus(x)) -> Brempus(x))", "all x.((Max(x) & Brimpus(x)) -> Brumpus(x))", "all x.((Max(x) & Brimpus(x)) -> -Brimpus(x))", "all x.(Max(x) -> Brumpus(x))", "All x.(Max(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_366", "nl": "Max is not a lorpus.", "fol": "-lorpus(Max)", "prediction": ["all x.(Max(x) -> -Lorpus(x))", "(-Lorpus(Max))", "-Lorpus(Max)", "All x.(Max(x) -> -Lorpus(x))", "(Lorpus(Max) & -Lorpus(Max))", "exists x.(Max(x) & -Lorpus(x))", "(Lorpus(Max) -> -Lorpus(Max))", "all x.(Max(x) -> -Lorpus(x))", "all x.(Max(x) -> -Larpus(x))", "(-Lorpus(Max) & -Lorpus(Max))", "all x.(Max(x) -> -Llorpus(x))", "all x.(Max(x) -> -Lorph(x))", "(-Lorpus(Max) -> -Lorpus(Max))", "(-Lorpus(Max) -> -Lorpus(Max))", "(Lorpus(Max) -> -Lorpus(Max))", "all x.(Max(x) -> NoLorpus(x))"]}
{"id": "prontoqa_validation_367", "nl": "Everything that is a lorpus and a numpus and a brimpus is a vumpus.", "fol": "all x. ((lorpus(x) & numpus(x) & brimpus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Numpus(x) | Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vampus(x))", "all x.((Lorph(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Nompus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numerus(x) & Brimpus(x)) -> Vumpus(x))", "all x.(((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vulpis(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Voompus(x))", "all x y.((Lorpus(x) & Numpus(y) & Brimpus(y)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vampire(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vulmpus(x))", "all x.((Lorpus(x) & Number(x) & Brimpus(x)) -> Vumpus(x))", "all x y z.((Lorpus(x) & Numpus(y) & Brimpus(z) & Is(x,y)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vulpe(x))"]}
{"id": "prontoqa_validation_368", "nl": "Shumpuses are gorpuses.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shumpus(x) -> Gorpus(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "all x.(Shupuse(x) -> Gorpus(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "all x.(Shampus(x) -> Gorpus(x))", "all x.(Shampus(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpus(x))", "all x.(Sshumpuse(x) -> Gorpuse(x))", "all x.(Shuppus(x) -> Gorpus(x))", "all x.(Shupus(x) -> Gorpuse(x))", "all x.(Shuppus(x) -> Gorpuse(x))", "all x.(Shupus(x) -> Gorpus(x))", "all x.(Sshumpuse(x) -> Gorpus(x))", "all x.(Shumpuse(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_369", "nl": "Every gorpus is not a vumpus.", "fol": "all x. (gorpus(x) -> -vumpus(x))", "prediction": ["all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vimpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Voompus(x))", "exists x.(Gorpus(x) & -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vampus(x))", "all x.(Gorpus(x) -> -Umpus(x))", "exists x.(Gorpus(x) & -Vumpus(x))", "all x.(Gorpus(x) -> -Vulmpus(x))", "all x.(Gorpus(x) -> -Vampus(x))", "all x.(Gorpus(x) -> -Volumpus(x))", "all x.(Gorpus(x) -> -Vuxpus(x))"]}
{"id": "prontoqa_validation_370", "nl": "Sam is a shumpus.", "fol": "shumpus(Sam)", "prediction": ["all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Shumpus(x))", "all x.(Sam(x) -> Humptious(x))", "all x.(Sam(x) -> Humptus(x))", "all x.(Sam(x) -> Humpback(x))", "all x.(Sam(x) -> Humpty(x))", "all x.(Shumpus(x) -> Sam(x))", "all x.(Sam(x) -> Humptue(x))", "all x.((Sam(x) & Humpus(x)) -> Shumpus(x))", "all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Shumpus(x))", "all x.(Shumpus(x) -> Shumpus(x))", "All x.(Sam(x) -> Humpus(x))", "all x.(Sham(x) -> Humpus(x))", "all x.(Sam(x) -> Humptus(x))", "all x.(Sam(x) -> Humptious(x))"]}
{"id": "prontoqa_validation_371", "nl": "Sam is a lorpus.", "fol": "lorpus(Sam)", "prediction": ["all x.(Sam(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Sam(x))", "all x.(Sam(x) -> Llorpus(x))", "all x.(Lorpus(x) -> Sam(x))", "all x.(Lorph(x) -> Sam(x))", "all x.(Sam(x) -> Lordpus(x))", "all x.(Sam(x) -> Loompus(x))", "all x.(Sam(x) -> Loomis(x))", "all x.(Sam(x) -> (Lorpus(x) & LivesIn(x)))", "all x.(Sam(x) -> Lorpus(x))", "exists x.(Sam(x) & Lorpus(x))", "All x.(Sam(x) -> Lorpus(x))", "all x.((Sam(x) & Lorpus(x)) -> Is(x,y))", "all x.(Sam(x) -> Lopus(x))", "all x.((Sam(x) & Lorpus(x)) -> LivesIn(x))", "(Lorpus(Sam) & LivesIn(Sam,Sam))"]}
{"id": "prontoqa_validation_372", "nl": "Everything that is a rompus and a yumpus and a lempus is a gorpus, a sterpus, and a zumpus.", "fol": "all x. ((rompus(x) & yumpus(x) & lempus(x)) -> (gorpus(x) & sterpus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yuppus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yompus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yuppus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yompus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yupus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yupus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterepus(x) & Zumpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_validation_373", "nl": "Max is a rompus.", "fol": "rompus(Max)", "prediction": ["all x.(Max(x) -> Rompus(x))", "all x.(Rompus(x) -> Max(x))", "All x.(Max(x) -> Rompus(x))", "(Rompus(Max))", "all x.(Matthew(x) -> Rompus(x))", "(Rompus(Max) & -Rompus(Max))", "all x.(Marx(x) -> Rompus(x))", "all x.(Max(x) -> Rompus(x))", "all x.(Max(x) -> Rupus(x))", "all x.(Matt(x) -> Rompus(x))", "all x.(Rompus(x) -> Max(x))", "Max is a rompus.", "(Rompus(Max) -> Rompus(Max))", "(Rompus(Max)", "all x.(Max(x) -> Rimpus(x))", "all x.(Max(x) -> Romanose(x))"]}
{"id": "prontoqa_validation_374", "nl": "Max is a lempus.", "fol": "lempus(Max)", "prediction": ["all x.(Max(x) -> Lempus(x))", "All x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Lempus(x))", "all x.(Max(x) -> Leopard(x))", "exists x.(Max(x) & Lempus(x))", "(Lempus(Max) -> Lempus(Max))", "(Limpus(Max) -> Lempus(Max))", "Max is a lempus.", "(Limpus(Max) -> Lempus(Max))", "(Limpus(Max) & Lempus(Max))", "(Lempus(Max) -> Lempus(Max))", "all x.(Max(x) -> Lampus(x))", "All x.(Max(x) -> Lempus(x))", "(Lempus(Max) & -Lempus(Max))", "(Lempus(Max))", "all x.(Max(x) -> Loompus(x))"]}
{"id": "prontoqa_validation_375", "nl": "Everything that is a sterpus, an impus, or a vumpus is a lempus.", "fol": "all x. ((sterpus(x) | impus(x) | vumpus(x)) -> lempus(x))", "prediction": ["all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperempt(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperator(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Imperempt(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impermiss(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impeccable(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperium(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | IsImpos(x) | IsVumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | IsImpossed(x) | IsVumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Imperative(x) | Vumpus(x)) -> Lempus(x))", "all x.(((Sterpus(x) | Impossible(x) | Vumpus(x))) -> Lempus(x))", "all x.((Sterpus(x) | Imperempted(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_validation_376", "nl": "Rex is a brimpus and a tumpus and an impus.", "fol": "(brimpus(Rex) & tumpus(Rex) & impus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Impossible(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Issue(x)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Impossible(x)))", "all x.(Rex(x) -> (Brumpus(x) & Tumpus(x) & Imperator(x)))", "all x.(Rex(x) -> (Brimpus(x) | Tumpus(x) | Imperator(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & Imperator(y)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Issue(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperium(x)))", "all x.(Rex(x) -> (Brumpus(x) & Tumpus(x) & Impossible(x)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Imperator(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & Imperator(y))))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & -Impossible(y))))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Impermiss(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & impus(y)))"]}
{"id": "prontoqa_validation_377", "nl": "Rex is a lempus.", "fol": "lempus(Rex)", "prediction": ["all x.(Rex(x) -> Lempus(x))", "All x.(Rex(x) -> Lempus(x))", "Rex is a lempus.", "all x.(Rex(x) -> Lempus(x))", "Rex is a Lempus.", "All x.(Rex(x) -> Lempus(x))", "(Lempus(Rex) -> Lempus(Rex))", "Rex.(Lempus(x) -> Lempus(x))", "(Lempus(Rex) & Lempus(Rex))", "(Limpus(Rex) & Lempus(Rex))", "Rex is Lempus.", "(Lempus(Rex) -> Lempus(Rex))", "all x.(Rex(x) -> Leopard(x))", "Rex.(Lempus(x) -> Lempus(x))", "all x.(Rex(x) -> Lampus(x))", "Rex is Lempus(x)"]}
{"id": "prontoqa_validation_378", "nl": "Tumpuses are zumpuses and impuses and yumpuses.", "fol": "all x. (tumpus(x) -> (zumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issues(x) & Yumpuses(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issues(x) | Yumpuses(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yampus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issues(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompuse(x) | Issue(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yampus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) & Impossible(x) & Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Impossible(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Impossible(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Tompuse(x) & Issue(x) & Yumpuse(x)))"]}
{"id": "prontoqa_validation_379", "nl": "Alex is a tumpus.", "fol": "tumpus(Alex)", "prediction": ["all x.(Alex(x) -> Tumpus(x))", "all x.(Alex(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Alex(x))", "all x.(Alex(x) -> Tumulus(x))", "All x.(Alex(x) -> Tumpus(x))", "All x.(Alex(x) -> Tumpus(x))", "all x.(Alex(x) -> Totumpus(x))", "all x.(Alex(x) -> Pumpus(x))", "all x.(Tumpus(x) -> Alex(x))", "all x.(Alex(x) -> Tumpet(x))", "all x.(Alex(x) -> Tumpus(x))", "all x.(Alex(x) -> Tumpus(x))", "Alex is a tumpus.", "all x.(Alex(x) -> Tumpew(x))", "All x.(Alex(x) -> Tumulus(x))", "all x.(Alex(x) -> Tumult(x))"]}
{"id": "prontoqa_validation_380", "nl": "Alex is an impus or a wumpus or a gorpus.", "fol": "(impus(Alex) | wumpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | IsWumpus(x) | IsGorpus(x)))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Issue(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | (Issue(x) | IsWumpus(x) | IsGorpus(x))))", "all x.(Alex(x) -> (Issue(x) | (Issue(x) | Issue(x)) | Issue(x) | Issue(x) | Issue(x))))", "all x.(Alex(x) -> (Issue(x) | (Issue(x) | Issue(x))) | Issue(x) | Issue(x) | Issue(x) | Issue(x))))", "all x.(Alex(x) -> (Issue(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Imposer(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | (Issue(x) | Issue(x)) | Issue(x) | Issue(x))))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x)))))", "all x.(Alex(x) -> (Issue(x) | (Issue(x) | Issue(x))) | Issue(x) | Issue(x) | Issue(x))))", "all x.(Alex(x) -> (Imposs(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | (Issue(x) | Issue(x)) | Issue(x)) | Issue(x) | Issue(x) | Issue(x))))"]}
{"id": "prontoqa_validation_381", "nl": "Jompuses are sterpuses, dumpuses, and lempuses.", "fol": "all x. (jompus(x) -> (sterpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Steruse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) & Dumpuse(x) & Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuses(x) | Dumpuses(x) | Lempuses(x)))", "all x.(Jompuse(x) -> (Sterepuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "all x.(Jompus(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sternpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Starpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sternus(x) | Dumpuse(x) | Lempuse(x)))", "all x y z.((Jompuse(x) & Sterpuse(y) & Dumpuse(z)) -> (Sterpuse(x) | Lempuse(x)))", "all x y z.((Jompuse(x) & Sterpuse(y) & Dumpuse(z)) -> (Sterpuse(x) | Lempuse(z)))", "all x y z.((Jompuse(x) & Sterpuse(y) & Dumpuse(z)) -> (Sterpuse(y) | Lempuse(z)))"]}
{"id": "prontoqa_validation_382", "nl": "Alex is not a lempus and Alex is a numpus and Alex is a gorpus.", "fol": "(-lempus(Alex) & numpus(Alex) & gorpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z))))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z))))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z))))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z))))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & -Numpus(x) & -Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & -Numpus(y) & -Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x))))"]}
{"id": "prontoqa_validation_383", "nl": "Each tumpus is not a jompus.", "fol": "all x. (tumpus(x) -> -jompus(x))", "prediction": ["all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jampus(x))", "all x.(Tumpus(x) -> -Joompus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> -Tumpus(x))", "exists x.(Tumpus(x) & -Jompus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jombus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jomes(x))", "all x.(Tumpus(x) -> -Jomessian(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jomess(x))"]}
{"id": "prontoqa_validation_384", "nl": "Numpuses are jompuses.", "fol": "all x. (numpus(x) -> jompus(x))", "prediction": ["all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpus(x) -> Jombus(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpuse(x) -> Jombus(x))", "all x.(Numpuse(x) -> Jompus(x))", "all x.(Numptus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numbus(x) -> Jompuse(x))", "all x.(Nimbus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Joint(x))", "all x y.((Numpus(x) & Jompuse(y)) -> Is(x,y))", "all x y.((Numpus(x) & Jompuse(y)) -> Has(x,y))"]}
{"id": "prontoqa_validation_385", "nl": "Fae is a tumpus.", "fol": "tumpus(Fae)", "prediction": ["all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumulus(x))", "exists x.(Fae(x) & Tumpus(x))", "all x y.((Fae(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "(Tumpus(Fae) -> Tumpus(Fae))", "(Tumpus(Fae) & Tumpus(Fae))", "All x.(Fae(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Fae(x))", "all x.(Fae(x) -> Tumpet(x))", "All x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Totumpus(x))", "all x.(Fae(x) -> (Tumpus(x) & Tumpus(x)))", "all x y.((Fae(x) & Tumpus(y)) -> Tumpus(x))"]}
{"id": "prontoqa_validation_386", "nl": "Fae is a lorpus, Fae is an impus, or Fae is not a numpus.", "fol": "(lorpus(Fae) | impus(Fae) | -numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Impossible(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Impossible(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Issue(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Issue(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Impossible(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Impossible(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "all x.(Fae(x) -> (Lorpus(x) | Impossible(x) | -Numpus(x)))", "all x.(Fae(x) -> (Lorpus(x) | Impossible(x) | -Numpus(x)))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Imperative(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Impossible(x)) | (Fae(x) -> -Nompus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Impossible(x)) | (Fae(x) -> -numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Impermissible(x)) | (Fae(x) -> -Numpus(x))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Impossible(x)) | -Numpus(x)))"]}
{"id": "prontoqa_validation_387", "nl": "Sterpuses are not dumpuses.", "fol": "all x. (sterpus(x) -> -dumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumuse(x))", "all x.(Sterpus(x) -> -Dumpus(x))", "all x.(Sterpus(x) -> -Dumpsuse(x))", "all x.(Sterpuse(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpsus(x))", "all x.(Sterpuse(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dupuse(x))", "all x.(Stupid(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dupus(x))", "all x.(Sterpus(x) -> -Dumuse(x))", "all x.(Sterpus(x) -> -Dumpus(x))", "all x.(Strerpus(x) -> -Dumpuse(x))", "all x.(Sternpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpsuse(x))"]}
{"id": "prontoqa_validation_388", "nl": "Everything that is a vumpus or a grimpus or a yumpus is a dumpus.", "fol": "all x. ((vumpus(x) | grimpus(x) | yumpus(x)) -> dumpus(x))", "prediction": ["all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yampus(x)) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumppus(x)) -> Dumpus(x))", "all x.((Vimpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yampus(x)) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vimpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumppus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_validation_389", "nl": "Stella is a tumpus and a gorpus and a sterpus.", "fol": "(tumpus(Stella) & gorpus(Stella) & sterpus(Stella))", "prediction": ["all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(Tumpus(Stella) & Gorpus(Stella) & Sterpus(Stella))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) | Sterpus(x))))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterepus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (Tumpus(x) & Gorpus(y) & Sterpus(z)))", "all x.(Stella(x) -> (Tumpus(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) | Sterpus(x))))", "all x.(Stella(x) -> (Tumpus(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) | Sterpus(x))))", "all x y.((Stella(x) & Tumpus(y)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Gorpus(y) & -Sterpus(y))))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Gorpus(y) & All z.(Sterpus(z))) -> Sterpus(z)))", "all x y z.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (Tumpus(x) & Gorpus(y) & Sterpus(z)))"]}
{"id": "prontoqa_validation_390", "nl": "Every brimpus is a tumpus, a zumpus, and a lorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lordpus(x)))", "all x.(Brompus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brompus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Blumpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Zumpus(x) & Lordpus(x)))", "all x.(Blumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & lorpus(x)))"]}
{"id": "prontoqa_validation_391", "nl": "Stella is a lempus, Stella is a dumpus, and Stella is not a lorpus.", "fol": "(lempus(Stella) & dumpus(Stella) & -lorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x))))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) | Dumpus(y) & -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> -Lorpus(z))))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> -Lorpus(z)))", "(all x y z.(Stella(x) -> Lempus(x)) & (Stella(y) -> Dumpus(y)) & (Stella(z) -> -Lorpus(z)))", "(all x.(Lempus(x) -> Stella(x)) & (Dumpus(x) -> Stella(x)) & -Lorpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lempus(z)))", "all x y z.((Stella(x) & Lempus(y) & Dumpus(z)) -> (Lempus(x) & Dumpus(x) & -Lorpus(x)))", "(all x y z.(Stella(x) -> Lempus(x)) & (Stella(y) -> Dumpus(y)) & (Stella(z) -> -Lorpus(z))))", "(all x.(Lempus(x) -> Stella(x)) & all y.(Dumpus(y) -> Stella(y))) & all z.(Lorpus(z) -> Stella(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & -Lorpus(y)))"]}
{"id": "prontoqa_validation_392", "nl": "Everything that is a tumpus or an impus or a lempus is a brimpus and a rompus and a sterpus.", "fol": "all x. ((tumpus(x) | impus(x) | lempus(x)) -> (brimpus(x) & rompus(x) & sterpus(x)))", "prediction": ["all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperative(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | IsImpos(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impermiss(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Steroid(x)))", "all x.(((Tumpus(x) | Impossible(x) | Lempus(x))) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterepus(x)))", "all x.((Tumpus(x) | IsImpos(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) | Rompus(x) | Sterpus(x)))", "all x.((Tumpus(x) | IsImprovement(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperium(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperempt(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | impus(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impress(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))"]}
{"id": "prontoqa_validation_393", "nl": "Stella is a lempus.", "fol": "lempus(Stella)", "prediction": ["all x.(Stella(x) -> Lempus(x))", "Stella is a lempus.", "all x.((Stella(x) & Lempus(x)) -> Lempus(x))", "All x.(Stella(x) -> Lempus(x))", "exists x.(Stella(x) & Lempus(x))", "all x.((Stella(x) & Lempus(x)) -> Is(x,y))", "Stella is a Lempus.", "Stella is Lempus(Stella)", "all x.(Lempus(x) -> Stella(x))", "all x.(Stella(x) -> Lempus(x))", "(Lempus(Stella) -> Lempus(Stella))", "(Lempus(Stella) & Lempus(Stella))", "all x.((Stella(x) & Lempus(x)) -> -Lempus(x))", "(Lempus(Stella) -> Lempus(Stella))", "all x.((Stella(x) & Lempus(x)) -> HasLempus(x))", "all x.((Stella(x) & Lempus(x)) -> IsLempus(x))"]}
{"id": "prontoqa_validation_394", "nl": "Stella is a rompus.", "fol": "rompus(Stella)", "prediction": ["Stella is a rompus.", "all x.(Stella(x) -> Rompus(x))", "all x.(Rompus(x) -> Stella(x))", "Stella is a Rompus.", "All x.(Stella(x) -> Rompus(x))", "all x.((Stella(x) & Rompus(x)) -> Is(x,y))", "all x.((Stella(x) & Rompus(x)) -> Rompus(x))", "(Rompus(Stella) & -Rompus(Stella))", "all x.((Stella(x) & Rompus(x)) -> Raccoon(x))", "(Rompus(Stella) -> Rompus(Stella))", "all x.(Stella(x) -> Rompus(x))", "(Rompus(Stella))", "Stella is rompus.", "all x.((Stella(x) & Rompus(x)) -> Rimpus(x))", "all x.((Stella(x) & Rompus(x)) -> -Rompus(x))", "all x.((Stella(x) & Rompus(x)) -> Is(x,rompus))"]}
{"id": "prontoqa_validation_395", "nl": "Tumpuses are lempuses, dumpuses, and numpuses.", "fol": "all x. (tumpus(x) -> (lempus(x) & dumpus(x) & numpus(x)))", "prediction": ["all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumult(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpuse(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "(all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x))))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumper(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lampuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpe(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpus(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x.(Tumpuse(x) -> (Lempuse(x) & Dumpuse(x) & Numpuse(x)))", "(all x.(Tumpuse(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y))))", "all x.((Tumpuse(x) & Lempuse(x)) | Dumpuse(x) | Numpuse(x))"]}
{"id": "prontoqa_validation_396", "nl": "Wren is a tumpus.", "fol": "tumpus(Wren)", "prediction": ["all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumulus(x))", "all x y.((Wren(x) & Tumpus(y)) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "all x.((Wren(x) & Tumpus(x)) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "exists x.(Wren(x) & Tumpus(x))", "all x.(Wren(x) -> Totumpus(x))", "all x.(Wren(x) -> Pumpus(x))", "all x.(Wren(x) -> Tumpew(x))", "all x y.((Wren(x) & Tumpus(y)) -> Is(x,y))", "(Tumpus(Wren) -> Tumpus(Wren))", "all x.(Wren(x) -> Tumult(x))"]}
{"id": "prontoqa_validation_397", "nl": "Wren is a yumpus, a lorpus, or a dumpus.", "fol": "(yumpus(Wren) | lorpus(Wren) | dumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lordpus(x) | Dumpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (yumpus(x) | lorpus(x) | dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Loomis(x) | Dumpus(x)))", "all x y.((Wren(x) & (Yumpus(y) | Lorpus(y) | Dumpus(y))) -> (Yumpus(x) | Lorpus(y) | Dumpus(y)))", "all x.(Wren(x) -> (Yumpus(x) | Lopus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Loperpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lopus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lops(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Loupus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Larkus(x) | Dumpus(x)))", "all x y.((Wren(x) & (Yumpus(y) | Lorpus(y) | Dumpus(y))) -> (Yumpus(y) | Lorpus(y) | Dumpus(y)))", "all x y.((Wren(x) & (Yumpus(y) | Lorpus(y) | Dumpus(y))) -> Is(x,y))", "all x.(Wren(x) -> (Yumpus(x) | Larpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_validation_398", "nl": "Everything that is a wumpus, a lorpus, or an impus is a rompus.", "fol": "all x. ((wumpus(x) | lorpus(x) | impus(x)) -> rompus(x))", "prediction": ["all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsI(x)))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIII(x)))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIs(x)) -> Rompus(x))"]}
{"id": "prontoqa_validation_399", "nl": "Wren is a lorpus and a vumpus and a jompus.", "fol": "(lorpus(Wren) & vumpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vampus(x) & Jompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Vumpus(z)) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Voompus(x) & Jompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Vumpus(z)) -> (Lorpus(x) & Vumpus(z) & Jompus(z)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorph(x) & Vumpus(x) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Vumpus(z)) -> (Lorpus(x) & Vumpus(y) & Jompus(z)))", "all x.(Wren(x) -> (Lorpus(x) & Vampus(x) & Jompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Vumpus(z)) -> (Lorpus(x) | Vumpus(z) | Jompus(z)))", "(Lorpus(Wren) & Vumpus(Wren) & Jompus(Wren))", "all x.(Wren(x) -> (Lorpus(x) & Vulmpus(x) & Jompus(x)))", "all x y z.((Wren(x) & Lorpus(y) & Vumpus(z)) -> (Lorpus(x) & Vumpus(z) & Jompus(x)))", "all x y.((Wren(x) & Lorpus(y)) -> (Vumpus(x) & Jompus(x)))"]}
{"id": "prontoqa_validation_400", "nl": "Everything that is a zumpus or a shumpus or a vumpus is a sterpus.", "fol": "all x. ((zumpus(x) | shumpus(x) | vumpus(x)) -> sterpus(x))", "prediction": ["all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Zumpus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterepus(x))", "all x.((Tompus(x) | Humpus(x) | Vampus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterepus(x))", "all x.((Tompus(x) | Shumpus(x) | Vampus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vampire(x)) -> Sterpus(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Steroid(x))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Steerpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Steroid(x))"]}
{"id": "prontoqa_validation_401", "nl": "Max is a sterpus, a vumpus, and a jompus.", "fol": "(sterpus(Max) & vumpus(Max) & jompus(Max))", "prediction": ["all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> (Sterepus(x) | Vumpus(x) | Jompus(x)))", "all x.(Max(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "(All x.(Max(x) -> Sterpus(x)) & (Vumpus(x) & Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vimpus(y) -> Jompus(y)))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vumpus(y) & -Vumpus(y))) & exists z.(Max(z) & Jompus(z)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) -> Jompus(y)))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vumpus(y) & Voompus(y))) & exists z.(Max(z) & Jompus(z)))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vimpus(y) & Vimpus(y)) & exists z.(Jompus(z) & Vimpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & (Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) | Vampus(x) | Jompus(x)))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vimpus(y) & Vimpus(y))) & exists z.(Max(z) & Jompus(z)))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vumpus(y) & -Vumpus(y))) & exists z.(Max(z) & Jompus(z))))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) -> Jompus(y)))"]}
{"id": "prontoqa_validation_402", "nl": "Max is a sterpus.", "fol": "sterpus(Max)", "prediction": ["all x.(Max(x) -> Sterpus(x))", "All x.(Max(x) -> Sterpus(x))", "all x.((Max(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Max(x) -> Sterepus(x))", "all x.(Max(x) -> Steroid(x))", "((Max(Max) & Sterpus(Max)) -> Sterpus(Max))", "(Sterpus(Max) & Sterpus(Max))", "(Sterpus(Max) -> Sterpus(Max))", "all x.(Max(x) -> Sterpus(x))", "all x.((Max(x) & Sterpus(x)) -> Is(x,y))", "all x.((Max(x) & Sterpus(x)) -> Steroid(x))", "(Sterpus(Max) -> Sterpus(Max))", "All x.(Max(x) -> Sterepus(x))", "all x.(Max(x) -> Sterus(x))", "All x.(Max(x) -> Steroid(x))", "all x.((Max(x) & Sterpus(x)) -> Has(x,y))"]}
{"id": "prontoqa_validation_403", "nl": "Everything that is a lorpus or a brimpus or a grimpus is not a lempus.", "fol": "all x. ((lorpus(x) | brimpus(x) | grimpus(x)) -> -lempus(x))", "prediction": ["all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))", "all x.(((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lampus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lumpus(x))", "all x.((Lorph(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((OrLorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Larpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x y.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(y))", "all x.((Lempus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grumpus(x)) -> -Lempus(x))", "all x.((Morpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Llorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.(((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Limpus(x))"]}
{"id": "prontoqa_validation_404", "nl": "Every rompus is a shumpus and a lempus and a dumpus.", "fol": "all x. (rompus(x) -> (shumpus(x) & lempus(x) & dumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (IsShumpus(x) & IsLempus(x) & IsDumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "all x.(rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (HasShumpus(x) & HasLempus(x) & HasDumpus(x)))", "all x.(Rompus(x) -> ((Shumpus(x) & Lempus(x) & Dumpus(x))))", "all x y.((Rompus(x) & Humpus(y)) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & (Lempus(x) -> Dumpus(x)))", "all x y.((Rompus(x) & Shumpus(y)) -> (Lempus(x) & Dumpus(x)))", "exists x.(Rompus(x) & Humpus(x) & Lempus(x) & Dumpus(x))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "(all x.(Rompus(x) -> Shumpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "all x.(Rompus(x) -> exists y.(Shumpus(y) & Lempus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Humpus(y)) -> (Shumpus(x) & Lempus(y) & Dumpus(y)))"]}
{"id": "prontoqa_validation_405", "nl": "Fae is a brimpus.", "fol": "brimpus(Fae)", "prediction": ["all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "All x.(Fae(x) -> Brimpus(x))", "exists x.(Fae(x) & Brimpus(x))", "all x.(Fampus(x) -> Brimpus(x))", "(Brimpus(Fae) & Brimpus(Fae))", "(Brimpus(Fae) -> Brimpus(Fae))", "all x y.((Fae(x) & Brimpus(y)) -> Is(x,y))", "all x.(Famous(x) -> Brimpus(x))", "all x y.((Fae(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Fae(x) -> Brumpus(x))", "all x.(Famus(x) -> Brimpus(x))", "all x y.((Fae(x) & Brimpus(y)) -> Has(x,y))", "all x.(Fae(x) -> (Brimpus(x) & Brimpus(x)))", "all x y.((Fae(x) & Brimpus(y)) -> Brempus(x))", "all x.(Fae(x) -> Brampus(x))"]}
{"id": "prontoqa_validation_406", "nl": "Fae is not a rompus.", "fol": "-rompus(Fae)", "prediction": ["all x.(Fae(x) -> -Rompus(x))", "-Rompus(Fae)", "(Rompus(Fae) & -Rompus(Fae))", "(-Rompus(Fae))", "exists x.(Fae(x) & -Rompus(x))", "All x.(Fae(x) -> -Rompus(x))", "(exists x.(Fae(x) & -Rompus(x)))", "all x.(Fae(x) -> -Rompus(x))", "all x.(Fae(x) -> -rompus(x))", "(Rompus(Fae) -> -Rompus(Fae))", "(-Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "((Fae(f) & -Rompus(f)))", "all x.(Fae(x) -> -Romesh(x))", "(-Rompus(fae) & -Rompus(fae))", "all x.(Fae(x) -> -Rrompus(x))"]}
{"id": "prontoqa_validation_407", "nl": "Everything that is a lorpus, a shumpus, and a vumpus is a grimpus and a lempus and a wumpus.", "fol": "all x. ((lorpus(x) & shumpus(x) & vumpus(x)) -> (grimpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Smoothpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Shumpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grampus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Smoothpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Smokey(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Voompus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Smaller(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) | Lempus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wompus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) | Lempus(x) | Wumpus(x)))"]}
{"id": "prontoqa_validation_408", "nl": "Fae is a shumpus.", "fol": "shumpus(Fae)", "prediction": ["all x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Shumpus(x))", "all x.(Fae(x) -> Humptus(x))", "all x.(Fae(x) -> Humpback(x))", "all x.(Fae(x) -> Humptious(x))", "all x y.((Fae(x) & Humpus(y)) -> Shumpus(x))", "exists x.(Fae(x) & Humpus(x))", "all x.(Fae(x) -> Shumpus(x))", "all x.(Fae(x) -> Humpus(x))", "All x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Humptue(x))", "all x.(Fae(x) -> Humpty(x))", "(Shumpus(Fae) -> Shumpus(Fae))", "(Shumpus(Fae) & Shumpus(Fae))", "all x.(Shumpus(x) -> Fae(x))", "all x y.((Fae(x) & Humpus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_409", "nl": "Fae is a vumpus.", "fol": "vumpus(Fae)", "prediction": ["all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vampus(x))", "all x.(Fae(x) -> Vulmpus(x))", "exists x.(Fae(x) & Vumpus(x))", "all x.(Fae(x) -> Voompus(x))", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vampire(x))", "all x.(Fae(x) -> Vimpus(x))", "All x.(Fae(x) -> Vumpus(x))", "all x y.((Fae(x) & Vumpus(y)) -> Vumpus(x))", "all x.(Fae(x) -> Vampus(x))", "all x.(Fae(x) -> Vampis(x))", "all x y.((Fae(x) & Vumpus(y)) -> Is(x,y))", "all x.(Fae(x) -> Vukpus(x))", "all x.(Fae(x) -> Vamppus(x))"]}
{"id": "prontoqa_validation_410", "nl": "Fae is a grimpus.", "fol": "grimpus(Fae)", "prediction": ["all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Gruppus(x))", "exists x.(Fae(x) & Grimpus(x))", "All x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Grumpus(x))", "(Grimpus(Fae) & Grimpus(Fae))", "all x.(Fae(x) -> Gruffus(x))", "all x.(Fae(x) -> Grupus(x))", "(Fae(Fae) & Grimpus(Fae))", "all x.(Fae(x) -> Grappa(x))", "(Grimpus(Fae))", "all x.(Fae(x) -> Grappus(x))", "(Grimpus(Fae) -> Grimpus(Fae))", "all x.(Fae(x) -> Gruppa(x))", "all x.(Fae(x) -> Grapple(x))"]}
{"id": "prontoqa_validation_411", "nl": "Each zumpus is a lempus, a tumpus, and a numpus.", "fol": "all x. (zumpus(x) -> (lempus(x) & tumpus(x) & numpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Tompus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "(all x.(Tompus(x) -> Lempus(x)) & all y.(Tompus(y) -> Tumpus(y)) & all z.(Tompus(z) -> Numpus(z))))", "(all x.(Tompus(x) -> Lempus(x)) & all y.(Tompus(y) -> Tumpus(y))) & all z.(Tompus(z) -> Numpus(z)))", "all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & all y.(Tumpus(y) & all z.(Numpus(z)) -> Numpus(z))))", "(all x.(Tompus(x) -> Lempus(x)) & all y.(Tompus(y) -> Tumpus(y)) & all z.(Tompus(z) -> Numpus(z)))", "all x.(Tommus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & all y.(Tumpus(y) & all z.(Numpus(z)) -> Numpus(z))))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Tommus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "(all x.(Tompus(x) -> Lempus(x)) & all y.(Tompus(y) -> Tumpus(y)) & all z.(Numpus(z) -> Numpus(z))))", "all x.(Touchpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Limpus(x) | Tumpus(x) | Numpus(x)))"]}
{"id": "prontoqa_validation_412", "nl": "Stella is a zumpus.", "fol": "zumpus(Stella)", "prediction": ["all x.(Stella(x) -> Zumpus(x))", "Stella is a zumpus.", "All x.(Stella(x) -> Zumpus(x))", "exists x.(Stella(x) & Zumpus(x))", "Stella is zumpus.", "Stella is zumpus(Stella)", "Stella is a zumpus(Stella)", "all x.(Stella(x) -> Zumpus(x))", "Stella is a Zumpus(Stella)", "Stella is Zumpus(Stella)", "(Tompus(Stella) & -Tompus(Stella))", "all x.(Stella(x) -> Zurpus(x))", "(Zumpus(Stella) -> Zumpus(Stella))", "All x.(Stella(x) -> Zumpus(x))", "(Tompus(Stella) -> Zumpus(Stella))", "(Tompus(Stella) & HasTompus(Stella))"]}
{"id": "prontoqa_validation_413", "nl": "Stella is a wumpus, a numpus, or a lempus.", "fol": "(wumpus(Stella) | numpus(Stella) | lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "exists x.(Stella(x) & (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> ((Wumpus(x) | Numpus(x) | Lempus(x))))", "(all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x))))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella))", "all x.((Stella(x) & (Wumpus(x) | Numpus(x) | Lempus(x))) -> Stella(x))", "all x y.((Stella(x) & (Wumpus(y) | Numpus(y) | Lempus(y))) -> (Wumpus(x) | Numpus(y) | Lempus(y)))", "all x.((Stella(x) & (Wumpus(x) | Numpus(x) | Lempus(x))) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lampus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Nompus(x) | Lempus(x)))", "all x y.((Stella(x) & Wumpus(y)) | Numpus(y) | Lempus(y)) -> (Wumpus(x) | Numpus(y) | Lempus(y)))", "all x y.((Stella(x) & (Wumpus(y) | Numpus(y) | Lempus(y))) -> (Wumpus(y) | Numpus(y) | Lempus(y)))", "all x y.((Stella(x) & (Wumpus(y) | Numpus(y) | Lempus(y))) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x y.((Stella(x) & Wumpus(y)) | Numpus(y) | Lempus(y)) -> (Wumpus(x) | Numpus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_414", "nl": "Every lempus is a sterpus.", "fol": "all x. (lempus(x) -> sterpus(x))", "prediction": ["all x.(Lempus(x) -> Sterpus(x))", "all x.(Limpus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterepus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Steerpus(x))", "all x.(Lempus(x) -> Steroid(x))", "all x y.((Lempus(x) & Sterpus(y)) -> Sterpus(x))", "all x.((Lempus(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Lempus(x) -> Sterus(x))", "all x.(Lempus(x) -> Sterpus(x))", "exists x.(Lempus(x) & Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x y.((Lempus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Lempus(x) -> sterpus(x))", "all x.((Lempus(x) & Sterpus(x)) -> Lempus(x))", "all x.(Lampus(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_415", "nl": "Alex is a gorpus, a lempus, and a numpus.", "fol": "(gorpus(Alex) & lempus(Alex) & numpus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(z) & Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(z) & Numpus(z)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) | Lempus(z) | Numpus(z)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z) & Numpus(x)) -> (Gorpus(x) | Lempus(z) | Numpus(z)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z) & Numpus(x)) -> (Gorpus(x) & Lempus(y) & Numpus(z)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z) & Numpus(x)) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Is(x,y) & Is(x,z)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z) & Numpus(x)) -> (Gorpus(x) & Lempus(z) & Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) | Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(y) & Numpus(z)))"]}
{"id": "prontoqa_validation_416", "nl": "Alex is a lorpus or a sterpus or a gorpus.", "fol": "(lorpus(Alex) | sterpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> ((Lorpus(x) | Sterpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Alex(x) & (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))", "all x.(Alex(x) -> ((Lorpus(x) | Sterpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Sterus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorph(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Larpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Dorpus(x)))", "exists x.(Alex(x) & (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_417", "nl": "Everything that is an impus, a rompus, and a yumpus is a gorpus and a grimpus and a tumpus.", "fol": "all x. ((impus(x) & rompus(x) & yumpus(x)) -> (gorpus(x) & grimpus(x) & tumpus(x)))", "prediction": ["all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yampus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposs(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposs(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_validation_418", "nl": "Fae is an impus.", "fol": "impus(Fae)", "prediction": ["all x.(Fae(x) -> Impossible(x))", "all x.(Fae(x) -> IsImpossible(x))", "all x.(Fae(x) -> Isolated(x))", "all x.(Fae(x) -> Illegal(x))", "all x.(Fae(x) -> Implicator(x))", "all x.(Fae(x) -> Is(x,y))", "all x.(Fae(x) -> Isolator(x))", "All x.(Fae(x) -> Impossible(x))", "all x.(Fae(x) -> Isolation(x))", "all x.(Fae(x) -> Imposer(x))", "all x.(Fae(x) -> IsImpediment(x))", "all x.(Fae(x) -> Is(x,Impossible))", "all x.(Fae(x) -> IsRequired(x))", "all x.(Fae(x) -> IsImprovement(x))", "all x.(Fae(x) -> IsImposer(x))", "all x.(Fae(x) -> Is(x,Is(x)))"]}
{"id": "prontoqa_validation_419", "nl": "Fae is a rompus.", "fol": "rompus(Fae)", "prediction": ["all x.(Fae(x) -> Rompus(x))", "all x.(Fae(x) -> Rompus(x))", "All x.(Fae(x) -> Rompus(x))", "exists x.(Fae(x) & Rompus(x))", "all x.(Fae(x) -> Rupus(x))", "all x.(Rompus(x) -> Fae(x))", "(Rompus(Fae) & -Rompus(Fae))", "(Rompus(Fae) & Rompus(Fae))", "(Rompus(Fae) -> Rompus(Fae))", "all x y.((Fae(x) & Rompus(y)) -> Is(x,y))", "all x.(Fae(x) -> (Rompus(x) & -Rompus(x)))", "(Rompus(Fae))", "all x.(Fae(x) -> Rhopus(x))", "all x.(Fae(x) -> Romanose(x))", "all x.(Fae(x) -> (Rompus(x) & Rompus(x)))", "all x y.((Fae(x) & Rompus(y)) -> Raccoon(x))"]}
{"id": "prontoqa_validation_420", "nl": "Fae is a gorpus.", "fol": "gorpus(Fae)", "prediction": ["all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "all x y.((Fae(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "exists x.(Fae(x) & Gorpus(x))", "exists x.(Fae(x) & Gorpus(x))", "all x y.((Fae(x) & Gorpus(y)) -> Is(x,y))", "All x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) -> Gorpus(Fae))", "All x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) & Gorpus(Fae))", "all x y.((Fae(x) & Gorpus(y)) -> Gorpus(x))", "(Gorpus(Fae) & Gorpus(Fae))", "all x y.((Fae(x) & Gorpus(y)) -> Has(x,y))", "(Gorpus(Fae) -> Gorpus(Fae))"]}
{"id": "prontoqa_validation_421", "nl": "Each lempus is a grimpus and a shumpus and a wumpus.", "fol": "all x. (lempus(x) -> (grimpus(x) & shumpus(x) & wumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Grimpus(x) & Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) | Shumpus(x) | Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) | Humpus(x) | Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z)) -> Grimpus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> (Shumpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z)) -> Wumpus(z))))", "all x.(Limpus(x) -> (Grimpus(x) & Shumpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z)) -> Grimpus(y)))", "all x.(Limpus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & (Shumpus(x) | Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z))) -> Grimpus(x)))", "all x.(Limpus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & (Shumpus(x) | Wumpus(x))))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_422", "nl": "Each lorpus is a yumpus.", "fol": "all x. (lorpus(x) -> yumpus(x))", "prediction": ["all x.(Lorpus(x) -> Yampus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpa(x))", "all x.(Lorpus(x) -> Yumpsum(x))", "all x.(Lorpus(x) -> Yumpu(x))", "all x.(Lorpus(x) -> Yumps(x))", "all x.(Lorph(x) -> Yampus(x))", "exists x.(Lorpus(x) & Yampus(x))", "all x.(Lorph(x) -> Yumpus(x))", "all x.(Lorph(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpum(x))", "all x.(Lorpus(x) -> Yumpos(x))", "all x.(Lorpus(x) -> Yumus(x))", "all x.(Lorph(x) -> Yumpa(x))"]}
{"id": "prontoqa_validation_423", "nl": "Yumpuses are not shumpuses.", "fol": "all x. (yumpus(x) -> -shumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpuse(x) -> -Shumpus(x))", "all x.(Yumpuse(x) -> -Shumpuse(x))", "(all x.(Yumpus(x) -> -Shumpus(x)))", "all x.(Yumpus(x) -> -Shumpuse(x))", "all x.((Yumpuse(x) & -Shumpus(x)) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.((Yumpus(x) & -Shumpus(x)) -> -Shumpus(x))", "(all x.(Yumpuse(x) -> -Shumpus(x)))", "all x.((Yumpuse(x) & -Shumpuse(x)) -> -Shumpuse(x))", "all x.((Yumpuse(x) & -Shumpuse(x)) -> -Shumpus(x))", "all x.(Umpus(x) -> -Shumpus(x))", "all x.((Yumpus(x) & -Shumpus(x)) -> -Yumpus(x))", "all x.((Yumpuse(x) & -Shumpuse(x)) -> -Yumpuse(x))", "all x.((Yumpuse(x) & -Shumpus(x)) -> -Yumpus(x))", "all x.((Yumpuse(x) & -Shumpuse(x)) -> -Yumpus(x))"]}
{"id": "prontoqa_validation_424", "nl": "Alex is a lorpus.", "fol": "lorpus(Alex)", "prediction": ["all x.(Alex(x) -> Lorpus(x))", "all x.(Alex(x) -> Llorpus(x))", "all x.(Lorpus(x) -> Alex(x))", "all x.(Alex(x) -> Loomis(x))", "All x.(Alex(x) -> Lorpus(x))", "all x.(Alex(x) -> Loompus(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Lordpus(x))", "all x y.((Alex(x) & Lorpus(y)) -> Is(x,y))", "all x.(Alex(x) -> Lorpus(x))", "all x.(Alex(x) -> Lompus(x))", "all x y.((Alex(x) & Lorpus(y)) -> LivesIn(x,y))", "all x.(Alex(x) -> Larpus(x))", "all x.(Alex(x) -> Lopus(x))", "all x.(Alex(x) -> lorpus(x))", "all x y.((Alex(x) & Lorpus(y)) -> Has(x,y))"]}
{"id": "prontoqa_validation_425", "nl": "Each numpus is a lorpus, a shumpus, and a rompus.", "fol": "all x. (numpus(x) -> (lorpus(x) & shumpus(x) & rompus(x)))", "prediction": ["all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Shumpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) | Shumpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) | Shumpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Shumpus(x) & Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Shumpus(x) & Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) & Shumpus(x) & Rompus(x)))", "all x.(Numerus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numerus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "all x.(numpus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_426", "nl": "Max is a numpus.", "fol": "numpus(Max)", "prediction": ["all x.(Max(x) -> Numpus(x))", "All x.(Max(x) -> Numpus(x))", "all x.(Max(x) -> Numpus(x))", "all x.(Max(x) -> Number(x))", "Max is Numpus(Max)", "all x.(Max(x) -> Nompus(x))", "all x.(Max(x) -> Numpus(x))", "All x.(Max(x) -> Numpus(x))", "all x.(Max(x) -> Numus(x))", "(Numpus(Max) & Numpus(Max))", "(Numpus(Max) -> Numpus(Max))", "(Numpus(Max) -> Numpus(Max))", "(Numpus(Max) -> Numpus(Max))", "all x.(Max(x) -> Nomus(x))", "(Numpus(Max) & Numpus(Max))", "Max.(Max) -> Numpus(x))"]}
{"id": "prontoqa_validation_427", "nl": "Max is a shumpus, a lorpus, or an impus.", "fol": "(shumpus(Max) | lorpus(Max) | impus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impossible(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Issue(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperative(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impermissible(x)))", "all x.(Max(x) -> (Shumpus(x) | Lordpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impeccable(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impermant(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperium(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Isolator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lordpus(x) | Impossible(x)))", "(exists x.(Max(x) & Humpus(x)) | exists y.(Lorpus(y) & Impossible(y))))", "(exists x.(Max(x) & Humpus(x)) | exists y.(Lorpus(y) & Issue(y))))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | impus(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperempt(x)))"]}
{"id": "prontoqa_validation_428", "nl": "Jompuses are shumpuses.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Humpus(x))", "all x.(Jimpus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jomess(x) -> Shumpus(x))", "all x.(Jompus(x) -> Shumpuse(x))", "all x.(Jompuse(x) -> (Shumpus(x) & Shumpus(x)))", "all x.(Jompus(x) -> Humpus(x))", "all x.(Jompuse(x) -> Humpuse(x))", "all x.(Jombuse(x) -> Shumpus(x))", "all x.(Jimpus(x) -> Humpus(x))", "all x.(Jumpus(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_429", "nl": "Polly is a sterpus and a wumpus and a jompus.", "fol": "(sterpus(Polly) & wumpus(Polly) & jompus(Polly))", "prediction": ["all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterepus(x) & Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "all x y.((Polly(x) & Sterpus(y)) -> (Wumpus(x) & Jompus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(y) & Jompus(z)))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) & Jompus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(z) & Jompus(z)))", "all x.(Poly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wompus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) | Wumpus(x) | Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(y) & Jompus(z)))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(z) & Jompus(z)))"]}
{"id": "prontoqa_validation_430", "nl": "Polly is a tumpus or a lempus or a shumpus.", "fol": "(tumpus(Polly) | lempus(Polly) | shumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Poly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> ((Tumpus(x) | Lempus(x) | Humpus(x))))", "all x.((Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x))) -> Polly(x))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Shumpus(x)))", "all x.(Ploy(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Pooly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x))))", "exists x.(Poly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Shumpus(x)))"]}
{"id": "prontoqa_validation_431", "nl": "Every zumpus is a rompus and a shumpus and a yumpus.", "fol": "all x. (zumpus(x) -> (rompus(x) & shumpus(x) & yumpus(x)))", "prediction": ["all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) | Humpus(x) | Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (IsRompus(x) & IsShumpus(x) & IsYumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (rompus(x) & shumpus(x) & yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) | Humpus(x) | Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (rompus(x) & shumpus(x) & yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_432", "nl": "Rex is a zumpus.", "fol": "zumpus(Rex)", "prediction": ["all x.(Rex(x) -> Zumpus(x))", "All x.(Rex(x) -> Zumpus(x))", "Rex is a zumpus.", "all x.(Rex(x) -> Zumpus(x))", "All x.(Rex(x) -> Zumpus(x))", "Rex is zumpus.", "all x.(Rex(x) -> Zurpus(x))", "Rex(x) -> Zumpus(x))", "Rex(x) -> Zumpus(x))", "all x.(Rex(x) -> Tompus(x))", "Rex is a zumpus(x)", "Rex is zumpus(x)", "All x.(Rex(x) -> Zurpus(x))", "Rex is Zumpus(x)", "Rex.(Tompus(x) -> HasRex(x))", "All x.(Rex(x) -> Tompus(x))"]}
{"id": "prontoqa_validation_433", "nl": "Rex is a rompus or a lempus or a grimpus.", "fol": "(rompus(Rex) | lempus(Rex) | grimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> ((Rompus(x) | Lempus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Gruppus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (IsRompus(x) | IsLempus(x) | IsGrimpus(x)))", "all x.(Rompus(x) | Lempus(x) | Grimpus(x))", "all x.(Rex(x) -> (rompus(x) | lempus(x) | grimpus(x)))", "exists x.(Rex(x) & (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grappus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grumpus(x)))", "(all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x))))", "(Rompus(Rex) | Lempus(Rex) | Grimpus(Rex)))", "all x.(Rex(x) -> (rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lampus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grappa(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grapple(x)))"]}
{"id": "prontoqa_validation_434", "nl": "Everything that is a shumpus and a lempus and a yumpus is a tumpus and a brimpus and a zumpus.", "fol": "all x. ((shumpus(x) & lempus(x) & yumpus(x)) -> (tumpus(x) & brimpus(x) & zumpus(x)))", "prediction": ["all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yampus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yuppus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yampus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yukpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yukon(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tompus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tompus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & zumpus(x)))"]}
{"id": "prontoqa_validation_435", "nl": "Rex is a shumpus.", "fol": "shumpus(Rex)", "prediction": ["all x.(Rex(x) -> Humpus(x))", "all x.(Rex(x) -> Shumpus(x))", "All x.(Rex(x) -> Humpus(x))", "all x.(Rex(x) -> Humptus(x))", "all x.(Rex(x) -> Humpback(x))", "Rex is a shumpus.", "all x.(Rex(x) -> Humptious(x))", "All x.(Rex(x) -> Humptus(x))", "All x.(Rex(x) -> Shumpus(x))", "all x.(Shumpus(x) -> Rex(x))", "All x.(Rex(x) -> Humpback(x))", "All x.(Rex(x) -> Humptious(x))", "all x.(Rex(x) -> Humpty(x))", "(Shumpus(Rex) -> Shumpus(Rex))", "all x.(Rex(x) -> Humptue(x))", "(Shumpus(Rex) -> Shumpus(Rex))"]}
{"id": "prontoqa_validation_436", "nl": "Rex is a yumpus.", "fol": "yumpus(Rex)", "prediction": ["all x.(Rex(x) -> Yumpus(x))", "all x.(Rex(x) -> Yampus(x))", "All x.(Rex(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Rex(x))", "Rex is yumpus.", "All x.(Rex(x) -> Yampus(x))", "all x.(Rex(x) -> Yumpus(x))", "all x.(Rex(x) -> Yumpa(x))", "All x.(Rex(x) -> Yumpus(x))", "All x.(Rex(x) -> Yumpa(x))", "all x.(Rex(x) -> Yumpsum(x))", "all x.(Rex(x) -> Yumpu(x))", "all x.(Yumpus(x) -> Rex(x))", "(Yumpus(Rex))", "All x.(Rex(x) -> Yumpsum(x))", "all x.(Rex(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_437", "nl": "Rex is a brimpus.", "fol": "brimpus(Rex)", "prediction": ["all x.(Rex(x) -> Brimpus(x))", "All x.(Rex(x) -> Brimpus(x))", "Rex is a brimpus.", "Rex is a Brimpus.", "all x.(Rex(x) -> Brimpus(x))", "All x.(Rex(x) -> Brimpus(x))", "all x.(Rex(x) -> Brumpus(x))", "all x.(Rex(x) -> Brampus(x))", "(Brimpus(Rex) & Brimpus(Rex))", "(Brimpus(Rex) -> Brimpus(Rex))", "Rex is a Brimpus(x)", "(Brimpus(Rex) -> Brimpus(Rex))", "all x.(Rex(x) -> Britpus(x))", "Rex is brimpus.", "All x.(Rex(x) -> Brumpus(x))", "All x.(Rex(x) -> Brampus(x))"]}
{"id": "prontoqa_validation_438", "nl": "Everything that is an impus and a wumpus and a yumpus is a zumpus, a numpus, and a tumpus.", "fol": "all x. ((impus(x) & wumpus(x) & yumpus(x)) -> (zumpus(x) & numpus(x) & tumpus(x)))", "prediction": ["all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsYumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsYumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Issue(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Issue(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsYumpus(x)) -> (Zumpus(x) & IsNumpus(x) & IsTumpus(x)))"]}
{"id": "prontoqa_validation_439", "nl": "Sam is an impus.", "fol": "impus(Sam)", "prediction": ["all x.(Sam(x) -> Impossible(x))", "all x.(Sam(x) -> IsImpossible(x))", "all x.(Sam(x) -> Is(x,y))", "all x.(Sam(x) -> Impeccable(x))", "All x.(Sam(x) -> Impossible(x))", "all x.(Sam(x) -> Is(x))", "all x.(Sam(x) -> Illegal(x))", "all x.(Sam(x) -> Isolator(x))", "all x.(Sam(x) -> Implicator(x))", "all x.(Sam(x) -> Imperator(x))", "all x.(Sam(x) -> Is(x,Sam))", "all x.(Sam(x) -> Is(x,sam))", "All x.(Sam(x) -> Is(x,y))", "exists x.(Sam(x) & Is(x,y))", "All x.(Sam(x) -> Is(x))", "exists x.(Sam(x) & Is(x))"]}
{"id": "prontoqa_validation_440", "nl": "Sam is a wumpus.", "fol": "wumpus(Sam)", "prediction": ["all x.(Wumpus(x) -> Sam(x))", "all x.(Sam(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Sam(x))", "all x.((Sam(x) & Wumpus(x)) -> Wumpus(x))", "all x.(Wumpus(x) -> (Sam(x) & Wumpus(x)))", "all x.((Wumpus(x) & Sam(x)) -> Wumpus(x))", "all x.((Sam(x) & Wumpus(x)) -> Wampus(x))", "(Wumpus(Sam) & -Wumpus(Sam))", "all x y.((Sam(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Wumpus(x) -> (Wumpus(x) & -Wumpus(x)))", "all x.((Sam(x) & Wumpus(x)) -> Is(x,y))", "exists x.(Wumpus(x) & Sam(x))", "all x.(Sam(x) -> Wampus(x))", "All x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> (Sam(x) & -Wumpus(x)))", "all x.((Wumpus(x) & Sam(x)) -> Wampus(x))"]}
{"id": "prontoqa_validation_441", "nl": "Sam is a yumpus.", "fol": "yumpus(Sam)", "prediction": ["all x.(Yumpus(x) -> Sam(x))", "all x.(Sam(x) -> Yumpus(x))", "all x.(Sam(x) -> Yampus(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Sam(x) -> Yumpus(x))", "all x.(Sam(x) -> Yumpa(x))", "all x.((Sam(x) & Yumpus(x)) -> Yampus(x))", "all x.((Sam(x) & Yampus(x)) -> Yampus(x))", "exists x.(Yumpus(x) & Sam(x))", "all x.((Sam(x) & Yumpa(x)) -> Yampus(x))", "all x.((Sam(x) & Yumpus(x)) -> Yampus(x))", "all x.((Sam(x) & Yumpus(x)) -> Is(x,y))", "all x.((Sam(x) & Yumpus(x)) -> Yumpus(x))", "all x.((Sam(x) & Yumpa(x)) -> Yumpa(x))", "all x.((Sam(x) & Yumpus(x)) -> Yompus(x))", "All x.(Yumpus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_442", "nl": "Sam is a zumpus.", "fol": "zumpus(Sam)", "prediction": ["all x.(Sam(x) -> Zumpus(x))", "All x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "all x.(Tompus(x) -> Sam(x))", "exists x.(Sam(x) & Zumpus(x))", "all x y.((Sam(x) & Zumpus(y)) -> Has(x,y))", "all x.(Zumpus(x) -> Sam(x))", "all x y.((Sam(x) & Zumpus(y)) -> Is(x,y))", "all x.(Sam(x) -> Zurpus(x))", "all x.((Sam(x) & Zumpus(x)) -> HasSam(x))", "all x.((Sam(x) & Zumpus(x)) -> Has(x,y))", "all x.((Sam(x) & Zumpus(x)) -> Is(x,y))", "all x.((Sam(x) & Zumpus(x)) -> -Tompus(x))", "all x y.((Sam(x) & Zumpus(y)) -> HasSam(x,y))", "all x y.((Sam(x) & Zumpus(y)) -> Affects(x,y))", "all x.((Sam(x) & Zumpus(x)) -> Has(x))"]}
{"id": "prontoqa_validation_443", "nl": "Everything that is a shumpus and a yumpus and a tumpus is a lorpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yampus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yukpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yukon(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yampus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yuppus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yompus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yupus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Loomis(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Loomis(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorde(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorde(x))"]}
{"id": "prontoqa_validation_444", "nl": "Each wumpus is not a lorpus.", "fol": "all x. (wumpus(x) -> -lorpus(x))", "prediction": ["all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.((Wumpus(x) & -Lorpus(x)) -> -Lorpus(x))", "all x y.((Wumpus(x) & Lorpus(y)) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Lorpus(x))", "all x.(Wumpus(x) -> -Lorph(x))", "all x.((Wumpus(x) & -Lorpus(x)) -> -Wumpus(x))", "all x.(Wumpus(x) -> -Larpus(x))", "all x y.((Wumpus(x) & Lorpus(y)) -> -Lorpus(x,y))", "(all x.(Wumpus(x) -> -Lorpus(x)))", "all x y.((Wumpus(x) & Lorpus(y)) -> -Wumpus(x))", "all x.(Wumpus(x) -> -Lemur(x))", "all x.(Wumpus(x) -> -Lorpheus(x))", "all x.(Humpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> (-Lorpus(x)))", "all x.((Wumpus(x) & -Lorpus(x)) -> NotWumpus(x))"]}
{"id": "prontoqa_validation_445", "nl": "Sally is a dumpus and a numpus and a wumpus.", "fol": "(dumpus(Sally) & numpus(Sally) & wumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "all x.(Sally(x) -> (Dumps(x) & Numpus(x) & Wumpus(x)))", "all x.(Sally(x) -> (Dupus(x) & Numpus(x) & Wumpus(x)))", "exists x.(Sally(x) & Dumpus(x) & Numpus(x) & Wumpus(x))", "all x.(Sally(x) -> (Dumus(x) & Numpus(x) & Wumpus(x)))", "all x.(Sally(x) -> (Dumpsus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "all x y z.((Sally(x) & Dumpus(y) & Numpus(z)) -> (Dumpus(x) & Numpus(z) & Wumpus(z)))", "all x y.((Sally(x) & Dumpus(x) & Numpus(y) & Wumpus(x)) -> (Dumpus(x) & Numpus(y) & Wumpus(y)))", "all x y.((Sally(x) & Dumpus(x) & Numpus(y) & Wumpus(x)) -> (Dumpus(x) & Numpus(y) & Wumpus(y)))", "all x y z.((Sally(x) & Dumpus(y) & Numpus(z)) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "all x y z.((Sally(x) & Dumpus(y) & Numpus(z)) -> (Dumpus(x) & Numpus(y) & Wumpus(z)))", "all x y z.((Sally(x) & Dumpus(y) & Numpus(z) & Wumpus(x)) -> (Dumpus(x) & Numpus(y) & Wumpus(z)))", "all x y z.((Sally(x) & Dumpus(y) & Numpus(z) & Wumpus(z)) -> (Dumpus(x) & Numpus(y) & Wumpus(z)))"]}
{"id": "prontoqa_validation_446", "nl": "Sally is a yumpus.", "fol": "yumpus(Sally)", "prediction": ["all x.(Yumpus(x) -> Sally(x))", "Sally is yumpus.", "All x.(Yumpus(x) -> Sally(x))", "all x.(Yumpus(x) -> Sally(x))", "Sally is a yumpus.", "exists x.(Yumpus(x) & Sally(x))", "All x.(Yumpus(x) -> Sally(x))", "all x.(Sally(x) -> Yampus(x))", "all x.(Sally(x) -> Yumpus(x))", "all x.(Yumpus(x) & Sally(x))", "All x.(Sally(x) -> Yampus(x))", "All x.(Sally(x) -> Yumpus(x))", "All x.(Sally(x) -> Yumpus(x))", "all x.(Sally(x) -> Yumpus(x))", "(Yumpus(Sally) & HasYump(Sally))", "(Yumpus(Sally) -> Yampus(Sally))"]}
{"id": "prontoqa_validation_447", "nl": "Sally is a tumpus.", "fol": "tumpus(Sally)", "prediction": ["all x.(Tumpus(x) -> Sally(x))", "Sally is a tumpus.", "all x.(Sally(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Sally(x))", "all x.(Sally(x) -> Tumpus(x))", "all x.((Sally(x) & Tumpus(x)) -> Tumpus(x))", "All x.(Sally(x) -> Tumpus(x))", "All x.(Tumpus(x) -> Sally(x))", "all x.((Sally(x) & Tumpus(x)) -> Tumpus(x))", "all x.(Sally(x) -> Tumulus(x))", "all x.((Sally(x) & Tumulus(x)) -> Tumpus(x))", "Sally is tumpus.", "exists x.(Sally(x) & Tumpus(x))", "All x.(Sally(x) -> Tumpus(x))", "all x.((Sally(x) & Tumpus(x)) -> Tumpus(x))", "all x.((Sally(x) & Tumpus(x)) -> Is(x,y))"]}
{"id": "prontoqa_validation_448", "nl": "Sally is not a shumpus.", "fol": "-shumpus(Sally)", "prediction": ["Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "All x.(Sally(x) -> -Shumpus(x))", "exists x.(Sally(x) & -Shumpus(x))", "Sally -Shumpus(Sally)", "(-Shumpus(Sally))", "Sally & -Shumpus(Sally)", "Sally n'est pas shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "Sally -Shumpus(s)", "Sally is -Shumpus(Sally)", "Sally -Shumpus(s) & -Shumpus(s))", "Sally n\u2019est pas shumpus.", "Sally & -Shumpus(s)", "Sally is not shumpus.", "Sally -Shumpus(s) -> -Shumpus(s))"]}
{"id": "prontoqa_validation_449", "nl": "Everything that is a vumpus, a tumpus, or a dumpus is a yumpus and a zumpus and a lorpus.", "fol": "all x. ((vumpus(x) | tumpus(x) | dumpus(x)) -> (yumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vimpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lordpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (yumpus(x) & zumpus(x) & lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & lorpus(x)))", "all x.((Vampus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lordpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.((Umpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lopus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_450", "nl": "Sam is a vumpus.", "fol": "vumpus(Sam)", "prediction": ["all x.(Sam(x) -> Vumpus(x))", "all x.(Vumpus(x) -> Sam(x))", "all x.((Sam(x) & Vumpus(x)) -> Vumpus(x))", "all x.(Vimpus(x) -> Sam(x))", "all x.(Sam(x) -> Vampire(x))", "all x.(Sam(x) -> Vumpus(x))", "all x.(Sam(x) -> Vampus(x))", "all x.(Vumpus(x) -> Sam(x))", "all x.((Sam(x) & Vampire(x)) -> Vampire(x))", "all x.((Sam(x) & Vumpus(x)) -> -Vumpus(x))", "all x.(Sam(x) -> Vulmpus(x))", "all x.(Sam(x) -> Voompus(x))", "all x.((Sam(x) & Vumpus(x)) -> Is(x,y))", "all x.((Sam(x) & Vumpus(x)) -> Vimpus(x))", "exists x.(Sam(x) & Vumpus(x))", "all x.(Vumpus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_451", "nl": "Everything that is a lorpus and a brimpus and an impus is not a jompus.", "fol": "all x. ((lorpus(x) & brimpus(x) & impus(x)) -> -jompus(x))", "prediction": ["all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & impus(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impermiss(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Issue(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperium(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperative(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jimpus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jumpus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperempt(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Is(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jimpus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jumpus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsNotJompus(x)) -> -Jompus(x))", "all x.((Lorpus(x) | Brimpus(x) | Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperva(x)) -> -Jompus(x))"]}
{"id": "prontoqa_validation_452", "nl": "Grimpuses are jompuses, lempuses, and yumpuses.", "fol": "all x. (grimpus(x) -> (jompus(x) & lempus(x) & yumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompus(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jomes(x) | Lempuses(x) | Yumpuses(x)))", "all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "(all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jumpus(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "(all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x))))", "all x.(Grimpus(x) -> (Jimpus(x) | Lempuse(x) | Yumpus(x)))", "(all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x))))"]}
{"id": "prontoqa_validation_453", "nl": "Wren is a lorpus.", "fol": "lorpus(Wren)", "prediction": ["all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Llorpus(x))", "all x.(Wren(x) -> (Lorpus(x) & LivesIn(x)))", "All x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lordpus(x))", "all x.(Wren(x) -> Lompus(x))", "all x.(Wren(x) -> (Lorpus(x) & -Lorpus(x)))", "all x.(Wren(x) -> Loompus(x))", "all x.(Wren(x) -> (Lorpus(x) & LivesIn(x,y)))", "all x y.((Wren(x) & Lorpus(y)) -> LivesIn(x,y))", "all x.(Wren(x) -> Loomis(x))", "exists x.(Wren(x) & Lorpus(x))", "all x y.((Wren(x) & Lorpus(y)) -> Is(x,y))", "all x.(Wren(x) -> (Lorpus(x) & LivesIn(x,Lorpus)))", "all x.(Wren(x) -> lorpus(x))"]}
{"id": "prontoqa_validation_454", "nl": "Every rompus is a gorpus and a dumpus and a lempus.", "fol": "all x. (rompus(x) -> (gorpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) | Dumpus(x) | Lempus(x)))", "all x.(Rompus(x) -> (IsGorpus(x) & IsDumpus(x) & IsLempus(x)))", "all x.(rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lampus(x)))", "all x.(Rompus(x) -> (Rompus(x) & Dumpus(x) & Lempus(x)))", "exists x.(Rompus(x) & Gorpus(x) & Dumpus(x) & Lempus(x))", "all x y z.((Rompus(x) & Gorpus(y) & Dumpus(z)) -> (Is(x,y) & Is(x,z)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Dumpus(y) & All z.(Lempus(z)) -> Lempus(z))))", "all x y z.((Rompus(x) & Gorpus(y) & Dumpus(z)) -> (Rompus(x) & Lempus(x)))", "all x.(Rompus(x) -> ((Gorpus(x) & Dumpus(x) & Lempus(x))))", "all x.(Rrompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Dumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "all x y z.((Rompus(x) & Gorpus(y) & Dumpus(z)) -> (Is(x,y) & Is(x,z))))"]}
{"id": "prontoqa_validation_455", "nl": "Fae is a lempus, Fae is a yumpus, and Fae is not a gorpus.", "fol": "(lempus(Fae) & yumpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpsum(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Yumpus(y)) & (Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yampus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpsum(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yampus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x))))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Yumpus(y)) & (Fae(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_validation_456", "nl": "Everything that is a wumpus, a brimpus, or a tumpus is a lorpus.", "fol": "all x. ((wumpus(x) | brimpus(x) | tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Loomis(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Loompus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumulus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorde(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lordus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Llorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lord(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lordpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lopus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lordess(x))", "all x.((Wumpus(x) | Brimpus(x) | Tompus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Loper(x))"]}
{"id": "prontoqa_validation_457", "nl": "Rex is an impus, Rex is a lempus, and Rex is not a lorpus.", "fol": "(impus(Rex) & lempus(Rex) & -lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Impossible(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Issue(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Issuel(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Impossible(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "(all x.(Rex(x) -> Issue(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "(all x.(Rex(x) -> Illegal(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Issuel(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "(all x.(Rex(x) -> Issue(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x))))", "all x y z.((Rex(x) & Impossible(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Rex(x) -> Impossible(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x))))", "all x y z.((Rex(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "all x y z.((Rex(x) & Lempus(y) & Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Rex(x) -> Impossible(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z)))", "(all x y z.(Rex(x) -> Impossible(x)) & (Rex(y) -> Lempus(y)) & (Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Impossible(x)) & (Rex(x) -> Lempus(x)) & -Lorpus(x)))", "(all x.(Rex(x) -> Issuel(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x))))"]}
{"id": "prontoqa_validation_458", "nl": "Jompuses are dumpuses.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompus(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jombuse(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Jimpus(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumuse(x))", "all x.(Jimpuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Pussuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> Has(x,y))", "all x y.((Jompuse(x) & Dumpuse(y)) -> Are(x,y))", "all x.(Jome(x) -> Dumpuse(x))", "all x.(Jimbus(x) -> Dumpuse(x))", "all x.(Jumpuse(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> -Dumpuse(x))"]}
{"id": "prontoqa_validation_459", "nl": "Wren is a brimpus and Wren is not a dumpus and Wren is a lempus.", "fol": "(brimpus(Wren) & -dumpus(Wren) & lempus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Lempus(z))))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (-Dumpus(y) & Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumpus(y)) & all z.(Wren(z) -> Lempus(z))))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(z)) -> (Brimpus(x) & Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x))))", "(all x.(Wren(x) -> Brimpus(x)) & ((Wren(x) -> -Dumpus(x))) & ((Wren(x) -> Lempus(x))))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(y)) -> (Brimpus(x) & Lempus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.((Wren(y) & -Dumpus(y))) -> Lempus(y)))", "all x y z.((Wren(x) & Brimpus(x) & Dumpus(y) & Lempus(z)) -> (Brimpus(x) & -Dumpus(y) & Lempus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumps(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumps(y))) & all z.(Wren(z) -> Lempus(z))))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x) & Lempus(x)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x)) | (-Dumpus(x) & Lempus(x))))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(z)) -> (Brimpus(x) & -Dumpus(y) & Lempus(z)))"]}
{"id": "prontoqa_validation_460", "nl": "Wren is a lorpus, Wren is not a jompus, or Wren is a brimpus.", "fol": "(lorpus(Wren) | -jompus(Wren) | brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Wren(x) -> Jompus(x)) | (-Wren(x) -> Brimpus(x))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Wren(x) -> Jompus(x)) | (-Wren(x) -> Brimpus(x))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Jompus(x) | Brimpus(x))))", "all x.((Wren(x) & Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "(all x.(Wren(x) -> Lorpus(x)) | (-Wren(x) & Jompus(x))) | (-Wren(x) & Brimpus(x))))", "all x.((Wren(x) & (Lorpus(x) | -Jompus(x) | Brimpus(x))) -> (Lorpus(x) | Brimpus(x)))", "(all x.(Wren(x) -> Lorpus(x)) | (-Wren(x) -> Jompus(x))) | (-Wren(x) -> Brimpus(x))))", "all x.((Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "all x y.((Wren(x) & Lorpus(x)) | (-Jompus(y) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Wren(x) -> Jompus(x))) | (-Wren(x) -> Brimpus(x)))", "exists x.(Wren(x) & ((Lorpus(x) & -Jompus(x)) | Brimpus(x))))", "(all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x))))", "all x.((Wren(x) & (Lorpus(x) | -Jompus(x) | Brimpus(x))) -> -Lorpus(x))", "all x.((Wren(x) & (Lorpus(x) | -Jompus(x) | Brimpus(x))) -> (Lorpus(x) | Brimpus(x))))"]}
{"id": "prontoqa_validation_461", "nl": "Everything that is an impus and a dumpus and a lorpus is a rompus and a numpus and a jompus.", "fol": "all x. ((impus(x) & dumpus(x) & lorpus(x)) -> (rompus(x) & numpus(x) & jompus(x)))", "prediction": ["all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impose(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Imposs(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Imposer(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Issue(x) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impact(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impos(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Issue(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Imposse(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impedus(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) | Numpus(x) | Jompus(x)))", "all x.((Implementation(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Immersion(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossed(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) & IsNumpus(x) & IsJompus(x)))"]}
{"id": "prontoqa_validation_462", "nl": "Rex is an impus.", "fol": "impus(Rex)", "prediction": ["all x.(Rex(x) -> Impossible(x))", "all x.(Rex(x) -> IsImpossible(x))", "all x.(Rex(x) -> Isolated(x))", "All x.(Rex(x) -> Impossible(x))", "All x.(Rex(x) -> IsImpossible(x))", "all x.(Rex(x) -> Illegal(x))", "all x.(Rex(x) -> IsImpediment(x))", "all x.(Rex(x) -> Is(x))", "all x.(Rex(x) -> Implicator(x))", "all x.(Rex(x) -> Impermant(x))", "all x.(Rex(x) -> Is(x,y))", "all x.(Rex(x) -> Imperium(x))", "all x.(Rex(x) -> Isolator(x))", "all x.(Rex(x) -> IsImprovement(x))", "All x.(Rex(x) -> Is(x))", "all x.(Rex(x) -> Is(x,Is(x)))"]}
{"id": "prontoqa_validation_463", "nl": "Rex is a dumpus.", "fol": "dumpus(Rex)", "prediction": ["all x.(Rex(x) -> Dumpus(x))", "All x.(Rex(x) -> Dumpus(x))", "Rex is a Dumpus.", "Rex is a Dumpus(x)", "all x.(Rex(x) -> Dumpus(x))", "(Dumpus(Rex))", "Rex is a dumpus.", "All x.(Rex(x) -> Dumpus(x))", "(Dumpus(Rex) & -Dumpus(Rex))", "(Dumps(Rex) & Dumpus(Rex))", "Rex is a Dumpus(rex)", "(Dumpus(Rex) & Dumpus(Rex))", "Rex is a Dumpus(Rex)", "all x.(Rex(x) -> Dumus(x))", "(Dumus(Rex) -> Dumpus(Rex))", "all x.(Rex(x) -> Puss(x))"]}
{"id": "prontoqa_validation_464", "nl": "Rex is a lorpus.", "fol": "lorpus(Rex)", "prediction": ["all x.(Rex(x) -> Lorpus(x))", "All x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Llorpus(x))", "Rex is a lorpus.", "All x.(Rex(x) -> Llorpus(x))", "all x.(Rex(x) -> Lordpus(x))", "all x.(Lorpus(x) -> Rex(x))", "(Lorpus(Rex) & LivesIn(Rex))", "all x.(Rex(x) -> Loomis(x))", "all x.(Rex(x) -> lorpus(x))", "all x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Lompus(x))", "all x.(Rex(x) -> Loompus(x))", "all x.(Rex(x) -> Thrombosis(x))", "all x.(Rex(x) -> Lopus(x))", "All x.(Rex(x) -> Lordpus(x))"]}
{"id": "prontoqa_validation_465", "nl": "Rex is a numpus.", "fol": "numpus(Rex)", "prediction": ["all x.(Rex(x) -> Numpus(x))", "All x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numpus(x))", "Rex is Numpus(x)", "(Numpus(Rex) & Numpus(Rex))", "All x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Nompus(x))", "all x.(Rex(x) -> Numus(x))", "all x.(Rex(x) -> Number(x))", "All x.(Rex(x) -> Numpus(x))", "(Numpus(Rex) & Numpus(Rex))", "all x.(Rex(x) -> Nomus(x))", "(Numpus(Rex) -> Numpus(Rex))", "Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numptus(x))"]}
{"id": "prontoqa_validation_466", "nl": "Everything that is a zumpus, a dumpus, and a tumpus is a jompus and a yumpus and a gorpus.", "fol": "all x. ((zumpus(x) & dumpus(x) & tumpus(x)) -> (jompus(x) & yumpus(x) & gorpus(x)))", "prediction": ["all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Tompus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_467", "nl": "Wren is a zumpus.", "fol": "zumpus(Wren)", "prediction": ["all x.(Wren(x) -> Zumpus(x))", "All x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "all x y.((Wren(x) & Zumpus(y)) -> Has(x,y))", "exists x.(Wren(x) & Zumpus(x))", "all x y.((Wren(x) & Zumpus(y)) -> Is(x,y))", "all x.(Wren(x) -> Zurpus(x))", "all x y.((Wren(x) & Zumpus(y)) -> Affects(x,y))", "all x.(Wren(x) -> Tompus(x))", "all x y.((Wren(x) & Zumpus(y)) -> LocatedIn(x,y))", "all x y.((Wren(x) & Zumpus(y)) -> -Tompus(x))", "ALL x.(Wren(x) -> Zumpus(x))", "all x y.((Wren(x) & Zumpus(y)) -> Becomes(x,y))", "all x y.((Wren(x) & Zumpus(y)) -> CanBe(x,y))", "All x.(Wren(x) -> Zumpus(x))", "(Zwern(Wren) & Zumpus(Wren))"]}
{"id": "prontoqa_validation_468", "nl": "Wren is a yumpus.", "fol": "yumpus(Wren)", "prediction": ["all x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpa(x))", "all x.(Wren(x) -> Yumpsum(x))", "All x.(Wren(x) -> Yampus(x))", "All x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumps(x))", "all x.(Wren(x) -> Yampus(x))", "All x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpu(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpis(x))", "all x y.((Wren(x) & Yumpus(y)) -> Is(x,y))", "all x y.((Wren(x) & Yumpus(y)) -> Has(x,y))"]}
{"id": "prontoqa_validation_469", "nl": "Everything that is a jompus and a tumpus and a dumpus is a lempus, an impus, and a wumpus.", "fol": "all x. ((jompus(x) & tumpus(x) & dumpus(x)) -> (lempus(x) & impus(x) & wumpus(x)))", "prediction": ["all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Impossible(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperator(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperempt(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Issue(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperative(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperative(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Issue(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impermiss(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Humpus(x)))", "all x.((Jompus(x) | Tumpus(x) | Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Impossible(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperium(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_470", "nl": "Alex is a jompus.", "fol": "jompus(Alex)", "prediction": ["all x.(Alex(x) -> Jompus(x))", "All x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x y.((Alex(x) & Jompus(y)) -> Is(x,y))", "all x y.((Alex(x) & Jompus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Alex(x))", "all x.((Alex(x) & Jompus(x)) -> Is(x,y))", "all x.((Alex(x) & Jompus(x)) -> Has(x,y))", "all x.(Altom(x) -> Jompus(x))", "all x.(Jimpus(x) -> Alex(x))", "all x.(Alex(x) & Jompus(x))", "all x.(Alto(x) -> Jompus(x))", "all x y.((Alex(x) & Jompus(y)) -> Jompus(x))", "all x.((Alex(x) & Jompus(x)) -> Jompus(x))"]}
{"id": "prontoqa_validation_471", "nl": "Alex is a lempus.", "fol": "lempus(Alex)", "prediction": ["all x.(Alex(x) -> Lempus(x))", "All x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "all x y.((Alex(x) & Lempus(y)) -> Lempus(x))", "all x y.((Alex(x) & Lempus(y)) -> Is(x,y))", "Alex is a lempus.", "exists x.(Alex(x) & Lempus(x))", "ALL x.(Alex(x) -> Lempus(x))", "all x y.((Alex(x) & Lempus(y)) -> (Lempus(x) & Lempus(y)))", "all x y.((Alex(x) & Lempus(y)) -> Has(x,y))", "all x y.((Alex(x) & Lempus(y)) -> (Lempus(x) & Lempus(x)))", "all x y.((Alex(x) & Lempus(y)) -> Lempus(x,y))", "all x.(Alex(x) -> Leopard(x))", "all x.(Alex(x) & Lempus(x))", "all x y.((Alex(x) & Lempus(y)) -> LivesIn(x,y))", "all x.(Alex(x) -> Lampus(x))"]}
{"id": "prontoqa_validation_472", "nl": "Everything that is a brimpus or a tumpus or an impus is a vumpus and a yumpus and a dumpus.", "fol": "all x. ((brimpus(x) | tumpus(x) | impus(x)) -> (vumpus(x) & yumpus(x) & dumpus(x)))", "prediction": ["all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yampus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsImpossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsImpossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_473", "nl": "Dumpuses are numpuses.", "fol": "all x. (dumpus(x) -> numpus(x))", "prediction": ["all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x y.((Dumpuse(x) & Numpus(y)) -> Is(x,y))", "all x y.((Dumpuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpuse(x))", "all x y.((Dumpuse(x) & Numpus(y)) -> Numpus(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dupus(x) -> Numpus(x))", "all x.((Dumpuse(x) & Numpus(x)) -> Numpuse(x))", "all x.((Dumpuse(x) & Numpus(x)) -> Is(x,y))", "all x y.((Dumpuse(x) & Numpus(y)) -> Numpuse(x,y))", "all x.(Dumpuse(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_474", "nl": "Polly is an impus and Polly is not a numpus and Polly is a yumpus.", "fol": "(impus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & all y.(Polly(y) -> -Numpus(y))) & all z.(Polly(z) -> Yumpus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))", "all x y.((Polly(x) & Polly(y)) -> (Impossible(x) & -Numpus(y) & Yumpus(y)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Nompus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))", "(all x.(Polly(x) -> Impossible(x)) & all y.(Polly(y) -> -Numpus(y))) & all z.(Polly(z) -> Yumpus(z))))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))", "all x y.((Polly(x) & Polly(y)) -> (Impossible(x) & -Numpus(y) & Yampus(y)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x))))"]}
{"id": "prontoqa_validation_475", "nl": "Polly is a jompus or Polly is a rompus or Polly is not a dumpus.", "fol": "(jompus(Polly) | rompus(Polly) | -dumpus(Polly))", "prediction": ["all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x.((Poly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "(all x.(Polly(x) -> Jompus(x)) | (Polly(x) -> Rompus(x)) | (Polly(x) -> -Dumpus(x))))", "all x.((Polly(x) & (Jimpus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x.((Ploy(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x) | -Dumpus(x))))", "all x.((Polly(x) & (Jompus(x) | Rompus(x)) | -Dumpus(x))) -> Polly(x))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x)) | -Dumpus(x)))", "(all x.(Polly(x) -> (Jompus(x) | Rompus(x) | -Dumpus(x))))", "all x y.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(y))) -> Polly(x))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x) | -Dumpus(x))))", "(all x.(Polly(x) -> (Jompus(x) | Rompus(x)) | -Dumpus(x)))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x)) | -Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) | (Polly(x) -> Rompus(x)) | (Polly(x) -> -Dumpus(x))))"]}
{"id": "prontoqa_validation_476", "nl": "Sam is not an impus, Sam is a brimpus, and Sam is a shumpus.", "fol": "(-impus(Sam) & brimpus(Sam) & shumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> Humpus(z))))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) & Brimpus(y) & Humpus(z)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) & Brimpus(y) & Shumpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & ((Sam(x) & Brimpus(x)) | (Sam(x) & Humpus(x)))))", "(all x.(Sam(x) -> -Issue(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> -Impossible(z))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> -Impossible(y))) & all z.(Shumpus(z) -> -Impossible(z))))", "(all x.(Sam(x) -> -Impossible(x)) & (Brimpus(x) | Humpus(x))))", "(all x.(Sam(x) -> -Issue(x)) & ((Sam(x) & Brimpus(x)) | (Sam(x) & Humpus(x)))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> -Impossible(y))) & all z.(Shumpus(z) -> (Sam(z) & -Impossible(z))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Sam(y) -> Brimpus(y)) & all z.(Sam(z) -> Humpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Sam(y) -> Brimpus(y))) & all z.(Sam(z) -> Humpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> -Impossible(y))) & all z.(Shumpus(z) -> (Sam(z) & -Impossible(z)))))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Sam(y) -> Brimpus(y))) & all z.(Sam(z) -> Humpus(z))))"]}
{"id": "prontoqa_validation_477", "nl": "Sam is not a tumpus or Sam is a wumpus or Sam is a grimpus.", "fol": "(-tumpus(Sam) | wumpus(Sam) | grimpus(Sam))", "prediction": ["all x.((Sam(x) & -Tumpus(x)) | (Sam(x) & Wumpus(x)) | (Sam(x) & Grimpus(x))))", "all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "(all x.(Sam(x) -> -Tumpus(x)) | (Sam(x) -> Wumpus(x)) | (Sam(x) -> Grimpus(x))))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x))))", "(exists x.(Sam(x) & -Tumpus(x)) | exists y.(Sam(y) & Wumpus(y))) | exists z.(Sam(z) & Grimpus(z))))", "((Sam(Sam) & -Tumpus(Sam)) | (Sam(Sam) & Wumpus(Sam)) | (Sam(Sam) & Grimpus(Sam))))", "all x.((Sam(x) & (-Tumpus(x) | Wumpus(x) | Grimpus(x))) -> -Tumpus(x))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x)))))", "all x.((Sam(x) & -Tumpus(x)) | (-Tumpus(x) | Wumpus(x) | Grimpus(x))))", "all x.((Sam(x) & -Tumpus(x)) | (Sam(x) & Wumpus(x)) | (Sam(x) & Gruppus(x))))", "all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.((Sam(x) & -Tumpus(x)) | (Sam(x) -> Wumpus(x)) | (Sam(x) -> Grimpus(x))))", "(all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x))))", "(exists x.(Sam(x) & -Tumpus(x)) | exists y.(Sam(y) & Wumpus(y)) | exists z.(Sam(z) & Grimpus(z)))))", "all x y.((Sam(x) & (-Tumpus(x) | Wumpus(x) | Grimpus(y))) -> -Tumpus(x))", "(exists x.(Sam(x) & -Tumpus(x)) | exists y.(Sam(y) & Wumpus(y))) | exists z.(Sam(z) & Gruppus(z))))"]}
{"id": "prontoqa_validation_478", "nl": "Everything that is a lorpus, a jompus, or a yumpus is a zumpus.", "fol": "all x. ((lorpus(x) | jompus(x) | yumpus(x)) -> zumpus(x))", "prediction": ["all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yampus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yuppus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yukpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumppus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yompus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yupus(x)) -> Zumpus(x))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zurpus(x))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpsum(x)) -> Zumpus(x))", "all x.((Larpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_validation_479", "nl": "Sally is a dumpus and a yumpus and a grimpus.", "fol": "(dumpus(Sally) & yumpus(Sally) & grimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yampus(x) & Grimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (Yumpus(x) | Grimpus(x))))", "(exists x.(Sally(x) & Dumpus(x)) & exists y.(Yumpus(y) & Grimpus(y))))", "(exists x.(Sally(x) & Dumpus(x)) & exists yumpus(y) & exists z.(Grimpus(z) & Grimpus(z))))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "(All x.(Sally(x) -> Dumpus(x)) & (Yumpus(x) | Grimpus(x))))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Yumpus(y) & All z.(Grimpus(z)) -> Grimpus(z))))", "all x.(Sally(x) -> (Dumpus(x) & Yampus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yompus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dupus(x) & Yumpus(x) & Grimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Yumpus(y) & all z.(Grimpus(z)) -> Grimpus(z))))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Yumpus(y) & All z.(Grimpus(z))) -> Grimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Yumpus(y) & All z.(Grimpus(z))) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_480", "nl": "Sally is a zumpus.", "fol": "zumpus(Sally)", "prediction": ["all x.(Sally(x) -> Zumpus(x))", "Sally is a zumpus.", "All x.(Sally(x) -> Zumpus(x))", "Sally is zumpus.", "exists x.(Sally(x) & Zumpus(x))", "all x.((Sally(x) & Zumpus(x)) -> Is(x,y))", "all x.((Sally(x) & Zumpus(x)) -> Has(x,y))", "all x.((Sally(x) & Zumpus(x)) -> -Tompus(x))", "Sally is zumpus(Sally)", "all x.(Sally(x) -> Zumpus(x))", "all x.((Sally(x) & Zumpus(x)) -> HasTompus(x))", "all x.((Sally(x) & Zumpus(x)) -> Sally(x))", "all x.((Sally(x) & Zumpus(x)) -> HasSally(x))", "all x.((Sally(x) & Zumpus(x)) -> Affiliate(x))", "all x.((Sally(x) & Zumpus(x)) -> Has(x,Sally))", "all x.((Sally(x) & Zumpus(x)) -> Is(x,Sally))"]}
{"id": "prontoqa_validation_481", "nl": "Yumpuses are numpuses.", "fol": "all x. (yumpus(x) -> numpus(x))", "prediction": ["all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpuse(x))", "all x.(Umpus(x) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x.(Umpus(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x,y))", "all x y.((Yumpuse(x) & Numpus(y)) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x))", "all x.((Yumpus(x) & Numpus(x)) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpuse(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Is(x,y))", "all x y.((Yumpuse(x) & Numpus(y)) -> Numpus(x,y))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x,y))"]}
{"id": "prontoqa_validation_482", "nl": "Alex is a lempus and a yumpus and a lorpus.", "fol": "(lempus(Alex) & yumpus(Alex) & lorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yampus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) | Yumpus(x) | Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) | Lorpus(x))))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z)) -> Lempus(x))) & all w.(Yumpus(w) -> Lorpus(w)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z)) -> Lempus(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z)) -> Lorpus(z))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z) -> Lorpus(z))))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z)) -> Lempus(x))) & all w.(Lorpus(w) -> Lorpus(w)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z))) -> Lempus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yompus(x) & Lorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Yumpus(z)) -> (Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) | Yumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_validation_483", "nl": "Alex is a yumpus, a numpus, or an impus.", "fol": "(yumpus(Alex) | numpus(Alex) | impus(Alex))", "prediction": ["all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Issue(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermissible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperative(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impeccable(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermant(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperium(x)))", "all x.(Alex(x) -> (yumpus(x) | numpus(x) | impus(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | impus(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Implicator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperempt(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperemptor(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Isolator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Nompus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))"]}
{"id": "prontoqa_validation_484", "nl": "Everything that is a lorpus, a grimpus, or a yumpus is a lempus and a rompus and a wumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | yumpus(x)) -> (lempus(x) & rompus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yuppus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yaumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yompus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yukpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumppus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_485", "nl": "Polly is a grimpus.", "fol": "grimpus(Polly)", "prediction": ["all x.(Polly(x) -> Grimpus(x))", "All x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "exists x.(Polly(x) & Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grumpus(x))", "all x.(Polly(x) -> Grimpus(x))", "all x.((Polly(x) & Grimpus(x)) -> Polly(x))", "all x.(Polly(x) -> Gruppus(x))", "all x.(Poly(x) -> Grimpus(x))", "all x.(Polly(x) -> Grimpus(x))", "all x.((Polly(x) & Grimpus(x)) -> Is(x,y))", "(Grimpus(Polly))", "all x.(Polly(x) -> Grappa(x))", "all x.(Polly(x) -> Gruffus(x))", "all x.((Polly(x) & Grimpus(x)) -> Scarlett(x))"]}
{"id": "prontoqa_validation_486", "nl": "Dumpuses are lorpuses.", "fol": "all x. (dumpus(x) -> lorpus(x))", "prediction": ["all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpuse(x))", "all x.(Dumpuse(x) -> Loomis(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Loomise(x))", "all x.(Dumpus(x) -> Lorpuse(x))", "all x.(Dumpuse(x) -> Loompus(x))", "all x.(Dumpuse(x) -> Llorpuse(x))", "all x.(Dumpuse(x) -> Lordpuse(x))", "all x.(Dumpuse(x) -> Lopuse(x))", "all x.(Dumpuse(x) -> Lorpe(x))", "all x.(Dumpuse(x) -> (Lorpuse(x) & LivesIn(x)))", "all x.(Dumpus(x) -> Lorpuse(x))", "all x.(Dumpuse(x) -> Lompus(x))", "all x y.((Dumpuse(x) & Lorpus(y)) -> Is(x,y))"]}
{"id": "prontoqa_validation_487", "nl": "Rex is a shumpus and a vumpus and a dumpus.", "fol": "(shumpus(Rex) & vumpus(Rex) & dumpus(Rex))", "prediction": ["all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vampus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) -> Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vimpus(y) -> Dumpus(y)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) & Dumpus(y)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "all x.(Rex(x) -> (Shumpus(x) | Vumpus(x) | Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) & Dumpus(y))))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vampus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vulmpus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Voompus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) | Dumpus(x))))"]}
{"id": "prontoqa_validation_488", "nl": "Rex is a yumpus, a tumpus, or a lorpus.", "fol": "(yumpus(Rex) | tumpus(Rex) | lorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lordpus(x)))", "all x.(Rex(x) -> (yumpus(x) | tumpus(x) | lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumulus(x) | Lorpus(x)))", "all x y.((Rex(x) & (Yumpus(x) | Tumpus(x) | Lorpus(x))) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "exists x.(Rex(x) & (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x y.((Rex(x) & (Yumpus(y) | Tumpus(y) | Lorpus(y))) -> (Yumpus(x) | Tumpus(y) | Lorpus(y)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Loomis(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | lorpus(x)))", "all x y.((Rex(x) & (Yumpus(y) | Tumpus(y) | Lorpus(y))) -> (Yumpus(y) | Tumpus(y) | Lorpus(y)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lopus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Loperpus(x)))", "(Yumpus(Rex) | Tumpus(Rex) | Lorpus(Rex)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lark(x)))"]}
{"id": "prontoqa_validation_489", "nl": "Everything that is a wumpus or a grimpus or a brimpus is a vumpus, an impus, and a sterpus.", "fol": "all x. ((wumpus(x) | grimpus(x) | brimpus(x)) -> (vumpus(x) & impus(x) & sterpus(x)))", "prediction": ["all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperator(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Umpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperator(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impermiss(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperative(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) | Impossible(x) | Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issuel(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vimpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperium(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Steroid(x)))"]}
{"id": "prontoqa_validation_490", "nl": "Rex is a wumpus.", "fol": "wumpus(Rex)", "prediction": ["all x.(Rex(x) -> Wumpus(x))", "All x.(Rex(x) -> Wumpus(x))", "Rex is a wumpus.", "all x.(Wumpus(x) -> Rex(x))", "all x.(Rex(x) -> Wampus(x))", "all x.(Rex(x) -> Wompus(x))", "(Wumpus(Rex))", "All x.(Wumpus(x) -> Rex(x))", "All x.(Rex(x) -> Wampus(x))", "all x.(Wumpus(x) -> Rex(x))", "Rex is a Wumpus.", "(Wumpus(Rex) & -Wumpus(Rex))", "all x.(Rex(x) -> Wumpus(x))", "all x.(Rex(x) -> Wempus(x))", "all x.(Rex(x) -> Wumpus(x))", "(Wumpus(Rex) & HasWumpus(Rex))"]}
{"id": "prontoqa_validation_491", "nl": "Rex is a vumpus.", "fol": "vumpus(Rex)", "prediction": ["all x.(Rex(x) -> Vumpus(x))", "All x.(Rex(x) -> Vumpus(x))", "all x.(Rex(x) -> Vampire(x))", "Rex is a Vumpus.", "all x.(Rex(x) -> Vulmpus(x))", "all x.(Rex(x) -> Vampus(x))", "all x.(Rex(x) -> Voompus(x))", "all x.(Rex(x) -> Vumpus(x))", "All x.(Rex(x) -> Vulmpus(x))", "All x.(Rex(x) -> Vampire(x))", "All x.(Rex(x) -> Vampus(x))", "Rex is a vumpus.", "Rex is a Vumpus(x)", "all x.(Rex(x) -> Vumpus(x))", "All x.(Rex(x) -> Voompus(x))", "All x.(Rex(x) -> Vumpus(x))"]}
{"id": "prontoqa_validation_492", "nl": "Grimpuses are yumpuses, rompuses, and lorpuses.", "fol": "all x. (grimpus(x) -> (yumpus(x) & rompus(x) & lorpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpuses(x) | Rompuses(x) | Lorpuses(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lopus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpuse(x) | Rompuse(x) | Lorpuse(x)))", "all x.(Grimpuse(x) -> (Yumpuse(x) | Rompuse(x) | Lorpuse(x)))", "all x.(Grimpus(x) -> (Yumpus(x) & Rompus(x) & Lorpus(x)))", "(all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lordpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpuse(x)))", "all x.(Grimppuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "(all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "(all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x))))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lopus(x)))"]}
{"id": "prontoqa_validation_493", "nl": "Numpuses are not yumpuses.", "fol": "all x. (numpus(x) -> -yumpus(x))", "prediction": ["all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.((Numpus(x) & -Yumpus(x)) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpuse(x))", "(all x.(Numpus(x) -> -Yumpus(x)))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpuse(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "(all x.(Numpuse(x) -> -Yumpus(x)))", "all x.(Numpus(x) -> -yumpus(x))", "all x.(Numpe(x) -> -Yumpus(x))", "All x.(Numpus(x) -> -Yumpus(x))", "all x.(Nimbus(x) -> -Yumpus(x))", "all x.(Numpu(x) -> -Yumpus(x))"]}
{"id": "prontoqa_validation_494", "nl": "Alex is a numpus and a rompus and a sterpus.", "fol": "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Number(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numerus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Nompus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (numpus(x) | rompus(x) | sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) | Rompus(x) | Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & -Sterpus(y))))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & All z.(Sterepus(z))) -> Sterpus(z)))", "all x.(Alex(x) -> (Numpus(x) | Rompus(x) | Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & (Rompus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & all z.(Sterpus(z)) -> Sterpus(z))))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & all z.(Sterepus(z)) -> Sterpus(z))))", "(all x.(Alex(x) -> Numpus(x)) & (Rompus(x) | Sterpus(x))))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & All z.(Sterpus(z))) -> Sterpus(z)))"]}
{"id": "prontoqa_validation_495", "nl": "Alex is not a grimpus.", "fol": "-grimpus(Alex)", "prediction": ["all x.(Alex(x) -> -Grimpus(x))", "All x.(Alex(x) -> -Grimpus(x))", "all x.(Alex(x) & -Grimpus(x))", "all x.(Alex(x) -> -Gruppus(x))", "all x.(Alex(x) -> -Grimpus(x))", "all x.(Alex(x) -> -Grimppus(x))", "all x.(Alex(x) -> -Grippus(x))", "all x.(Alex(x) -> -Grampus(x))", "all x.(Alex(x) -> -Grimpus(x))", "all x.(Alex(x) -> -Grimpus(x))", "Alex is notGrimpus(Alex)", "all x.(Alex(x) -> -Grisp(x))", "all x.(Alex(x) -> NoGrimpus(x))", "(-Grimpus(Alex))", "all x.(Alex(x) -> -Smoothpus(x))", "all x.(Alex(x) -> -Gripper(x))"]}
{"id": "prontoqa_validation_496", "nl": "Everything that is a dumpus or a wumpus or a numpus is a jompus, a tumpus, and a zumpus.", "fol": "all x. ((dumpus(x) | wumpus(x) | numpus(x)) -> (jompus(x) & tumpus(x) & zumpus(x)))", "prediction": ["all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpsus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpsus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumps(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumps(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_validation_497", "nl": "Alex is a zumpus.", "fol": "zumpus(Alex)", "prediction": ["all x.(Alex(x) -> Zumpus(x))", "All x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "all x.(Alex(x) -> Zumpus(x))", "ALL x.(Alex(x) -> Zumpus(x))", "exists x.(Alex(x) & Zumpus(x))", "all x.(Alex(x) -> Zurpus(x))", "all x.(Alexa(x) -> Zumpus(x))", "all x.(Tompus(x) -> Alex(x))", "Alex is a zumpus.", "all x.(Alex(x) & Zumpus(x))", "all x.(Alex(x) -> Tompus(x))", "all x.(Altom(x) -> Zumpus(x))", "All x.(Alex(x) -> Zumpus(x))", "Alex is zumpus(Alex)", "all x.(Alex(x) -> zumpus(x))"]}
{"id": "prontoqa_validation_498", "nl": "Everything that is a grimpus, a zumpus, and a numpus is a wumpus.", "fol": "all x. ((grimpus(x) & zumpus(x) & numpus(x)) -> wumpus(x))", "prediction": ["all x.((Element(x) & Grimpus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Gruppus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Grimpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Grampus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Smoothpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Rumpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Fragpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.(((Grimpus(x) | Zumpus(x) | Numpus(x))) -> Wumpus(x))", "all x.((Murph(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Gruppus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Crupid(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Frostpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Grampus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Fragus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Smokey(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Element(x) & Grimpus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_validation_499", "nl": "Stella is a grimpus.", "fol": "grimpus(Stella)", "prediction": ["all x.(Stella(x) -> Grimpus(x))", "Stella is a Grimpus.", "All x.(Stella(x) -> Grimpus(x))", "exists x.(Stella(x) & Grimpus(x))", "all x.(Stella(x) -> Gruppus(x))", "all x.(Stella(x) -> Grumpus(x))", "all x.(Stella(x) -> Gruffus(x))", "all x.(Stella(x) -> Grimpus(x))", "all x.(Stella(x) -> Grappa(x))", "all x.(Stella(x) -> Grupus(x))", "all x.(Stella(x) -> Grappus(x))", "all x.(Stella(x) -> Grapple(x))", "(Grimpus(Stella))", "all x.(Stella(x) -> Grypus(x))", "Stella is a Grimpus(Stella)", "(Grimpus(Stella) & Grimpus(Stella))"]}
{"id": "prontoqa_validation_500", "nl": "Stella is a wumpus or a jompus or a rompus.", "fol": "(wumpus(Stella) | jompus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> ((Wumpus(x) | Jompus(x) | Rompus(x))))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "exists x.(Stella(x) & (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.((Stella(x) & (Wumpus(x) | Jompus(x) | Rompus(x))) -> Wumpus(x))", "(all x.(Stella(x) -> Wumpus(x)) | (Jompus(x) | Rompus(x))))", "(all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x))))", "all x.(Wumpus(x) | Jompus(x) | Rompus(x))", "exists x.(Stella(x) & ((Wumpus(x) | Jompus(x) | Rompus(x))))", "all x.((Wumpus(x) | Jompus(x) | Rompus(x)) -> Stella(x))", "all x y.((Stella(x) & Wumpus(y)) | (Jompus(x) | Rompus(x))))", "all x.((Stella(x) & (Wumpus(x) | Jompus(x) | Rompus(x))) -> Stella(x))", "all x y.((Stella(x) & Wumpus(y)) | (Jompus(y) | Rompus(y))))", "(all x.(Stella(x) -> Wumpus(x)) | (Jumpus(x) | Rompus(x))))", "all x.((Stella(x) & (Wumpus(x) | Jompus(x) | Rompus(x))) -> Wampus(x))"]}
{"id": "prontoqa_validation_501", "nl": "Everything that is a brimpus and a lempus and a shumpus is a wumpus, a vumpus, and a grimpus.", "fol": "all x. ((brimpus(x) & lempus(x) & shumpus(x)) -> (wumpus(x) & vumpus(x) & grimpus(x)))", "prediction": ["all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Shumpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vampus(x) & Grimpus(x)))", "all x.((Brumpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Shumpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Voompus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brumpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vubis(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Voompus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Gruppus(x)))"]}
{"id": "prontoqa_validation_502", "nl": "Fae is a lempus.", "fol": "lempus(Fae)", "prediction": ["all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "exists x.(Fae(x) & Lempus(x))", "All x.(Fae(x) -> Lempus(x))", "all x y.((Fae(x) & Lempus(y)) -> Lempus(x))", "all x y.((Fae(x) & Lempus(y)) -> Is(x,y))", "all x.(Fae(x) -> (Lempus(x) & Lempus(x)))", "(Lempus(Fae) & Lempus(Fae))", "(Limpus(Fae) & Lempus(Fae))", "all x.(Fae(x) -> (Lempus(x) & -Lempus(x)))", "(Lempus(Fae) -> Lempus(Fae))", "all x y.((Fae(x) & Lempus(y)) -> Lempus(x,y))", "all x.(Fae(x) -> Leopard(x))", "(Lempus(Fae) -> Lempus(Fae))", "all x y.((Fae(x) & Lempus(y)) -> LivesIn(x,y))", "all x.(Fae(x) -> Lampus(x))"]}
{"id": "prontoqa_validation_503", "nl": "Each gorpus is not a rompus.", "fol": "all x. (gorpus(x) -> -rompus(x))", "prediction": ["all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Rompus(x) -> -Rompus(x))", "exists x.(Gorpus(x) & -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rrompus(x))", "all x.(Gorpus(x) -> -rompus(x))", "all x.(Gorpus(x) -> -Rome(x))", "all x y.((Gorpus(x) & Rompus(y)) -> -Rompus(x,y))", "all x.(Rompus(x) -> -Rompus(x))", "exists x.(Gorpus(x) & -rompus(x))", "all x.(GORpus(x) -> -Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> -rompus(x))", "all x.(Corpus(x) -> -Rompus(x))"]}
{"id": "prontoqa_validation_504", "nl": "Every yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vulmpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Voompus(x))", "all x.(Yumpus(x) -> Vampire(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vubis(x))", "all x.(Yumpus(x) -> vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Tumpus(x))", "all x.(Yumpus(x) -> Kumpus(x))", "all x.(Yumpus(x) -> Vuxpus(x))", "all x.(Yumpus(x) -> Vukpus(x))", "all x.(Yumpus(x) -> Vimpus(x))", "all x.(Yumpus(x) -> Vuze(x))"]}
{"id": "prontoqa_validation_505", "nl": "Sam is a gorpus and a wumpus and a brimpus.", "fol": "(gorpus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) | Brimpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wampus(x) & Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) & Wompus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(z) & Brimpus(z)))", "all x.(Sam(x) -> (Gorpus(x) & Humpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(z) & Brimpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) | Brimpus(x))))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Wumpus(y) & -Brimpus(y))))", "all x y z.((Sam(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(y) & Brimpus(z)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_506", "nl": "Everything that is a rompus, a grimpus, and a lorpus is an impus and a sterpus and a dumpus.", "fol": "all x. ((rompus(x) & grimpus(x) & lorpus(x)) -> (impus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Sterpus(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impose(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Imposible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Imposable(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Sterpus(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Sterpus(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impose(x) & Impossible(x) & Impossible(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Imposses(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x))))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Issue(x) & Dupus(x)))"]}
{"id": "prontoqa_validation_507", "nl": "Polly is a sterpus.", "fol": "sterpus(Polly)", "prediction": ["all x.(Polly(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Polly(x))", "all x.((Polly(x) & Sterpus(x)) -> Sterpus(x))", "All x.(Polly(x) -> Sterpus(x))", "all x.(Polly(x) -> Sterpus(x))", "all x.(Poly(x) -> Sterpus(x))", "all x.((Polly(x) & Sterpus(x)) -> Polly(x))", "all x.(Polly(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Polly(x))", "all x.(Sterepus(x) -> Polly(x))", "all x.((Polly(x) & Sterpus(x)) -> Is(x,y))", "all x.(Polly(x) -> Sterepus(x))", "all x.(Polly(x) -> Sterpus(x))", "all x.((Polly(x) & Sterpus(x)) -> Has(x,y))", "(Sterpus(Polly) & Sterpus(Poly))", "all x.((Polly(x) & Sterpus(x)) -> Sterepus(x))"]}
{"id": "prontoqa_validation_508", "nl": "Each grimpus is a shumpus.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x.(Grampus(x) -> Shumpus(x))", "all x.(Grampus(x) -> Humpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "exists x.(Grimpus(x) & Shumpus(x))", "all x.(Gruppus(x) -> Shumpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Scumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> shumpus(x))", "exists x.(Grimpus(x) & Humpus(x))", "all x.(Gruppus(x) -> Humpus(x))", "all x.(Smoothpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Stumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))"]}
{"id": "prontoqa_validation_509", "nl": "Impuses are sterpuses, yumpuses, and lorpuses.", "fol": "all x. (impus(x) -> (sterpus(x) & yumpus(x) & lorpus(x)))", "prediction": ["all x.(Impuse(x) -> (Sterpuse(x) | Yampuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Impuse(y) -> Yampuse(y)) & all z.(Impuse(z) -> Lorpuse(z))))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impus(x) -> (Sterpuse(x) | Yampuse(x) | Lorpuse(x)))", "all x.(Impus(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yampuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impus(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Impuse(y) -> Yumpuse(y)) & all z.(Impuse(z) -> Lorpuse(z))))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Impuse(y) -> Yumpe(y)) & all z.(Impuse(z) -> Lorpuse(z))))", "all x.(Impuse(x) -> (Sterpuses(x) | Yumpeses(x) | Lorpuses(x)))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Impuse(y) -> Yumpuse(y)) & all z.(Impuse(z) -> Lorpuse(z))))"]}
{"id": "prontoqa_validation_510", "nl": "Shumpuses are not sterpuses.", "fol": "all x. (shumpus(x) -> -sterpus(x))", "prediction": ["all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Sterpus(x))", "all x.(Shuppe(x) -> -Sterpuse(x))", "all x.(Shuppus(x) -> -Sterpuse(x))", "all x.(Shuppuse(x) -> -Sterpuse(x))", "all x.(Shumpuse(x) -> -Sterpuse(x))", "all x.(Shupus(x) -> -Sterpuse(x))", "all x.(Shampus(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Shumpuse(x) -> -Sterpuse(x))", "all x.(Shampoo(x) -> -Sterpuse(x))", "all x.(Shutus(x) -> -Sterpuse(x))", "all x.(Shimpus(x) -> -Sterpuse(x))", "all x.(Shuppus(x) -> -Sterpus(x))", "all x.(Shampus(x) -> -Sterpus(x))"]}
{"id": "prontoqa_validation_511", "nl": "Every wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Steroid(x))", "all x.(Wumpus(x) -> Steerpus(x))", "all x.(Wumpus(x) -> Sterus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Is(x,y))", "all x.((Wumpus(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Wumpus(x) -> sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Sterotus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Contains(x,y))", "all x.((Wumpus(x) & Sterpus(x)) -> HasSterpus(x))"]}
{"id": "prontoqa_validation_512", "nl": "Every tumpus is a wumpus.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wompus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Wempus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Is(x,y))", "exists x.(Tumpus(x) & Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Wasp(x))", "all x.(Tumpus(x) -> Wormpus(x))", "all x.(Tumpus(x) -> Hush(x))", "all x.(Tumpus(x) -> Husk(x))", "all x.(Tumpus(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Plumpus(x))"]}
{"id": "prontoqa_validation_513", "nl": "Sam is a shumpus, Sam is not a sterpus, and Sam is an impus.", "fol": "(shumpus(Sam) & -sterpus(Sam) & impus(Sam))", "prediction": ["(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Impossible(x) -> Sam(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Illegal(x) -> Sam(x)))", "all x y z.((Shumpus(x) & Sterpus(y) & Imperator(z)) -> (Shumpus(x) & -Sterpus(y) & Imperator(z)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Impossible(z) -> Sam(z)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Illegal(z) -> Sam(z)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperator(x)))", "(all x.(Sam(x) -> Shumpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperator(x)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Sterpus(x) & Impossible(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> -Sterpus(y))) & all z.(Impossible(z) -> Sam(z)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Issue(z) -> Sam(z)))", "(all x.(Shumpus(x) -> Shumpus(x)) & all y.(Sterpus(y) -> -Sterpus(y))) & all z.(Impossible(z) -> Shumpus(z)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Sterpus(x) & Impossible(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Impossible(z) -> Sam(z))))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Illegal(z) -> Sam(z))))", "(all x.(Shumpus(x) -> Shumpus(x)) & all y.(Sterpus(y) -> -Sterpus(y))) & all z.(Issue(z) -> Issue(z)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Sterpus(x) & Issue(x)))"]}
{"id": "prontoqa_validation_514", "nl": "Zumpuses are gorpuses, yumpuses, and brimpuses.", "fol": "all x. (zumpus(x) -> (gorpus(x) & yumpus(x) & brimpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpus(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yampuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpuses(x) | Yumpuses(x) | Brimpuses(x)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))"]}
{"id": "prontoqa_validation_515", "nl": "Wren is a yumpus, an impus, or a brimpus.", "fol": "(yumpus(Wren) | impus(Wren) | brimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Issue(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperator(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperempt(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impermiss(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impeccable(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperium(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (yumpus(x) | impus(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperman(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impermant(x) | Brimpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperva(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impermissible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperia(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_516", "nl": "Every impus is a lempus and a rompus and a gorpus.", "fol": "all x. (impus(x) -> (lempus(x) & rompus(x) & gorpus(x)))", "prediction": ["all x.(Issue(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impossible(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impos(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impose(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z)) -> (Issue(x,y) & Issue(x,z) & Issue(x,y) & Issue(x,z)))", "all x.(Implementation(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z)) -> (Issue(x,y) & Issue(x,z) & Issue(x,z)))", "all x.(Issue(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z)) -> (Issue(x,y) & Issue(x,z) & Issue(x,z) & Issue(x,z)))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z)) -> (Issue(x,y) & Issue(x,z) & Issue(x,z) & Issue(x,y) & Issue(x,z)))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z)) -> (Issue(x,y) & Issue(x,z) & Issue(x,y) & Issue(x,y) & Issue(x,z)))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z)) -> (Issue(x,y) & Issue(x,z) & Issue(x,y) & Issue(x,z) & Issue(x,z)))", "all x.(Imposer(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_517", "nl": "Sally is a yumpus and Sally is a sterpus and Sally is not a lempus.", "fol": "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "prediction": ["(all x.(Sally(x) -> Yampus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) & Sterpus(y) & -Lempus(z)))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Lempus(x)))", "(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(all x.(Sally(x) -> Yampus(x)) & all y.(Sally(y) -> Sterepus(y)) & all z.(Sally(z) -> -Lempus(z))))", "all x.(Sally(x) -> (Yumpus(x) & Sterpus(x) & -Lempus(x)))", "all x y z.((Sally(x) & Yumpus(y) & Sterpus(z)) -> (Yumpus(x) & Sterpus(x) & -Lempus(x)))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Lempus(x))))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) & Sterpus(y) & -Yumpus(z)))", "(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Lempus(x)))", "(all x.(Yumpus(x) -> Sally(x)) & (Sterpus(x) -> Sally(x)) & -Lempus(x)))", "(all x.(Yumpus(x) -> Sally(x)) & all y.(Sterpus(y) -> Sally(y))) & all z.(Lempus(z) -> -Sally(z))))", "all x y z.((Sally(x) & Yumpus(y) & Sterpus(z)) -> (Yumpus(x) & Sterpus(y) & -Lempus(z)))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Sterpus(x)) & -Lempus(x)))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) | Sterpus(y) & -Lempus(z)))"]}
{"id": "prontoqa_validation_518", "nl": "Sally is not an impus.", "fol": "-impus(Sally)", "prediction": ["Sally -Impossible(Sally)", "all x.(Sally(x) -> -Impossible(x))", "All x.(Sally(x) -> -Impossible(x))", "Sally & -Impossible(Sally)", "Sally -Is(Sally) & -Impossible(Sally))", "all x.(Sally(x) -> -Issue(x))", "Sally -Is(Sally) & -Is(Sally))", "All x.(Sally(x) -> -Issue(x))", "all x.(Sally(x) -> -Imposer(x))", "Sally -Is(Sally) -> -Impossible(Sally))", "Sally is not a impus.", "All x.(Sally(x) -> -Imposer(x))", "all x.(Sally(x) -> -Illegal(x))", "-Impossible(Sally)", "All x.(Sally(x) -> -Illegal(x))", "all x.(Sally(x) -> -Ispose(x))"]}
{"id": "prontoqa_validation_519", "nl": "Each sterpus is a dumpus and a tumpus and a lempus.", "fol": "all x. (sterpus(x) -> (dumpus(x) & tumpus(x) & lempus(x)))", "prediction": ["all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (IsDumpus(x) & IsTumpus(x) & IsLempus(x)))", "all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (HasDumpus(x) & HasTumpus(x) & HasLempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "all x.(Sterpus(x) -> (Dupus(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterepus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "exists x.(Sterpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))", "all x.(Steerpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x y.((Sterpus(x) & Dumpus(y)) -> (Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> ((Dumpus(x) & Tumpus(x) & Lempus(x))))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z))) -> Lempus(z)))", "(all x.(Sterpus(x) -> Dumpus(x)) & (Tumpus(x) | Lempus(x))))"]}
{"id": "prontoqa_validation_520", "nl": "Sally is a sterpus.", "fol": "sterpus(Sally)", "prediction": ["all x.(Sally(x) -> Sterpus(x))", "All x.(Sally(x) -> Sterpus(x))", "all x.((Sally(x) & Sterpus(x)) -> Sterpus(x))", "Sally is a Sterpus.", "all x.(Sally(x) -> Sterepus(x))", "Sally is Sterpus.", "exists x.(Sally(x) & Sterpus(x))", "all x.(Sally(x) -> Steroid(x))", "all x.(Sally(x) -> Sterpus(x))", "Sally is sterpus.", "Sally is a sterpus.", "All x.(Sally(x) -> Sterepus(x))", "all x.(Sally(x) -> Sterus(x))", "all x.(Sterepus(x) -> Sally(x))", "all x.(Sally(x) -> Sterpus(x))", "all x.((Sally(x) & Sterpus(x)) -> Steroid(x))"]}
{"id": "prontoqa_validation_521", "nl": "Sally is an impus, a dumpus, or a brimpus.", "fol": "(impus(Sally) | dumpus(Sally) | brimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x)))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x))))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issuee(x)))", "all x.(Sally(x) -> (Issue(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issues(x)))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issuessuessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessae", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issuee(x))))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issuessuessuessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessae", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issuee(x))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x)", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issuessuessuessuessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessae", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issae(x)))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issuessuessuessuessuessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessaessae", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x)))"]}
{"id": "prontoqa_validation_522", "nl": "Everything that is a dumpus, a sterpus, or a brimpus is a lempus.", "fol": "all x. ((dumpus(x) | sterpus(x) | brimpus(x)) -> lempus(x))", "prediction": ["all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dupus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Steerpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterepus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumps(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dumps(x) | Sterus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dempus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Pumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lampus(x))", "all x.((Dumps(x) | Steerpus(x) | Brimpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_validation_523", "nl": "Sam is a lempus, a wumpus, and a brimpus.", "fol": "(lempus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Lempus(y))) & all z.(Brimpus(z) -> Brimpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Lempus(y)) & all z.(Brimpus(z) -> Brimpus(z))))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) | Brimpus(x))))", "all x y z.((Sam(x) & Lempus(y) & Wumpus(z)) -> (Lempus(x) | Wumpus(z) | Brimpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Brimpus(y)))", "all x.(Sam(x) -> (Lempus(x) | Humpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & All z.(Brimpus(z)) -> Brimpus(z))))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Lempus(y))) & all z.(Brimpus(z) -> Brimpus(z))))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Brimpus(y))))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Wumpus(y))) & all z.(Brimpus(z) -> Brimpus(z)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Wumpus(y)) & all z.(Brimpus(z) -> Brimpus(z))))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Sam(y))) & all z.(Brimpus(z) -> Brimpus(z)))"]}
{"id": "prontoqa_validation_524", "nl": "Everything that is a zumpus, a vumpus, and a lorpus is a numpus, a grimpus, and a gorpus.", "fol": "all x. ((zumpus(x) & vumpus(x) & lorpus(x)) -> (numpus(x) & grimpus(x) & gorpus(x)))", "prediction": ["all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Tompus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (numpus(x) & grimpus(x) & gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numerus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (numpus(x) | grimpus(x) | gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Nompus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Nompus(x) | Grimpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_525", "nl": "Stella is a vumpus.", "fol": "vumpus(Stella)", "prediction": ["all x.(Stella(x) -> Vumpus(x))", "Stella is a Vumpus.", "all x.((Stella(x) & Vumpus(x)) -> Vumpus(x))", "Stella is a vumpus.", "all x.(Vumpus(x) -> Stella(x))", "all x.((Stella(x) & Vampire(x)) -> Vampire(x))", "Stella is a Vumpus(Stella)", "all x.(Stella(x) -> Vampire(x))", "all x.((Stella(x) & Vumpus(x)) -> -Vumpus(x))", "all x.((Stella(x) & Vumpus(x)) -> Is(x,y))", "all x.(Stella(x) -> Vumpus(x))", "all x.(Stella(x) -> Vulmpus(x))", "all x.(Stella(x) -> Vampus(x))", "all x.((Stella(x) & Vumpus(x)) -> Vampus(x))", "all x.((Stella(x) & Vumpus(x)) -> Vimpus(x))", "all x.(Stella(x) -> Vumpus(x))"]}
{"id": "prontoqa_validation_526", "nl": "Stella is a lorpus.", "fol": "lorpus(Stella)", "prediction": ["Stella is a lorpus.", "all x.(Lorpus(x) -> Stella(x))", "all x.(Stella(x) -> Lorpus(x))", "all x.(Lorph(x) -> Stella(x))", "(Lorpus(Stella) & LivesIn(Stella))", "exists x.(Lorpus(x) & Stella(x))", "All x.(Stella(x) -> Lorpus(x))", "(Lorpus(Stella) & LivesIn(Stella,Lorpus))", "all x.(Stella(x) -> Llorpus(x))", "all x.(Lorpus(x) -> Stella(x))", "all x.((Stella(x) & Lorpus(x)) -> Is(x,y))", "all x.((Stella(x) & Lorpus(x)) -> LivesIn(x))", "(Lorpus(Stella) & -Lorpus(Stella))", "Stella is a Llorpus.", "all x.((Stella(x) & Lorpus(x)) -> LivesIn(x,y))", "(Lorph(Stella) & LivesIn(Stella,Lorph))"]}
{"id": "prontoqa_validation_527", "nl": "Everything that is a zumpus and a shumpus and a sterpus is a jompus and a gorpus and a lorpus.", "fol": "all x. ((zumpus(x) & shumpus(x) & sterpus(x)) -> (jompus(x) & gorpus(x) & lorpus(x)))", "prediction": ["all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lordpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jumpus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) | Humpus(x) | Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) | Shumpus(x) | Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & lorpus(x)))"]}
{"id": "prontoqa_validation_528", "nl": "Sam is a sterpus.", "fol": "sterpus(Sam)", "prediction": ["all x.(Sam(x) -> Sterpus(x))", "all x.((Sam(x) & Sterpus(x)) -> Sterpus(x))", "all x.(Sam(x) -> Sterepus(x))", "all x y.((Sam(x) & Sterpus(y)) -> Sterpus(x))", "All x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "exists x.(Sam(x) & Sterpus(x))", "all x.(Sam(x) -> Sterpus(x))", "all x.(Sam(x) -> Steroid(x))", "all x.(Sam(x) -> Sterus(x))", "all x y.((Sam(x) & Sterpus(y)) -> Is(x,y))", "all x y.((Sam(x) & Sterpus(y)) -> Sterpus(x,y))", "all x.(Sam(x) -> Sterotus(x))", "all x.(Sterepus(x) -> Sam(x))", "all x.(Sam(x) -> Steropose(x))", "all x.((Sam(x) & Sterpus(x)) -> Is(x,y))"]}
{"id": "prontoqa_validation_529", "nl": "Sam is a jompus.", "fol": "jompus(Sam)", "prediction": ["all x.(Sam(x) -> Jompus(x))", "all x.(Jompus(x) -> Sam(x))", "all x.(Jimpus(x) -> Sam(x))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Jompus(x) -> (Sam(x) & Jompus(x)))", "all x.(Jompus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "All x.(Sam(x) -> Jompus(x))", "all x.((Sam(x) & Jompus(x)) -> Jompus(x))", "all x.((Sam(x) & Jompus(x)) -> Is(x,y))", "exists x.(Sam(x) & Jompus(x))", "all x.((Sam(x) & Jompus(x)) -> Has(x,y))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Jimpus(x) -> Sam(x))", "all x.((Sam(x) & Jompus(x)) -> HasSam(x))", "all x.((Sam(x) & Jompus(x)) -> Has(x))"]}
{"id": "prontoqa_validation_530", "nl": "Everything that is a zumpus, a yumpus, and a jompus is an impus and a lorpus and a numpus.", "fol": "all x. ((zumpus(x) & yumpus(x) & jompus(x)) -> (impus(x) & lorpus(x) & numpus(x)))", "prediction": ["all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))"]}
{"id": "prontoqa_validation_531", "nl": "Max is a lorpus.", "fol": "lorpus(Max)", "prediction": ["all x.(Max(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Max(x))", "All x.(Max(x) -> Lorpus(x))", "all x.(Max(x) -> Llorpus(x))", "all x.(Max(x) -> Loomis(x))", "(Lorpus(Max) & LivesIn(Max))", "(Lorpus(Max) & -Lorpus(Max))", "all x.(Max(x) -> Lordpus(x))", "all x.(Matthew(x) -> Lorpus(x))", "all x.(Max(x) -> Lorpus(x))", "all x.(Max(x) -> Loompus(x))", "all x.(Max(x) -> Lopus(x))", "all x.(Max(x) -> lorpus(x))", "all x.(Matt(x) -> Lorpus(x))", "All x.(Max(x) -> Llorpus(x))", "Max is a lorpus."]}
{"id": "prontoqa_validation_532", "nl": "Every brimpus is a tumpus and an impus and a gorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & impus(x) & gorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Imperator(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Imperator(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brompus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Blumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Imperator(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_533", "nl": "Wren is a lorpus, an impus, or a yumpus.", "fol": "(lorpus(Wren) | impus(Wren) | yumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperative(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yampus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperempt(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperium(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpsum(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impeccable(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impermiss(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperative(x) | Yumpus(x)))"]}
{"id": "prontoqa_validation_534", "nl": "Numpuses are sterpuses, gorpuses, and vumpuses.", "fol": "all x. (numpus(x) -> (sterpus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Sterpuses(x) | Gorpuses(x) | Vampuses(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Sterpuses(x) | Gorpuses(x) | Vampuses(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vampuse(x)))"]}
{"id": "prontoqa_validation_535", "nl": "Sally is an impus, Sally is a jompus, and Sally is not a vumpus.", "fol": "(impus(Sally) & jompus(Sally) & -vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Illegal(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vimpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x)))", "(all x.(Sally(x) -> IsImpossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x))))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Illegal(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vimpus(z))))", "(all x.(Sally(x) -> Imperium(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vimpus(z))))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x)))", "(all x.(Sally(x) -> Imperium(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Imperium(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> IsImpossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vimpus(z))))"]}
{"id": "prontoqa_validation_536", "nl": "Sally is not a numpus.", "fol": "-numpus(Sally)", "prediction": ["Sally is not a Numpus.", "all x.(Sally(x) -> -Numpus(x))", "all x.(Sally(x) -> -Numpus(x))", "Sally is not a Numpus(Sally)", "All x.(Sally(x) -> -Numpus(x))", "All x.(Sally(x) -> -Numpus(x))", "Sally is not Numpus(Sally)", "all x.(Sally(x) -> -Nompus(x))", "all x.(Sally(x) -> -numpus(x))", "Sally -Numpus(Sally)", "all x.(Sally(x) -> -Number(x))", "Sally & -Numpus(Sally)", "Sally & -Numpus(Sally)", "All x.(Sally(x) -> -Nompus(x))", "Sally -Numpus(Sally)", "Sally is not a Numpus(s)"]}
{"id": "prontoqa_validation_537", "nl": "Everything that is a vumpus, a rompus, or a yumpus is a lempus, a zumpus, and a gorpus.", "fol": "all x. ((vumpus(x) | rompus(x) | yumpus(x)) -> (lempus(x) & zumpus(x) & gorpus(x)))", "prediction": ["all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vimpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_538", "nl": "Sally is a lempus.", "fol": "lempus(Sally)", "prediction": ["all x.(Sally(x) -> Lempus(x))", "Sally is a lempus.", "All x.(Sally(x) -> Lempus(x))", "all x.((Sally(x) & Lempus(x)) -> Lempus(x))", "Sally is a Lempus.", "all x.(Lempus(x) -> Sally(x))", "exists x.(Sally(x) & Lempus(x))", "all x.((Sally(x) & Lempus(x)) -> (Lempus(x) & Lempus(x)))", "all x.((Sally(x) & Lempus(x)) -> Is(x,y))", "all x.(Sally(x) -> Lempus(x))", "Sally is Lempus.", "all x.((Sally(x) & Lempus(x)) -> -Lempus(x))", "all x.((Sally(x) & Lempus(x)) -> (Lempus(x) | Lempus(x)))", "(Lempus(Sally) -> Lempus(Sally))", "all x.((Sally(x) & Lempus(x)) -> HasLempus(x))", "all x.(Lempus(x) -> Sally(x))"]}
{"id": "prontoqa_validation_539", "nl": "Everything that is a grimpus or a jompus or a lempus is a tumpus, an impus, and a rompus.", "fol": "all x. ((grimpus(x) | jompus(x) | lempus(x)) -> (tumpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.((Tumpus(x) | Impossible(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Grimpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Rumpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Tumpus(x) | Imperator(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Grimpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Rumpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Grampus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Element(x) & (Grimpus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Grimpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Rumpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_540", "nl": "Each dumpus is a tumpus.", "fol": "all x. (dumpus(x) -> tumpus(x))", "prediction": ["all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumulus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumps(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dupus(x) -> Tumpus(x))", "exists x.(Dumpus(x) & Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumps(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x y.((Dumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x y.((Dumpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Dupus(x) -> Tumpus(x))", "exists x.(Dumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_validation_541", "nl": "Stella is a wumpus, Stella is not a tumpus, and Stella is a rompus.", "fol": "(wumpus(Stella) & -tumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "(all x.(Stella(x) -> Wumpus(x)) & all y.(Stella(y) -> -Tumpus(y))) & all z.(Stella(z) -> Rompus(z)))", "(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)))", "(all x.(Stella(x) -> Wumpus(x)) & all y.(Stella(y) -> -Tumpus(y)) & all z.(Stella(z) -> Rompus(z))))", "(all x.(Wumpus(x) -> Stella(x)) & all y.(Tumpus(y) -> Stella(y))) & all z.(Rompus(z) -> Stella(z)))", "(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x))) & (Rompus(x) -> Stella(x)))", "(all x.(Stella(x) -> Wumpus(x)) & all y.(Stella(y) -> -Tumpus(y))) & all z.(Stella(z) -> Rompus(z))))", "(all x.(Wumpus(x) -> Stella)) & (-Tumpus(x) -> Stella)) & (Rompus(x) -> Stella)))", "(all x.(Wumpus(x) -> Wumpus(x)) & all y.(Tumpus(y) -> -Tumpus(y))) & all z.(Rompus(z) -> Wumpus(z)))", "(all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> Wumpus(x)) & ((Wumpus(y) & -Tumpus(y)) -> Rompus(y)))", "(all x.(Wumpus(x) -> Wumpus(x)) & all y.(Tumpus(y) -> -Tumpus(y)) & all z.(Rompus(z) -> Wumpus(z)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x))))", "(all x.(Wumpus(x) -> Stella(x)) & all y.(Tumpus(y) -> Stella(y))) & all z.(Rompus(z) -> Stella(z))))", "(all x.(Wumpus(x) -> Wumpus(x)) & all y.(Tumpus(y) -> -Tumpus(y)) & all z.(Rompus(z) -> Wumpus(z))))", "(all x.(Stella(x) -> Wumpus(x)) & all y.(Stella(y) -> -Tumpus(y)) & all z.(Stella(z) -> Rompus(z)))", "(all x.(Wumpus(x) -> Stella)) & all y.(Tumpus(y) -> Stella(y))) & all z.(Rompus(z) -> Stella(z)))"]}
{"id": "prontoqa_validation_542", "nl": "Stella is a yumpus, Stella is not a dumpus, or Stella is a brimpus.", "fol": "(yumpus(Stella) | -dumpus(Stella) | brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) & (-Stella(x) -> Dumpus(x)) | (-Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) & Dumpus(x)) | (-Stella(x) & Brimpus(x))))", "(all x.(Stella(x) -> Yumpus(x)) & (-Stella(x) -> Dumpus(x)) | (-Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) | (-Stella(x) -> Dumpus(x)) | (-Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yampus(x)) | (-Stella(x) & Dumpus(x)) | (-Stella(x) & Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) -> Dumpus(x)) | (-Stella(x) -> Brimpus(x))))", "(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "all x.((Stella(x) & Yumpus(x)) | (-Dumpus(x) | Brimpus(x))))", "all x.((Stella(x) & Yampus(x)) | (-Dumpus(x) | Brimpus(x))))", "all x y.((Stella(x) & (Yumpus(x) | -Dumpus(x) | Brimpus(y))) -> (Yumpus(x) | Brimpus(y)))", "exists x.(Stella(x) & (Yumpus(x) | -Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_543", "nl": "Every shumpus is a zumpus.", "fol": "all x. (shumpus(x) -> zumpus(x))", "prediction": ["all x.(Shumpus(x) -> Zumpus(x))", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers(Havers)Havers(Havers)Havers(H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers(Havers)Havers(H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(Havers)H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(Havers)Havers(Havers)H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers(Havers)Havers(H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers(Havers)Havers(Havers)Havers(H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(Havers)Havers(Havers)H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(Havers)Havers(H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(Havers(Havers)Havers(H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(Havers)Havers(Havers)H", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHas", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers(Havers)Havers(Havers)Havers(Havers)", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers(Havers)Havers(Havers)", "all x y.((Shumpus(x) & Zumpus(y)) -> HasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHasHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHaversHavers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers(Havers)Havers)Havers)Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers)Havers(Havers)Havers(Havers)Havers(Havers)Havers(Havers(Havers)Havers(Havers)Havers(Havers)H"]}
{"id": "prontoqa_validation_544", "nl": "Sterpuses are vumpuses.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpuse(x) -> Vampuse(x))", "all x.(Sterpuse(x) -> Vampus(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpuse(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vulpuse(x))", "all x.(Sterpus(x) -> Vumpuse(x))", "all x.(Sterpus(x) -> Vulpus(x))", "all x.(Sterpus(x) -> Vulpe(x))", "all x.(Sterpuse(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x.(Sterpuse(x) -> Vampus(x))", "all x.(Stumpus(x) -> Vampus(x))", "all x.(Stupid(x) -> Vampuse(x))"]}
{"id": "prontoqa_validation_545", "nl": "Every lorpus is a brimpus.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorph(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Larpus(x) -> Brimpus(x))", "exists x.(Lorpus(x) & Brimpus(x))", "all x.(Lorpus(x) -> Brumpus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> Has(x,y))", "all x y.((Lorpus(x) & Brimpus(y)) -> Is(x,y))", "all x.exists y.(Lorpus(x) & Brimpus(y))", "all x y.((Lorpus(x) & Brimpus(y)) -> (Lorpus(x) & Brimpus(x)))", "all x.(Lorpus(x) -> Brumpus(x))", "all x.(Lorp(x) -> Brimpus(x))", "(all x.(Lorpus(x) -> Brimpus(x)))", "all x y.((Lorpus(x) & Brimpus(y)) -> (Lorpus(x) & Brimpus(y)))", "all x.(Lorpus(x) -> Brampus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> HasLorpus(x,y))"]}
{"id": "prontoqa_validation_546", "nl": "Each grimpus is not a zumpus.", "fol": "all x. (grimpus(x) -> -zumpus(x))", "prediction": ["all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Tompus(x))", "all x.(Grampus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zombipus(x))", "all x.(Gruppus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zimmerpus(x))", "all x.(Grimpus(x) -> -Toumpus(x))", "all x.(Grimpus(x) -> -Zimpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "exists x.(Grimpus(x) & -Zumpus(x))", "all x.(Grimpus(x) -> -zumpus(x))", "all x.(Grampus(x) -> -Tompus(x))", "all x.(Grimpus(x) -> -Sumpus(x))", "all x.(Grimpus(x) -> -Zupus(x))", "all x.(Fruit(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Zuppus(x))"]}
{"id": "prontoqa_validation_547", "nl": "Polly is a gorpus and Polly is a jompus and Polly is not a brimpus.", "fol": "(gorpus(Polly) & jompus(Polly) & -brimpus(Polly))", "prediction": ["all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Brimpus(z))))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Brimpus(z))))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x))))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brompus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x)))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x))))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & -Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y))) & all z.(Polly(z) -> -Brimpus(z))))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brumpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) | Jompus(y) & -Brimpus(z)))"]}
{"id": "prontoqa_validation_548", "nl": "Polly is a rompus and a wumpus and a sterpus.", "fol": "(rompus(Polly) & wumpus(Polly) & sterpus(Polly))", "prediction": ["all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) | Wumpus(x) | Sterpus(x)))", "all x.(Poly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Rumpus(x) & Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Wumpus(x) | Sterpus(x))))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(y) & Sterpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & Sterpus(y))))", "all x.(Polly(x) -> (Rompus(x) & Wompus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(z) & Sterpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & (Wumpus(x) & Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) | Wumpus(x) | Sterpus(x)))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))"]}
{"id": "prontoqa_validation_549", "nl": "Polly is not a shumpus, Polly is not a lorpus, and Polly is a vumpus.", "fol": "(-shumpus(Polly) & -lorpus(Polly) & vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y)) & all z.(Polly(z) -> Vumpus(z))))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z))))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vampus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Voompus(x)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y)) & all z.(Polly(z) -> Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x))))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Poly(x) -> Vumpus(x)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Poly(z) -> Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))"]}
{"id": "prontoqa_validation_550", "nl": "Every jompus is a yumpus.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpa(x))", "all x.(Jompus(x) -> Yumps(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpu(x))", "all x.(Jompus(x) -> Yumpsum(x))", "all x.(Jumpus(x) -> Yampus(x))", "all x.(Jimpus(x) -> Yampus(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yumus(x))", "all x.(Jimpus(x) -> Yumpa(x))"]}
{"id": "prontoqa_validation_551", "nl": "Polly is not a yumpus, Polly is a lempus, and Polly is a zumpus.", "fol": "(-yumpus(Polly) & lempus(Polly) & zumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Poly(z) -> Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "(all x.(Poly(x) -> -Yumpus(x)) & all y.(Poly(y) -> Lempus(y)) & all z.(Poly(z) -> Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x))))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Poly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "all x y z.((Polly(x) & Yampus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Poly(x) -> -Yumpus(x)) & (Poly(x) -> Lempus(x)) & (Poly(x) -> Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Poly(x) -> Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Poly(x) -> Lempus(x)) & (Poly(x) -> Zumpus(x)))", "all x y z.((Polly(x) & Yampus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))"]}
{"id": "prontoqa_validation_552", "nl": "Polly is a dumpus or Polly is a lorpus or Polly is not a jompus.", "fol": "(dumpus(Polly) | lorpus(Polly) | -jompus(Polly))", "prediction": ["all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Polly(x) -> -Jompus(x))))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jompus(y))))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jompus(y))))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Poly(x) -> -Jompus(x))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jumpus(x))) -> Polly(x))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Poly(y) & -Jompus(y))))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Polly(x) -> -Jimpus(x))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jimpus(x))) -> Polly(x))", "((Polly(Poly) & Dumpus(Poly)) | (Poly(Poly) & Lorpus(Poly)) | (Poly(Poly) & -Jompus(Poly))))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jimpus(y))))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Polly(x) -> -Jumpus(x))))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jimpus(y))))", "((Polly(poly) & Dumpus(poly)) | (Polly(poly) & Lorpus(poly)) | (Poly(poly) & -Jompus(poly))))", "all x.((Poly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))"]}
{"id": "prontoqa_validation_553", "nl": "Everything that is a shumpus and a yumpus and a numpus is a dumpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & numpus(x)) -> dumpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yampus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yuppus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yukpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yampus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yompus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yukon(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yuumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yupus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Numpus(y)) -> Dumpus(x))", "all x y z.((Shumpus(x) & Yumpus(y) & Numpus(z) & Is(x,y)) -> Dumpus(x))"]}
{"id": "prontoqa_validation_554", "nl": "Stella is a shumpus.", "fol": "shumpus(Stella)", "prediction": ["Stella is a shumpus.", "all x.(Shumpus(x) -> Stella(x))", "All x.(Shumpus(x) -> Stella(x))", "all x.(Shumpus(x) -> Stella(x))", "exists x.(Shumpus(x) & Stella(x))", "(Shumpus(Stella) -> Shumpus(Stella))", "(Shumpus(Stella) & Shumpus(Stella))", "(Shumpus(Stella) & -Shumpus(Stella))", "(Shumpus(Stella) -> Shumpus(Stella))", "(Shumpus(Stella) & HasShump(Stella))", "all x.(Stella(x) -> Humpus(x))", "(Shumpus(Stella))", "Stella is shumpus.", "Stella is a Humpback(Shumpus)", "all x.(Stella(x) -> Shumpus(x))", "Stella is a Shumpus."]}
{"id": "prontoqa_validation_555", "nl": "Stella is a yumpus.", "fol": "yumpus(Stella)", "prediction": ["Stella is yumpus.", "Stella is a yumpus.", "all x.(Yumpus(x) -> Stella(x))", "all x.(Stella(x) -> Yumpus(x))", "all x.(Stella(x) -> Yampus(x))", "exists x.(Yumpus(x) & Stella(x))", "all x.(Stella(x) -> Yumpa(x))", "all x.(Stella(x) -> Yumpus(x))", "All x.(Stella(x) -> Yumpus(x))", "All x.(Stella(x) -> Yampus(x))", "All x.(Stella(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Stella(x))", "All x.(Stella(x) -> Yumpa(x))", "(Yumpus(Stella) & HasYump(Stella))", "(Yumpus(Stella))", "(Yumpus(Stella) & Yampus(Stella))"]}
{"id": "prontoqa_validation_556", "nl": "Stella is a grimpus or a dumpus or a gorpus.", "fol": "(grimpus(Stella) | dumpus(Stella) | gorpus(Stella))", "prediction": ["all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "exists x.(Stella(x) & (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> ((Grimpus(x) | Dumpus(x) | Gorpus(x))))", "all x.(Stella(x) -> (Grippus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grampus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Gruppus(x) | Dumpus(x) | Gorpus(x)))", "exists x.(Stella(x) & (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> ((Grimpus(x) | Dumpus(x) | Gorpus(x))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grippus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Sgrimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Gruppus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grampus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grisp(x) | Dumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_557", "nl": "Everything that is a yumpus, a lempus, and a sterpus is a gorpus.", "fol": "all x. ((yumpus(x) & lempus(x) & sterpus(x)) -> gorpus(x))", "prediction": ["all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steerpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steroid(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterepus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steroid(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | sterpus(x)) -> Gorpus(x))", "all x y z.((Yumpus(x) & Lempus(y) & Sterpus(z) & Has(x,y) & Has(x,z)) -> Gorpus(x))", "all x y z.((Yumpus(x) & Lempus(y) & Sterpus(z) & Is(x,y) & Is(x,z)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Specterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterepus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Steerpus(x)) -> Gorpus(x))", "all x y z.((Yumpus(x) & Lempus(y) & Sterpus(z) & Has(x,y) & Has(x,z)) -> Gorpus(x))", "all x y z.((Yumpus(x) & Lempus(y) & Sterpus(z) & Is(x,y) & Is(x,z)) -> Gorpus(x))"]}
{"id": "prontoqa_validation_558", "nl": "Max is a shumpus, Max is not a gorpus, and Max is a vumpus.", "fol": "(shumpus(Max) & -gorpus(Max) & vumpus(Max))", "prediction": ["(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Vumpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Vumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Vumpus(z))))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y))) & all z.(Max(z) -> Vumpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vumpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Vumpus(z))))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Vumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(y) & Vumpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Vampus(x)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Vumpus(z)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(x) & Vumpus(x)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Voompus(x)))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y))) & all z.(Max(z) -> Vumpus(z))))", "(all x.(Max(x) -> Humpus(x)) & ((Max(x) -> -Gorpus(x))) & ((Max(x) -> Vumpus(x))))"]}
{"id": "prontoqa_validation_559", "nl": "Each wumpus is a grimpus, a gorpus, and a sterpus.", "fol": "all x. (wumpus(x) -> (grimpus(x) & gorpus(x) & sterpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(z))))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(z)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterepus(z)) -> Sterpus(z))))", "all x.(Wumpus(x) -> (Smaller(x) & Gorpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> (Smaller(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z) -> Sterpus(z))))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(z))))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterepus(z))))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & (Gorpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_validation_560", "nl": "Max is a lempus, an impus, or a sterpus.", "fol": "(lempus(Max) | impus(Max) | sterpus(Max))", "prediction": ["all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Issue(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperator(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperempt(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperative(x) | Sterpus(x)))", "all x.(Max(x) -> (Limpus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Steroid(x)))", "all x.(Max(x) -> (Lempus(x) | Impermiss(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impeccable(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x))))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Steerpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperium(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Isolated(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Issue(x) | Steroid(x)))", "(all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))"]}
{"id": "prontoqa_validation_561", "nl": "Everything that is a tumpus or a gorpus or a lorpus is a rompus, a zumpus, and a lempus.", "fol": "all x. ((tumpus(x) | gorpus(x) | lorpus(x)) -> (rompus(x) & zumpus(x) & lempus(x)))", "prediction": ["all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lampus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lordpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lampus(x)))", "all x.((Rompus(x) | Zumpus(x) | Lempus(x)) -> (Tumpus(x) | Gorpus(x) | Lorpus(x)))", "all x.(((Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tompus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lordpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lampus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lordpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (rompus(x) & zumpus(x) & lempus(x)))", "all x.((Tompus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_562", "nl": "Everything that is a jompus and a rompus and a tumpus is a brimpus, a gorpus, and an impus.", "fol": "all x. ((jompus(x) & rompus(x) & tumpus(x)) -> (brimpus(x) & gorpus(x) & impus(x)))", "prediction": ["all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Issue(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impermiss(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperative(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Issue(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & impus(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Issue(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))"]}
{"id": "prontoqa_validation_563", "nl": "Alex is a rompus.", "fol": "rompus(Alex)", "prediction": ["all x.(Alex(x) -> Rompus(x))", "All x.(Alex(x) -> Rompus(x))", "all x.(Rompus(x) -> Alex(x))", "all x.(Alex(x) -> Rompus(x))", "all x.(Alex(x) -> Rupus(x))", "all x.(Alex(x) -> Rompus(x))", "all x y.((Alex(x) & Rompus(y)) -> Is(x,y))", "Alex is a rompus.", "all x.(Rompus(x) -> Alex(x))", "all x.(Alex(x) -> Rhopus(x))", "all x.((Alex(x) & Rompus(x)) -> Is(x,y))", "all x y.((Alex(x) & Rompus(y)) -> Raccoon(x))", "all x y.((Alex(x) & Rompus(y)) -> Has(x,y))", "ALL x.(Alex(x) -> Rompus(x))", "all x.((Alex(x) & Rompus(x)) -> Raccoon(x))", "all x.(Alex(x) -> Rimpus(x))"]}
{"id": "prontoqa_validation_564", "nl": "Everything that is a zumpus and a tumpus and a wumpus is a shumpus, a rompus, and a dumpus.", "fol": "all x. ((zumpus(x) & tumpus(x) & wumpus(x)) -> (shumpus(x) & rompus(x) & dumpus(x)))", "prediction": ["all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wompus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x) & Tompus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tompus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Totumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))"]}

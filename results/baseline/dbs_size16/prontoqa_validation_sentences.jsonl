{"id": "prontoqa_validation_0", "nl": "Each wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "(all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "exists x.(Wumpus(x) & Sterus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "exists x.(Wumpus(x) & Sterpus(x))"]}
{"id": "prontoqa_validation_1", "nl": "Polly is a jompus and Polly is not a sterpus and Polly is a dumpus.", "fol": "(jompus(Polly) & -sterpus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterpus(z)) -> (-Sterpus(y) & Dumpus(z)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Sterpus(y) & Dumpus(y)))", "(all x y.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Polly(x) & -Sterpus(y)) -> Dumpus(y)))", "(all x y.(Jompus(x) -> Polly(x)) & (-Sterpus(y) -> Polly(y))) & (-Sterpus(y) -> Polly(y)) & (-Sterpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterpus(z)) -> (-Sterpus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterepus(x)) & (Polly(x) -> Dumpus(x)))", "(all x y z.((Polly(x) & Jompus(x)) -> Polly(y)) & ((Polly(z) & -Sterpus(z)) -> Dumpus(z)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterepus(x)) & (Polly(x) -> Dumpus(x)))", "all x.(Polly(x) -> (Jompus(x) & -Sterpus(x) & Dumpus(x)))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) -> (-Sterepus(y) & Dumpus(y)))", "all x y z.((Polly(x) & Jompus(x) & Polly(y) & Sterpus(z) & Dumpus(x)) -> (Jompus(x) & -Sterpus(y) & Dumpus(z)))", "exists x.(Polly(x) & Jompus(x) & -Sterpus(x) & Dumpus(x))", "all x.(Polly(x) -> (Jompus(x) & -Sterpus(x) & Dumpus(x)))", "(all x.(Polly(x) -> Jompus(x)) & (Polly(x) -> -Sterpus(x)) & (Polly(x) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_2", "nl": "Polly is not a wumpus.", "fol": "-wumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "Polly is not a wumpus.", "all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "Polly is not a wumpus.", "(Wumpus(Polly) & -Wumpus(Polly))", "all x.(Wumpus(x) -> -Wumpus(x))", "Polly -Wumpus(Polly)", "all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "-Wumpus(Polly)", "all x.(Polly(x) -> -Wumpus(x))", "(-Wumpus(Polly))", "-Wumpus(Poly)", "-Wumpus(poly)"]}
{"id": "prontoqa_validation_3", "nl": "Rompuses are lempuses.", "fol": "all x. (rompus(x) -> lempus(x))", "prediction": ["all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x y.((Rompus(x) & Lempuse(y)) -> Lempuse(x))", "(Lempuse(rompus) & Lempuse(rompus))", "all x.(Rompus(x) -> Lempuse(x))", "(all x.(Rompus(x) -> Lempuse(x))", "all x y.((Rompus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "All x.(Romes(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "All x.(Rompuse(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Rompus(x) -> Lempus(x))", "all x.(Rompus(x) -> Lempuse(x))", "all x.(Romese(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_4", "nl": "Rex is a lorpus and Rex is not a lempus and Rex is a numpus.", "fol": "(lorpus(Rex) & -lempus(Rex) & numpus(Rex))", "prediction": ["(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))", "(all x y z.((Rex(x) & Lorpus(y)) -> (Lorpus(x) & -Lempus(y)) & ((Rex(z) & Numpus(z))) -> (Numpus(z))))", "(all x y.(Lorpus(x) -> Rex)) & (Lempus(y) -> Rex)) & (Numpus(y) -> Rex)))", "all x y.((Rex(x) & Lorpus(x)) -> (-Lempus(x) & Numpus(y)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x y z.((Rex(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Rex(x) -> Llorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "(all x.(Rex(x) -> Lorpus(x)) & (-Lempus(x) & -Numpus(x)))", "all x y z.((Rex(x) & Lorpus(x) & Lempus(y) & Numpus(z)) -> (Lorpus(x) & -Lempus(y) & Numpus(z)))", "(all x.(Lorpus(x) -> Rex)) & (-Lempus(x) -> Rex)) & (Numpus(x) -> Rex)))", "all x.(Rex(x) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))", "(all x y.(Lorpus(x) -> Rex(x)) & (-Lempus(y) -> Rex(y)) & (Numpus(y) -> Rex(y)))", "all x y.((Rex(x) & Lorpus(x)) -> (-Lempus(x) & Numpus(y)))", "(all x.(Rex(x) -> Lorpus(x)) & (Rex(x) -> -Lempus(x)) & (Rex(x) -> Numpus(x)))", "all x.(Rex(x) -> (Lorpus(x) & -Lempus(x) & Numpus(x)))"]}
{"id": "prontoqa_validation_5", "nl": "Rex is not a rompus.", "fol": "-rompus(Rex)", "prediction": ["(-Rompus(Rex))", "all x.(Rex(x) -> -Rompus(x))", "Rex is not a Rompus.", "(Rompus(Rex) & -Rompus(Rex))", "Rex is not a rompus.", "-Rompus(Rex)", "(-rompus(Rex))", "all x.(Rex(x) -> -Rompus(x))", "Rex -Rompus(x)", "Rex is not a Rompus.", "(-Rompus(Rex))", "Rex is not a rompus.", "Rex, a rompus, n.", "all x.(Rex(x) -> -Rompus(x))", "-Rompus(Rex)", "-Rompus(Rex)"]}
{"id": "prontoqa_validation_6", "nl": "Numpuses are impuses.", "fol": "all x. (numpus(x) -> impus(x))", "prediction": ["all x.(Numpus(x) -> Issue(x))", "all x y.((Numpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Numpuse(x) -> Issue(x))", "all x.(Numpus(x) -> Issue(x))", "all x y.((Numpuse(x) & Issue(y)) -> Issue(x,y))", "(Impacts(Numpuses,y) & -Impacts(y))", "(Issue(Numpus) | Issue(Numpus))", "all x.(Numptus(x) -> Issue(x))", "all x.(Numpuse(x) -> Impects(x))", "all x y.((Numpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Numpuse(x) -> Impenet(x))", "all x.(Numpus(x) -> Issue(x))", "All x.(Numptus(x) -> Issue(x))", "all x.(Numpus(x) -> Issues(x))", "all x.(Numpuse(x) -> Impermissible(x))", "all x.(Numpus(x) -> Impose(x))"]}
{"id": "prontoqa_validation_7", "nl": "Wren is not an impus and Wren is a tumpus and Wren is a wumpus.", "fol": "(-impus(Wren) & tumpus(Wren) & wumpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> -Impossible(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> Wumpus(x)))", "(all x y.(Wren(x) -> -Impossible(x)) & ((Wren(y) & Tumpus(y)) | (Wren(y) & Tumpus(y)))))", "all x y.((Wren(x) & Wren(y)) -> (-Impossible(x) & Tumpus(y) & Wumpus(y)))", "all x.(Wren(x) -> (-Impossible(x) & Tumpus(x) & Wren(x)))", "(all x y z.((Wren(x) & Impossible(y) & Tumpus(z)) -> (-Impossible(x) & Tumpus(z) & Wren(x)))", "(-Impossible(Wren) & Tumpus(Wren) & Wumpus(Wren))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-Impossible(x) & Tumpus(y) & Wumpus(z)))", "(all x.(Wren(x) -> -Impossible(x)) & all y.(Wren(y) -> Tumpus(y))) & all z.(Wren(z) -> Wumpus(z)))", "exists x.(Wren(x) & -Impossible(x) & Tumpus(x) & Wumpus(x))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-IsImpossible(x) & Tumpus(y) & Wumpus(z)))", "all x y.((Wren(x) & Wren(y)) -> (-Impossible(x) & Tumpus(y) & Wumpus(y)))", "(all x y.(Wren(x) -> -Impossible(x)) & ((Wren(y) & Tumpus(y)) | (Wren(y) & Tumpus(y))))", "(all x.(Wren(x) -> -Impossible(x)) & (Tumpus(x) | Wumpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Wren(z)) -> (-IsImpossible(x) & IsWumpus(y)))"]}
{"id": "prontoqa_validation_8", "nl": "Wren is not a numpus.", "fol": "-numpus(Wren)", "prediction": ["all x.(Wren(x) -> -Numpus(x))", "(-numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))", "-Numpus(Wren)", "Wren is not Numpus.", "Wren is not a Numpus.", "(-Numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))", "(-numpus(Wren))", "-Numpus(Wren)", "(Numpus(wren) & -Numpus(wren))", "all x.(Wren(x) -> -Numpus(x))", "-Numpus(Wren)", "all x.(Wren(x) -> -Numpus(x))", "(-numpus(Wren))", "all x.(Wren(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_9", "nl": "Each tumpus is a shumpus.", "fol": "all x. (tumpus(x) -> shumpus(x))", "prediction": ["all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x y.((Tumpus(x) & Humpus(y)) -> Shumpus(x))", "(all x.(Tumpus(x) -> Humpus(x)))", "all x.(Tumpus(x) -> Humpus(x))", "all x y.((Tumpus(x) & Humpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Shumpus(x))", "all x y.((Tumpus(x) & Shumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "all x.(Tumpus(x) -> Shumpus(x))", "all x.(Tumpus(x) -> Humpus(x))", "exists x.(Tumpus(x) & Humpus(x))", "exists x.(Tumpus(x) & Shumpus(x))", "exists x.(Tumpus(x) & Humpus(x))"]}
{"id": "prontoqa_validation_10", "nl": "Max is not a shumpus, Max is a zumpus, and Max is a jompus.", "fol": "(-shumpus(Max) & zumpus(Max) & jompus(Max))", "prediction": ["(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & -Jumpus(x) & -Shumpus(y) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z)) -> Jompus(z)))", "all x.(Max(x) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "all x y z.((Max(x) & Zumpus(y) & Jompus(z)) -> (-Shumpus(x) & -Zumpus(y) & -Shumpus(z) & -Shumpus(y) & -Shumpus(z) & -Shumpus(y) & -Shumpus(z) & -Shumpus(z) & -Shumpus(z)))", "(all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> -Shumpus(x)) & ((Max(x) & Zumpus(x)) -> Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & -Jumpus(x) & -Shumpus(y) & -Shumpus(z) & -Shumpus(y) & -Shumpus(z) & -Jumpus(z)))", "(-Shumpus(Max) & Zumpus(Max) & Jompus(Max))", "(all x.(Max(x) -> -Shumpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> Jompus(x)))", "all x.(Max(x) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "all x y z.((Max(x) & Humpus(y) & Zumpus(z)) -> (-Shumpus(x) & Zumpus(y) & Jompus(z)))", "all x y z.((Max(x) & Shumpus(y) & Zumpus(z)) -> (-Shumpus(x) & Zumpus(x) & Jompus(x)))", "(all x.(Max(x) -> -Shumpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> Jompus(z))))", "(all x.(Max(x) -> -Shumpus(x)) | (Max(x) -> Zumpus(x))) | (Max(x) -> Jompus(x)))", "(all x y z.((Max(x) & Humpus(y)) -> -Shumpus(x)) & ((Max(z) & Zumpus(z)) -> Jompus(z)))"]}
{"id": "prontoqa_validation_11", "nl": "Max is not a tumpus.", "fol": "-tumpus(Max)", "prediction": ["(-Tumpus(Max))", "all x.(Max(x) -> -Tumpus(x))", "(Max(Max) & -Tumpus(Max))", "-Tumpus(Max)", "all x.(Max(x) -> -Tumpus(x))", "Max is notTumpus(Max)", "(-Tumpus(Max))", "all x.(Max(x) -> -Tumpus(x))", "Max is notTumpus(Max)", "-Tumpus(Max)", "all x.(Max(x) -> -Tumpus(x))", "(-Tumpus(Max))", "-Tumpus(Max)", "(-Tumpus(Max)", "-Tompus(max)", "-Tumpus(Max)"]}
{"id": "prontoqa_validation_12", "nl": "Each tumpus is a brimpus.", "fol": "all x. (tumpus(x) -> brimpus(x))", "prediction": ["all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Tumpus(x) -> Brimpus(x)))", "all x.(Tumpus(x) -> Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Brimpus(x))", "all x y.((Tumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "exists x.(Tumpus(x) & -Brimpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "exists x.(Tumpus(x) & Brumpus(x))", "all x.(Tumpus(x) -> Brimpus(x))", "exists x.(Tumpus(x) & Brumpus(x))"]}
{"id": "prontoqa_validation_13", "nl": "Max is a lorpus and Max is an impus and Max is not a brimpus.", "fol": "(lorpus(Max) & impus(Max) & -brimpus(Max))", "prediction": ["(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Brimpus(x)))", "all x y z.((Max(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) & Impossible(x) & -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Issue(y))) & all z.(Max(z) -> -Brimpus(z))))", "all x y z.((Max(x) & Lorpus(x) & Impossible(y) & Brimpus(z)) -> (Lorpus(x) & Impossible(y) & -Brimpus(z)))", "all x y.((Max(x) & Lorpus(x) & Impossible(y)) -> (Lorpus(x) & -Brimpus(y)))", "(all x y.((Max(x) & Lorpus(x)) -> -Brimpus(y)) & ((Max(x) & Issue(x)) -> -Brimpus(x)))", "(all x y z.((Max(x) & Lorpus(y) & Is(z)) -> (Lorpus(x) & Is(z)) & ((Max(x) & Brimpus(x)) -> -Brimpus(x))))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Issue(x)) & (Max(x) -> -Brimpus(x)))", "all x.(Max(x) -> (Lorpus(x) & Impossible(x) & -Brimpus(x)))", "(all x.(Max(x) -> Llorpus(x)) & (Max(x) -> Issue(x)) & (Max(x) -> -Brimpus(x)))", "(all x.(Max(x) -> Lorpus(x)) & all y.(Max(y) -> Imperator(y))) & all z.(Max(z) -> -Brimpus(z)))", "all x y z.((Max(x) & Lorpus(y) & Imperator(z)) -> (Lorpus(x) & Imperator(x) & -Brimpus(x)))", "all x.(Max(x) -> (Lorpus(x) & Issue(x) & -Brimpus(x)))", "all x y.((Max(x) & Lorpus(x) & Impossible(y)) -> (Lorpus(x) & Impossible(y) & -Brimpus(y)))", "(all x y.(Lorpus(x) -> Max(x)) & (Impossible(y) -> Max(y)))", "(all x.(Max(x) -> Lorpus(x)) & (Max(x) -> Imperator(x)) & (Max(x) -> -Brimpus(x)))"]}
{"id": "prontoqa_validation_14", "nl": "Zumpuses are vumpuses.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x y.((Zumpus(x) & Vampus(y)) -> Vampus(x))", "(Vumpus(z) & Vampus(z))", "(Vampus(z) & Vampus(z))", "all x.(Zumpus(x) -> Vampus(x))", "all x y.((Zumpus(x) & Vampus(y)) -> Vampus(x))", "(Vampus(z) & KnownFor(z) & Vampus(z))", "all x.(Zombie(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vulpuse(x))", "all x y.((Zumpus(x) & Vampuse(y)) -> Vampuse(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Zombie(x) -> Vampuse(x))", "all x.(Zumpus(x) -> Vampus(x))", "All x.(Zumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_validation_15", "nl": "Polly is a lorpus, Polly is a lempus, and Polly is not a vumpus.", "fol": "(lorpus(Polly) & lempus(Polly) & -vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> -Vumpus(x)))", "(all x y z.(Polly(x) -> Lorpus(x)) & (Polly(y) -> Lempus(y)) & (Polly(z) -> -Vumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) | Lempus(z) | -Vumpus(z)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & Lempus(y))) & ((Polly(z) & Vumpus(z)) -> -Vumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z) & -Vumpus(z)) -> (Lorpus(x) | Lempus(z) | Polly(x)))", "exists x.(Polly(x) & (Lorpus(x) | Lempus(x) | -Vumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) & Lempus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> Llorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) | Lempus(y))) & ((Polly(z) & -Vumpus(z)) -> (Vumpus(z))))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> -Vumpus(z))))", "all x y.((Polly(x) & Lorpus(x)) -> (Lempus(x) & -Vumpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z)) -> (Lorpus(x) | Lempus(z) | -Vumpus(z)))", "(all x y z.(Lorpus(x) -> Polly(x)) & (Lempus(y) -> Polly(z)) & -Vumpus(z)))", "all x y z.((Polly(x) & Lorpus(y) & Lempus(z) & -Vumpus(z)) -> (Lorpus(x) & Lempus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Lempus(x)) & -Vumpus(x)))"]}
{"id": "prontoqa_validation_16", "nl": "Polly is not a zumpus.", "fol": "-zumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Zumpus(x))", "(-Zumpus(Polly))", "Polly is not a zumpus.", "all x.(Polly(x) -> -Zumpus(x))", "Polly is not zumpus.", "(-Zumpus(Polly))", "(-Zombie(Polly))", "Polly is not a zumpus.", "All x.(Polly(x) -> -Zumpus(x))", "all x.(Polly(x) -> -Zumpus(x))", "(-Zumpus(Polly) & Polly(Poly))", "Polly - Zumpus(poly).", "all x.(Polly(x) -> -Zombipus(x))", "(-Zumpus(Polly))", "-Zombipus(Polly)", "-Tompus(Polly)"]}
{"id": "prontoqa_validation_17", "nl": "Brimpuses are grimpuses.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grimpuse(x))", "all x y.((Brompus(x) & Grimpus(y)) -> (Smoothpuse(x) & Grimpuse(y)))", "all x.(Brimpus(x) -> Grimpuse(x))", "(Grimpuse(brimpus) & Grimpuse(brimpus))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Scarpa(x))", "(SmokeyPumpe(brimpus)", "(Grimpuse(brimpus) & Grappus(brimpus))", "all x.(Brompus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Grappus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpuse(x))", "all x.(Brompus(x) -> Gruppuse(x))"]}
{"id": "prontoqa_validation_18", "nl": "Max is a numpus, Max is a zumpus, and Max is not a grimpus.", "fol": "(numpus(Max) & zumpus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x)))", "all x.(Max(x) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) & Toxic(y) & -Grimpus(z)))", "(all x y z.(Max(x) -> Numpus(x)) & (Max(y) -> Zumpus(y)) & (Max(z) -> -Grimpus(z)))", "(all x y z.((Max(x) & Numpus(y)) -> (Max(z) & Zumpus(z))) & ((Max(x) & Grimpus(x)) -> -Murppus(x)))", "all x y z.((Max(x) & Numpus(y) & Zumpus(z) & -Grimpus(z)) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "all x.(Max(x) -> (numpus(x) & zumpus(x) & -grimpus(x)))", "all x.(Max(x) -> (Numpus(x) & Zumpus(x) & -Grimpus(x)))", "all x y z.((Max(x) & Number(y) & Zumpus(z)) -> (Numpus(x,y) | Grimpus(x,z)))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & (Max(x) -> -Grimpus(x)))", "(All x y z.((Max(x) & Numpus(y) & Zumpus(z)) -> (Numpus(x) | Zumpus(z)) | -Grimpus(z)))", "(all x.(Max(x) -> Numpus(x)) & all y.(Max(y) -> Zumpus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x.(Max(x) -> Numpus(x)) & (Max(x) -> Zumpus(x)) & -Max(x)))"]}
{"id": "prontoqa_validation_19", "nl": "Max is not a brimpus.", "fol": "-brimpus(Max)", "prediction": ["all x.(Max(x) -> -Brimpus(x))", "-Brimpus(Max)", "Max is not a Brimpus.", "(-Brimpus(Max))", "all x.(Max(x) -> -Brimpus(x))", "-(Max(Max) & Brimpus(Max))", "(Brimpus(Max) & -Brimpus(Max))", "Max is not a Brimpus.", "Max is not brimpus.", "-Brimpus(Max)", "all x.(Max(x) -> -Brimpus(x))", "(-Brimpus(Max))", "all x.(Max(x) -> -Brumpus(x))", "-Brimpus(Max)", "(-brimpus(Max))", "-Brumpus(Max)"]}
{"id": "prontoqa_validation_20", "nl": "Every sterpus is a vumpus.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x y.((Sterpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Vumpus(x))", "(all x.(Sterpus(x) -> Vumpus(x))", "all x y.((Steerpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vumpus(x))", "exists x.(Stereospheric(x) & Vumpus(x))", "all x.(Strohpus(x) -> Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "exists x.(Sterpus(x) & Sterpus(x) & Vumpus(x))", "all x.(Sterpus(x) -> Vumpus(x))", "all x.(Steerpus(x) -> Vumpus(x))", "exists x.(Steerpus(x) & -Vumpus(x))", "all x.(Stereo(x) -> Vampus(x))"]}
{"id": "prontoqa_validation_21", "nl": "Rex is a zumpus and Rex is an impus and Rex is not a vumpus.", "fol": "(zumpus(Rex) & impus(Rex) & -vumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y))) & all z.(Rex(z) -> -Vumpus(z))))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Imperator(z)) -> (Impossible(x) & -Vumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Imperator(x)) & (Rex(x) -> -Vumpus(x)))", "all x y.((Rex(x) & Zumpus(x) & Is(y)) -> (Impossible(x) & -Vumpus(y)))", "(all x y z.((Rex(x) & Zumpus(x)) -> IsImpossible(x)) & ((Rex(y) & IsNotVumpus(y)) -> -Impossible(y)))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Issue(y)) & (Rex(y) -> -Vumpus(y)))", "all x y z.((Rex(x) & Zumpus(x) & Rex(y) & Imperator(z)) -> (Tompus(x) & Imperator(y) & -Vumpus(z)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Imperator(y))) & all z.(Rex(z) -> -Vumpus(z)))", "all x.(Rex(x) -> (Tompus(x) & IsImpossible(x) & -Vumpus(x)))", "all x y z.((Rex(x) & Tompus(x) & Is(y) & Imperator(z)) -> (Tompus(x) & Imperator(y) & -Vumpus(z)))", "all x.(Rex(x) -> (Tompus(x) | Imperator(x) | -Vumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Issue(x)) & (Rex(x) -> -Vumpus(x)))", "all x y.((Rex(x) & Zumpus(x) & Imperator(y)) -> (-Vumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Issue(y)) & all z.(Rex(z) -> -Vumpus(z))))", "(all x y.(Rex(x) -> Zumpus(x)) & (Rex(y) -> Issuel(y)) & (Rex(y) -> -Vumpus(y)))", "all x y z.((Rex(x) & Zumpus(x) & Is(y) & Rex(z)) -> (Impossible(x) & -Vumpus(z)))"]}
{"id": "prontoqa_validation_22", "nl": "Rex is not a sterpus.", "fol": "-sterpus(Rex)", "prediction": ["all x.(Rex(x) -> -Sterpus(x))", "(-Sterpus(Rex))", "Rex is not sterpus.", "all x.(Rex(x) -> -Sterpus(x))", "Rex is not sterpus.", "(-Stereo(Rex))", "-Sterpus(Rex)", "all x.(Rex(x) -> -Sterepus(x))", "Rex is not sterpus.", "Rex -Sterpus(Rex)", "Rex is notsterpus.", "(-Stereo(Rex) & -Sterpus(Rex))", "(-Stereo(Rex))", "-Sterpus(Rex)", "all x.(Rex(x) -> -Sterpus(x))", "-Sterpus(rex)"]}
{"id": "prontoqa_validation_23", "nl": "Every jompus is a dumpus.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jompus(x) -> Dumpus(x))", "(all x.(Jompus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x y.((Jompus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x y.((Jompus(x) & Dumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "all x.(Jumpus(x) -> Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "exists x.(Jimpus(x) & Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "exists x.(Jimpus(x) & Dumpus(x))", "all x.(Jompus(x) -> Dumpus(x))", "exists x.(Mjompus(x) & Dumpus(x))"]}
{"id": "prontoqa_validation_24", "nl": "Polly is a lempus, Polly is not a dumpus, and Polly is a wumpus.", "fol": "(lempus(Polly) & -dumpus(Polly) & wumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x y z.((Polly(x) & Lempus(x)) -> Polly(y)) & ((Polly(z) & -Dumpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "all x y z.((Polly(x) & Lempus(x) & Polly(y) & Dumpus(z)) -> (-Dumpus(y) & Wumpus(z)))", "(all x y z.((Polly(x) & Lempus(y)) -> (Lempus(x) & -Dumpus(y)) & ((Polly(z) & Wumpus(z)) -> Wumpus(z))))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "all x y z.((Polly(x) & Lempus(y) & Dumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "all x.(Polly(x) -> (Lempus(x) & -Dumpus(x) & Wumpus(x)))", "all x y z.((Polly(x) & Lempus(x) & Dumpus(y) & Wumpus(z)) -> (Lempus(x) & -Dumpus(y) & Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))", "(all x y z.((Polly(x) & Lempus(x)) -> Polly(x)) & ((Polly(y) & Dumpus(y)) -> Polly(z)))", "all x y z.((Polly(x) & Lempus(x) & Polly(y) & Dumpus(z)) -> (-Dumpus(y) & Wumpus(z)))", "all x.(Polly(x) -> (Lempus(x) & -Dumpus(x) & Wumpus(x)))", "(all x.(Polly(x) -> Lempus(x)) & all y.(Polly(y) -> -Dumpus(y))) & all z.(Polly(z) -> Wumpus(z)))", "(all x.(Polly(x) -> Lempus(x)) & (Polly(x) -> -Dumpus(x)) & (Polly(x) -> Wumpus(x)))"]}
{"id": "prontoqa_validation_25", "nl": "Polly is not a jompus.", "fol": "-jompus(Polly)", "prediction": ["all x.(Polly(x) -> -Jompus(x))", "(-Jompus(Polly))", "Polly is not a Jompus.", "all x.(Polly(x) -> -Jompus(x))", "Polly is not a jompus.", "all x.(Polly(x) -> -Jompus(x))", "Polly -Jompus(Polly)", "(-Jompus(Polly))", "-Jimpus(Polly)", "all x.(Polly(x) -> -Jimpus(x))", "all x.(Polly(x) -> -Jompus(x))", "(-jompus(Polly))", "(-Jompus(Polly))", "-Jumpus(Polly)", "All x.(Polly(x) -> -Jompus(x))", "(-jompus(Polly))"]}
{"id": "prontoqa_validation_26", "nl": "Every impus is a numpus.", "fol": "all x. (impus(x) -> numpus(x))", "prediction": ["all x.(Impossible(x) -> Numpus(x))", "all x.(Impact(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "(all x.(Impossible(x) -> Numpus(x))", "all x y.((Issue(x) & Numpus(y)) -> IsNote(x,y))", "all x.(Impossible(x) -> Numpus(x))", "all x y.((Issue(x) & Numpus(y)) -> Is(x,y))", "all x.(Impact(x) -> Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "all x.(Improve(x) -> Numpus(x))", "exists x.(Defimer(x) & Numpus(x))", "all x.(Impossible(x) -> Numpus(x))", "exists x.(Implementation(x) & Numpus(x))", "all x.(Issue(x) -> Numpus(x))", "exists x.(Defimer(x) & Numpus(x))", "all x.(Impossible(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_27", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a yumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Lorpus(x) -> Polly)) & (Nompus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Yampus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Nompus(y) -> Polly(y)))", "all x y z.((Polly(x) & Lorpus(y) & Yumpus(z)) -> (Lorpus(x) & -Numpus(y) & -Yumpus(z)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & -Numpus(y))) & ((Polly(z) & Yumpus(z)) -> (Yumpus(z))))", "(all x.(Lorpus(x) -> Polly(x)) & (-Numpus(x) -> Polly(x))) & (Yumpus(x) -> Polly(x)))", "all x y.((Polly(x) & Lorpus(x) & Polly(y)) -> (-Numpus(y) & Yampus(y)))", "all x y.((Polly(x) & Lorpus(x)) -> (-Lumpus(x) & -Yumpus(y)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Yampus(z)))", "all x.(Polly(x) -> (Lorpus(x) & -Numpus(x) & Yumpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Yumpus(z)) -> (Lorpus(x) & -Numpus(y) & -Yumpus(z)))", "exists x.(Lorpus(x) & -Numpus(x) & Yumpus(x))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x.(Lorph(x) -> Polly(x)) & (-Numpus(x) -> Polly(x))) & (Yumpus(x) -> Polly(x)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Nompus(y) | Yumpus(y))))"]}
{"id": "prontoqa_validation_28", "nl": "Polly is not an impus.", "fol": "-impus(Polly)", "prediction": ["(-Impossible(Polly))", "all x.(Polly(x) -> -Impossible(x))", "Polly -IsImpossible(Polly)", "Polly -Impossible(Polly)", "-IsPolly(Polly)", "(-Impossible(Polly))", "all x.(Polly(x) -> -Impossible(x))", "Polly is not impus.", "Polly is not impus(Polly)", "-(Impossible(Polly))", "All x.(Polly(x) -> -Issue(x))", "-IsPolly(poly)", "(-Impossible(Polly))", "(-IssuedOn(Polly))", "all x.(Polly(x) -> -Impossible(x))", "(-Impossible(Polly))"]}
{"id": "prontoqa_validation_29", "nl": "Alex is a lempus and Alex is a gorpus and Alex is not an impus.", "fol": "(lempus(Alex) & gorpus(Alex) & -impus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Imperator(z)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> -Impossible(x))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & (Alex(x) -> -Impossible(x)))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))", "(all x y.(Alex(x) -> Lempus(x)) & (Alex(y) -> Gorpus(y)) & (Alex(y) -> -Impossible(y)))", "(all x.(Alexa(x) -> Lempus(x)) & all y.(Alexa(y) -> Gorpus(y)) & all z.(Alexa(z) -> -Impossible(z))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Alex(y) -> Gorpus(y)) & all z.(Alex(z) -> -Impossible(z))))", "all x y z.((Alex(x) & Lempus(x) & Gorpus(y) & Is(z)) -> (Lempus(x) & Gorpus(y) & -Impossible(z)))", "(all x.(Alex(x) -> Lempus(x)) & (Alex(x) -> Gorpus(x)) & -Impossible(x)))", "(all x y.(Lempus(x) -> Alex(x)) & (Gorpus(y) -> Alex(y)) & (Impossible(y) | Impossible(y))))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))", "all x y.((Alex(x) & Lempus(x) & Gorpus(y)) -> (-Impossible(x)))", "exists x.(Alex(x) & Lempus(x) & Gorpus(x) & -Ilimination(x))", "all x.(Alex(x) -> (Lempus(x) & Gorpus(x) & -Impossible(x)))"]}
{"id": "prontoqa_validation_30", "nl": "Alex is not a numpus.", "fol": "-numpus(Alex)", "prediction": ["all x.(Alex(x) -> -Numpus(x))", "Alex is not a Numpus.", "all x.(Alex(x) -> -Numpus(x))", "-Numpus(Alex)", "Alex is not a Numpus.", "(-numpus(Alex))", "Alex is not a Numpus(Alex)", "all x.(Alex(x) -> -Numpus(x))", "Alex is not Numpus.", "-Numpus(Alex)", "(-numpus(Alex))", "all x.(Alex(x) -> -Numpus(x))", "Alex is not a Numpus.", "All x.(Alex(x) -> -Numpus(x))", "(-numpus(Alex))", "all x.(Alex(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_31", "nl": "Every brimpus is a yumpus.", "fol": "all x. (brimpus(x) -> yumpus(x))", "prediction": ["all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x y.((Brumpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Brimpus(x) -> Yumpus(x))", "all x y.((Brimpus(x) & Yumpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Yumpa(x))", "(all x.(Brimpus(x) -> Yumpus(x)))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "all x.(Brimpus(x) -> Yumpus(x))", "all x.(Brimpus(x) -> Yampus(x))", "exists x.(Brimpus(x) & Yumpus(x))", "all x.(Brumpus(x) -> Yumpus(x))", "all x.(Brumpus(x) -> Yampus(x))", "exists x.(Brimpus(x) & Yampus(x))", "exists x.(Brampus(x) & Yumpa(x))"]}
{"id": "prontoqa_validation_32", "nl": "Sam is not a yumpus, Sam is a shumpus, and Sam is a sterpus.", "fol": "(-yumpus(Sam) & shumpus(Sam) & sterpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(x) & Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "(all x y z.((Sam(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sam(z) & Humpus(z))) -> Sterpus(z)))", "all x y z.((Sam(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(y) & -Sterpus(z)))", "exists x.(Sam(x) & -Yumpus(x) & Shumpus(x) & Sterpus(x))", "all x.(Sam(x) -> (-Yumpus(x) & -Shumpus(x) & -Sterpus(x)))", "all x y z.((Sam(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & -Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & all y.(Shumpus(y) -> -Sampus(y))) & all z.(Sterpus(z) -> -Yumpus(z)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))", "(all x y z.((Sam(x) & Yumpus(y)) -> -Yumpus(x)) & ((Sam(z) & Humpus(z))) -> Sterpus(z)))", "all x y.((Sam(x) & Sam(y)) -> (-Yumpus(x) | (Shumpus(y) & Sterpus(y))))", "all x y z.((Sam(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & -Sterpus(x) & -Yumpus(y) & -Sterpus(z)))", "(all x.(Yumpus(x) -> -Yumpus(x)) & (Shumpus(x) -> -Yumpus(x)) & (Sterpus(x) -> -Yumpus(x)))", "all x y z.((Sam(x) & Yampus(y) & Humpus(z)) -> (-Yumpus(x) & -Shumpus(x) & -Sterpus(x)))", "(all x.(Sam(x) -> -Yumpus(x)) & (Sam(x) -> Humpus(x)) & (Sam(x) -> Sterpus(x)))"]}
{"id": "prontoqa_validation_33", "nl": "Sam is not a brimpus.", "fol": "-brimpus(Sam)", "prediction": ["all x.(Sam(x) -> -Brimpus(x))", "(-Brimpus(Sam))", "Sam is not a Brimpus.", "all x.(Sam(x) -> -Brimpus(x))", "Sam is not a brimpus.", "(-Brimpus(Sam))", "(Brimpus(Sam) & -Brimpus(Sam))", "all x.(Sam(x) -> -Brumpus(x))", "-Brumpus(Sam)", "-(Brimpus(Sam))", "(Brimpus(sam) & -Brimpus(sam))", "all x.(Sam(x) -> -Brimpus(x))", "(-Brimpus(Sam))", "-Brumpus(Sam)", "all x.(Sam(x) -> -Brumpus(x))", "all x.(Sam(x) -> -Brimpus(x))"]}
{"id": "prontoqa_validation_34", "nl": "Each shumpus is a sterpus.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "(all x.(Shumpus(x) -> Sterpus(x))", "all x y.((Shumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x y.((Shumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x y.((Shumpus(x) & Sterus(y)) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Sterepus(x))", "all x.(Shumpus(x) -> Sterus(x))", "all x.(Shumpus(x) -> Sterpus(x))", "all x.(Shumpus(x) -> Steroid(x))", "all x.(Shumpus(x) -> Sterpus(x))", "exists x.(Shumpus(x) & Sterpus(x))", "exists x.(Shumpus(x) & Sterpus(x))", "exists x.(Shumpus(x) & sterpus(x))"]}
{"id": "prontoqa_validation_35", "nl": "Polly is a dumpus and Polly is a vumpus and Polly is not a sterpus.", "fol": "(dumpus(Polly) & vumpus(Polly) & -sterpus(Polly))", "prediction": ["(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & -Sterpus(x)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & Sterpus(z)) -> (Dumpus(x) & Vumpus(y) & -Sterpus(z)))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x y.(Polly(x) -> Dumpus(x)) & (Polly(y) -> Vumpus(y)) & (Polly(y) -> -Sterpus(y)))", "all x y z.((Polly(x) & Dumpus(x) & Polly(y) & Vumpus(y)) -> (Dumpus(x) & -Sterpus(z)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & Sterpus(z)) -> (Dumpus(x) & Vumpus(y) & -Sterpus(z)))", "(all x.(Polly(x) -> Dumpus(x)) & all y.(Polly(y) -> Vumpus(y)) & all z.(Polly(z) -> -Sterpus(z))))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & (Polly(x) -> -Sterpus(x)))", "all x y.((Polly(x) & Dumpus(x) & Polly(y)) -> (Vumpus(y) & -Sterpus(y)))", "(all x.(Polly(x) -> Dumpus(x)) & (Polly(x) -> Vumpus(x)) & -Sterpus(x)))", "all x y z.((Polly(x) & Dumpus(x) & Vumpus(y) & -Sterpus(z)) -> (Dumpus(x) & Vumpus(y) & -Sterpus(z)))", "all x.(Polly(x) -> (Dupus(x) & Vumpus(x) & -Sterpus(x)))", "all x y.((Polly(x) & Dumpus(x) & Polly(y)) -> (Vumpus(y) & -Sterpus(y)))", "(all x y z.(Polly(x) -> Dumpus(x)) & (Polly(y) -> Vumpus(y)) & (Polly(z) -> -Sterpus(z)))", "(all x y.(Polly(x) -> Dumpus(x)) & (Polly(y) -> Vumpus(y)) & (Polly(y) -> -Sterpus(y)))", "exists x.(Polly(x) & Dumpus(x) & Vumpus(x) & -Sterpus(x))"]}
{"id": "prontoqa_validation_36", "nl": "Polly is not a shumpus.", "fol": "-shumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Shumpus(x))", "(-Shumpus(Polly))", "Polly is not a shumpus.", "all x.(Polly(x) -> -Shumpus(x))", "Polly is notShumpus(Polly)", "(-Shumpus(Polly))", "exists x.(Shumpus(x) & Polly(x))", "all x.(Polly(x) -> -Shumpus(x))", "(-Shumpus(Polly))", "Polly -Shumpus(poly)", "-Shumpus(Polly)", "all x.(Polly(x) -> -Shumpus(x))", "(-Shumpus(Polly,Shumpus))", "(-Shumpus(Polly))", "all x.(Polly(x) -> -Shumpus(x))", "-Shumpus(Poly)"]}
{"id": "prontoqa_validation_37", "nl": "Grimpuses are vumpuses.", "fol": "all x. (grimpus(x) -> vumpus(x))", "prediction": ["all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Vampus(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x y.((Grimpus(x) & Vampus(y)) -> Vampus(x))", "(Vumpus(Grimpus) & Vampus(Grimpus))", "(Vampus(GRuppe) & Vampire(GRuppus))", "(all x.(Grimpus(x) -> Vampuse(x)))", "all x.(Gruppus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vulpuse(x))", "(Vampus(GRumpus) & Vampus(GRumpus))", "all x.(Rambuse(x) -> Vampus(x))", "all x.(Grimpus(x) -> Vumpus(x))", "all x.(Grimpus(x) -> Vampuse(x))", "all x.(Grimpus(x) -> Vulpe(x))"]}
{"id": "prontoqa_validation_38", "nl": "Wren is not a vumpus, Wren is a jompus, and Wren is a lorpus.", "fol": "(-vumpus(Wren) & jompus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & -Jompus(x) & -Lorpus(x)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(-Vumpus(Wren) & Jompus(Wren) & Lorpus(Wren))", "(all x y z.((Wren(x) & Vumpus(y)) -> -Vumpus(x)) & ((Wren(z) & Jompus(z))) -> Lorpus(z)))", "all x y z.((Wren(x) & -Vumpus(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & -Jompus(y) & -Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) & Jompus(x) & Lorpus(x)))", "all x.(Wren(x) -> (-Vumpus(x) & Jompus(x) & Lorpus(x)))", "exists x.(Wren(x) & -Vumpus(x) & Jompus(x) & Lorpus(x))", "(all x.(Wren(x) -> -Vumpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> Lorpus(x)))", "all x y z.((Wren(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & Jompus(y) & -Lorpus(z)))", "all x y z.((Wren(x) & -Vumpus(x) & Jompus(y) & Lorpus(z)) -> (-Vumpus(x) & Jompus(y) & -Lorpus(z)))", "all x y z.((Wren(x) & Vumpus(y) & Jompus(z)) -> (-Vumpus(x) | (-Vumpus(x) & Jompus(z) & Lorpus(z))))", "(all x y z.((Wren(x) & Vumpus(y)) -> -Vumpus(x)) & ((Wren(z) & Jompus(z))) -> Lorpus(z)))", "(all x.(Wren(x) -> -Vumpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> Lorpus(z)))"]}
{"id": "prontoqa_validation_39", "nl": "Wren is not a grimpus.", "fol": "-grimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "Wren is notGrimpus.", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "Wren is notGrimpus.", "-Grimpus(Wren)", "all x.(Wren(x) -> -Grimpus(x))", "-Gruppus(Wren)", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "-Scrappus(Wren,y)", "-Grimpus(wren)", "all x.(Wren(x) -> -Grimpus(x))", "(-Grimpus(Wren))", "(-Grimpus(Wren))."]}
{"id": "prontoqa_validation_40", "nl": "Each grimpus is a tumpus.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "exists x y.(Grimpus(x) & Tumpus(y))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Sgrimpus(x) -> Tumpus(x))", "exists x y.(Grimpus(x) & Tumpus(y))", "(all x.(Grimpus(x) -> Tumpus(x)))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "exists x.(Grampus(x) & Tumpus(x))", "all x.(Sgrimpus(x) -> Tumpus(x))", "exists x.(Grimpus(x) & Tumpus(x))", "all x.(Gravity(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_41", "nl": "Stella is not a tumpus and Stella is a dumpus and Stella is a sterpus.", "fol": "(-tumpus(Stella) & dumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Tumpus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> Sterpus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterpus(z)))", "all x.(Stella(x) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x y z.((Stella(x) & Tumpus(y)) -> -Tumpus(x)) & ((Stella(z) & Dumpus(z))) -> Sterpus(z)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(y) -> Sterpus(y)))", "all x y.((Stella(x) & Tumpus(y)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Tumpus(y) & Dumpus(z)) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(x) -> Sterpus(x)))", "all x.(Stella(x) -> (-Tumpus(x) & Dumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Tumpus(x)) & all y.(Stella(y) -> Dumpus(y))) & all z.(Stella(z) -> Sterpus(z)))", "exists x.(Stella(x) & -Tumpus(x) & Dumpus(x) & Sterpus(x))", "all x y z.((Stella(x) & Dumpus(y) & Sterpus(z)) -> (-Tumpus(x) & Dumpus(y) & Sterpus(z)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Dumpus(y) -> Sterpus(y)))", "all x y.((Stella(x) & Dumpus(y)) -> (-Tumpus(x) & -Sterpus(y)))", "(all x.(Tumpus(x) -> -Tumpus(x)) & all y.(Dumpus(y) -> Sterpus(y)))"]}
{"id": "prontoqa_validation_42", "nl": "Stella is not a grimpus.", "fol": "-grimpus(Stella)", "prediction": ["all x.(Stella(x) -> -Grimpus(x))", "(-Grimpus(Stella))", "Stella is not a Grimpus.", "Stella is notGrimpus(Stella)", "all x.(Stella(x) -> -Grimpus(x))", "(-Grimpus(Stella))", "Stella is not a Grimpus.", "Stella is notGrimpus(Stella)", "all x.(Stella(x) -> -Grimpus(x))", "-Gruppus(Stella)", "(-Grimpus(Stella))", "Stella -Grimpus(Stella)", "-Grimpus(Stella)", "Stella is not a Grimpus.", "Stella -Grimpus(Stella)", "(-Grimpus(Stella))"]}
{"id": "prontoqa_validation_43", "nl": "Lempuses are numpuses.", "fol": "all x. (lempus(x) -> numpus(x))", "prediction": ["all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "(all x.(Lempuse(x) -> Numpuse(x)))", "all x y.((Lempuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Lemme(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x y.((Lempuse(x) & Numpuse(y)) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x y.((Lempuse(x) & Numpus(y)) -> Numpus(x))", "all x.(Lemme(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "(Numpus)", "all x.(Lampuse(x) -> Numpuse(x))", "all x.(Lempuse(x) -> Numpus(x))", "all x.(Lempuse(x) -> Numpuse(x))", "all x.(Lampus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_44", "nl": "Rex is a shumpus, Rex is not a numpus, and Rex is a tumpus.", "fol": "(shumpus(Rex) & -numpus(Rex) & tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & -Numpus(z))) -> Tumpus(z)))", "(all x.(Rex(x) -> Humpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (-Rex(x) -> Numpus(x)) & (-Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "(all x y z.((Rex) & Humpus(y) & Numpus(z)) -> Shumpus(x,y)) & ((Rex) & Numpus(z) & Tumpus(z))) -> Tumpus(z)))", "all x.(Rex(x) -> (Shumpus(x) & -Numpus(x) & Tumpus(x)))", "(all x.(Rex) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "(all x y z.((Rex(x) & Humpus(y)) -> Shumpus(x)) & ((Rex(z) & -Numpus(z))) -> Tumpus(z)))", "(all x.(Rex(x) -> Shumpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) | -Numpus(x) | Tumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Rex(x) -> -Numpus(x)) & (Rex(x) -> Tumpus(x)))", "all x y z.((Rex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Tumpus(z)))", "all x y z.((Rex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_validation_45", "nl": "Rex is not a lempus.", "fol": "-lempus(Rex)", "prediction": ["all x.(Rex(x) -> -Lempus(x))", "(-Lempus(Rex))", "Rex is not a Lempus.", "Rex is notLempus(x)", "-Lempus(Rex)", "all x.(Rex(x) -> -Lempus(x))", "Rex is not Lempus.", "Rex is not a lempus.", "(-Lempus(Rex))", "Rex -Lempus(Rex)", "all x.(Rex(x) -> -Lempus(x))", "-Lempus(Rex)", "Rex is not Lempus.", "(-lempus(Rex))", "-Limpus(Rex)", "(-lempus(Rex))"]}
{"id": "prontoqa_validation_46", "nl": "Each brimpus is a grimpus.", "fol": "all x. (brimpus(x) -> grimpus(x))", "prediction": ["all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Grimpus(x))", "all x y.((Brimpus(x) & Grimpus(y)) -> Has(x,y))", "all x.((Brimpus(x) & Grimpus(x)) -> HasBrimpus(x))", "(all x.(Brimpus(x) -> Grimpus(x)))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "exists x.(Brimpus(x) & Grimpus(x))", "all x.(Brimpus(x) -> Grimpus(x))", "all x.(Brimpus(x) -> Gruppus(x))", "all x.(Brumpus(x) -> Grimpus(x))", "exists x.(Brimpus(x) & Grimpus(x))", "exists x.(Brampus(x) & Grumpus(x))", "exists x.(Brimpus(x) & Grimpus(x))"]}
{"id": "prontoqa_validation_47", "nl": "Max is a jompus and Max is a lempus and Max is not a grimpus.", "fol": "(jompus(Max) & lempus(Max) & -grimpus(Max))", "prediction": ["(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & -Grimpus(z)) -> (Jompus(x) & Lempus(y) & -Grimpus(z)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z))))", "(all x y.((Max(x) & Jompus(x)) -> Max(x)) & ((Max(y) & Lempus(y)) -> -Grimpus(y)))", "all x y.((Max(x) & Jompus(x) & Lempus(y)) -> (Jompus(x) & Lempus(y) & -Grimpus(y)))", "all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) & Lempus(z) & -Grimpus(z)))", "all x.(Max(x) -> (Jompus(x) | Lempus(x) | -Grimpus(x)))", "(all x y z.((Max(x) & Jompus(y) & Lempus(z)) -> (Jompus(x) | Lempus(z))) & ((Max(x) & Grimpus(x)) -> -Grimpus(x)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))", "(Jompus(Max) & Lempus(Max) & -Grimpus(Max))", "all x y z.((Max(x) & Jompus(x) & Lempus(y) & Gruppus(z)) -> (Jompus(x) & Lempus(y) & -Grimpus(z)))", "(all x y.(Jompus(x) -> Max(x)) & (Lempus(y) -> Max(y)) & (Grimpus(y) -> Max(y)))", "all x.(Max(x) -> (Jompus(x) | Lempus(x) | -Grimpus(x)))", "(all x.(Max(x) -> Jompus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> -Grimpus(z))))", "all x y.((Max(x) & Jompus(x) & Lempus(y)) -> (Jompus(x) | Grimpus(y)))", "(all x.(Max(x) -> Jompus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_validation_48", "nl": "Every tumpus is a gorpus.", "fol": "all x. (tumpus(x) -> gorpus(x))", "prediction": ["all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x y.((Tumpus(x) & Gorpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "all x.(Tumpus(x) -> Gorpus(x))", "exists x.(Tumpus(x) & Gorpus(x))", "exists x.(Tompus(x) & Gorpus(x))", "exists x.(Tumpus(x) & Gorpus(x))"]}
{"id": "prontoqa_validation_49", "nl": "Sam is a zumpus, Sam is not a gorpus, and Sam is a wumpus.", "fol": "(zumpus(Sam) & -gorpus(Sam) & wumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(z)))", "(all x y z.((Sam(x) & Zumpus(y)) -> (Tompus(z) & -Gorpus(z))) & ((Sam(x) & Wumpus(x)) -> (Wumpus(x))))", "all x y z.((Sam(x) & Zumpus(y) & Gorpus(z)) -> (-Sam(x) & Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "(all x y z.((Sam(x) & Zumpus(x)) -> (Sam(y) & -Gorpus(y)) & ((Sam(z) & Wumpus(z)) -> (Wumpus(z))))", "all x.(Sam(x) -> (Tompus(x) | -Gorpus(x) | Wumpus(x)))", "(all x.(SameDay(x) -> Zumpus(x)) & (SameDay(x) -> -Gorpus(x)) & (SameDay(x) -> Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (-Sam(x) -> Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z)) -> (-Gorpus(y) & Wumpus(z)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))", "all x y z.((Sam(x) & Zumpus(y) & Gorpus(z)) -> (-Sam(x) & Wumpus(x)))", "exists x.(Sam(x) & Zumpus(x) & -Gorpus(x) & Wumpus(x))", "all x y z.((Sam(x) & Zumpus(x) & Sam(y) & Gorpus(z) & Wumpus(x)) -> (Sam(y) & -Sam(y) & Sam(z)))", "all x.(Sam(x) -> (Tompus(x) | -Gorpus(x) | Wumpus(x)))", "(all x.(Sam(x) -> Zumpus(x)) & (Sam(x) -> -Gorpus(x)) & (Sam(x) -> Wumpus(x)))"]}
{"id": "prontoqa_validation_50", "nl": "Sam is not a tumpus.", "fol": "-tumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam))", "all x.(Sam(x) -> -Tumpus(x))", "Sam is notTumpus(Sam).", "(-Tumpus(Sam))", "Sam is notTumpus(sam).", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam))", "-Tumpus(Sam)", "all x.(Sam(x) -> -Tumpus(x))", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam)", "-Tumpus(sam)", "all x.(Sam(x) -> -Tumpus(x))", "(-Tumpus(Sam)", "-Tumpus(sam)"]}
{"id": "prontoqa_validation_51", "nl": "Each vumpus is a tumpus.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "(all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))", "exists x.(Vumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_validation_52", "nl": "Rex is a wumpus, Rex is a yumpus, and Rex is not a tumpus.", "fol": "(wumpus(Rex) & yumpus(Rex) & -tumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumpus(x)) & ((Rex(z) & Yumpus(z)) -> Yumpus(z)) & ((Rex(x) & -Tumpus(x)) -> -Wumpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> (Wumpus(x) | Yumpus(z) | -Tumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> (Wumpus(x) & Yumpus(z) & -Tumpus(x)))", "all x.(Rex(x) -> (Wumpus(x) & Yumpus(x) & -Tumpus(x)))", "(all x.(Rex(x) -> Wumpus(x)) & all y.(Rex(y) -> Yumpus(y)) & all z.(Rex(z) -> -Tumpus(z))))", "(all x.(Rex) -> Wumpus(x)) & (Rex(x) -> Yumpus(x)) & (Rex(x) -> -Tumpus(x)))", "(all x y z.((Rex(x) & Wumpus(y)) -> Wumpus(x)) & ((Rex(z) & Yumpus(z))) -> -Tumpus(z)))", "all x.(Rex(x) -> (Wumpus(x) | Yumpus(x) | -Tumpus(x)))", "all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> (Wumpus(x) | Yumpus(z) & -Tumpus(x)))", "(all x y z.((Rex(x) & Wumpus(y) & Yumpus(z)) -> Wumpus(x,y)) & ((Rex(x) & Yumpus(x,z)) -> -Tumpus(x)))", "all x y z.((Rex(x) & Wumpus(x) & Yumps(y) & -Tumpus(z)) -> (Wumpus(x) | Yumps(y) & -Tumpus(z)))", "all x y z.((Rex(x) & Yumpus(y) & Tumpus(z)) -> (Wumpus(x) & Yumpus(y) & -Tumpus(z)))", "(all x.(Rex(x) -> Wumpus(x)) & (Yumpus(x) & -Tumpus(x)))"]}
{"id": "prontoqa_validation_53", "nl": "Rex is not a vumpus.", "fol": "-vumpus(Rex)", "prediction": ["all x.(Rex(x) -> -Vumpus(x))", "(-Vumpus(Rex))", "Rex is not a Vumpus.", "-Vumpus(Rex)", "Rex is not a Vumpus.", "all x.(Rex(x) -> -Vumpus(x))", "Rex is not a vumpus.", "Rex -Vumpus(x)", "-Vumpus(Rex)", "(Vumpus(Rex) & -Vumpus(Rex))", "(-Vimpus(Rex))", "Rex is not a Vumpus(x)", "all x.(Rex(x) -> -Vumpus(x))", "Rex -Vumpus(Rex)", "-Vumpus(Rex)", "(-Vumpus(Rex))"]}
{"id": "prontoqa_validation_54", "nl": "Every gorpus is a rompus.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "exists x.(Gorpus(x) & Rompus(x))", "exists x.(Gorpus(x) & Roman(x))", "exists x.(Gorpus(x) & Rrompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "exists x.(Gorpus(x) & Rompus(x))"]}
{"id": "prontoqa_validation_55", "nl": "Wren is not a rompus, Wren is a dumpus, and Wren is a grimpus.", "fol": "(-rompus(Wren) & dumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) | (Wren(x) & Grimpus(x)))))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z))) -> Grimpus(z)))", "all x.(Wren(x) -> (-Rompus(x) & Dumpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) & all y.(Wren(y) -> Dumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z)) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) | (-Rompus(x) & Dumpus(x))) | (-Rompus(x) & Dumpus(x) & Grimpus(x))))", "(all x.(Wren(x) -> -Rompus(x)) & ((Wren(x) & Dumpus(x)) | (-Rompus(x) & Grimpus(x)))))", "all x y z.((Wren(x) & Dumpus(y) & Gruppus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) & Dumpus(y) & Grimpus(z)))", "(all x y z.((Wren(x) & Rompus(y)) -> -Rompus(x)) & ((Wren(z) & Dumpus(z)) -> Grimpus(z)))", "(all x.(Wren(x) -> -Rompus(x)) | (Wren(x) -> Dumpus(x))) | (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Dumpus(y) & Grimpus(z)) -> (-Rompus(x) | Dumpus(y) | Grimpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Gruppus(z)) -> (-Rompus(x) & Dumpus(y) & Gruppus(z)))"]}
{"id": "prontoqa_validation_56", "nl": "Wren is not a gorpus.", "fol": "-gorpus(Wren)", "prediction": ["all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "Wren is not a Gorpus.", "(-Gorpus(Wren))", "all x.(Wren(x) -> -Gorpus(x))", "-Gorpus(Wren)", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren))", "-Gorpus(Wren)", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren)).", "all x.(Wren(x) -> -Gorpus(x))", "-Gorpus(wren)", "all x.(Wren(x) -> -Gorpus(x))", "(-Gorpus(Wren)"]}
{"id": "prontoqa_validation_57", "nl": "Jompuses are wumpuses.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x y.((Jompuse(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "(Wumpuse(jompus) & Wumpus(jompus))", "all x y.((Jompuse(x) & Wumpus(y)) -> Wumpus(x))", "(Wumpuse(jompuse) & Wumpus(jompuse,w))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "(Wumpuse(jompus) & HasWumpus(jompus))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompuse(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wampus(x))", "all x.(Jomess(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_58", "nl": "Fae is a zumpus, Fae is not a wumpus, and Fae is a rompus.", "fol": "(zumpus(Fae) & -wumpus(Fae) & rompus(Fae))", "prediction": ["(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.((Fae(x) & Tompus(y) & Wumpus(z)) -> (-Tompus(x) & -Wumpus(y) & Rompus(z)))", "(all x y z.((Fae(x) & Zumpus(x)) -> (Fae(y) & -Wumpus(y))) & ((Fae(z) & Rompus(z)) -> (Fae(z) & -Wumpus(z))))", "all x y z.((Fae(x) & Zumpus(x) & Fae(y) & Rumpus(z)) -> (-Wumpus(y) & Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x.(Fae(x) -> (Tompus(x) | -Wumpus(x) | Rompus(x)))", "(all x y z.((Fae(x) & Zumpus(x)) -> (Tompus(x) & -Wumpus(y)) & ((Fae(z) & Rompus(z)) -> (Rompus(z)))))", "all x y z.((Fae(x) & Tompus(y) & Wumpus(z)) -> (-Wumpus(x) & Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y)) & all z.(Fae(z) -> Rompus(z))))", "all x y z.((Fae(x) & Zumpus(x) & Fae(y) & Rumpus(z)) -> (-Wumpus(y) & Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))", "all x y z.(Fae(x) & Zumpus(x) & Fae(y) & -Wumpus(y) & Rompus(z))", "(all x y z.((Fae(x) & Zumpus(y)) -> Toss(x,y)) & ((Fae(z) & -Wumpus(z)) -> Rompus(z)))", "all x.(Fae(x) -> (Tompus(x) | -Wumpus(x) | Rompus(x)))", "(all x.(Fae(x) -> Zumpus(x)) & all y.(Fae(y) -> -Wumpus(y)) & all z.(Fae(z) -> Rompus(z)))", "(all x.(Fae(x) -> Zumpus(x)) & (Fae(x) -> -Wumpus(x)) & (Fae(x) -> Rompus(x)))"]}
{"id": "prontoqa_validation_59", "nl": "Fae is not a jompus.", "fol": "-jompus(Fae)", "prediction": ["all x.(Fae(x) -> -Jompus(x))", "-Jompus(Fae)", "(Jompus(Fae) & -Jompus(Fae))", "(-Jompus(Fae))", "all x.(Fae(x) -> -Jompus(x))", "(-Jimpus(Fae))", "-Jompus(Fae)", "all x.(Fae(x) -> -Jimpus(x))", "(Jompus(Fae) & -Jompus(Fae))", "(Jompus(fae) | Jompus(fae))", "-Jumpus(Fae)", "all x.(Fae(x) -> -Jompus(x))", "-Jompus(Fae)", "all x.(Fae(x) -> -Jimpus(x))", "is notjompus.", "-Jimpus(Fae)"]}
{"id": "prontoqa_validation_60", "nl": "Each grimpus is a sterpus.", "fol": "all x. (grimpus(x) -> sterpus(x))", "prediction": ["all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x y.((Grimpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "(all x.(Grimpus(x) -> Sterpus(x))", "all x y.((Grimpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Gruppus(x) -> Sterpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Strictus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Sterpus(x))", "all x.(Grampus(x) -> Sterpus(x))", "exists x.(Grimpus(x) & Steropos(x))", "exists x.(Gruppus(x) & Sterpus(x))", "all x.(Grampus(x) -> Sterpus(x))", "exists x.(Grimpus(x) & Sterpus(x))", "exists x.(Gravity(x) & Sterpus(x))"]}
{"id": "prontoqa_validation_61", "nl": "Sally is a rompus and Sally is not a sterpus and Sally is a brimpus.", "fol": "(rompus(Sally) & -sterpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Rrompus(x) & -Sterpus(y) & Brimpus(z)) -> (Rompus(x) & Brimpus(y)))", "all x.(Sally(x) -> (Rompus(x) & -Sterpus(x) & Brimpus(x)))", "(all x.(Rompus(x) -> Sally(x)) & (-Sterpus(x) -> Sally(x)) & (Brimpus(x) -> Sally(x)))", "all x y.((Sally(x) & Rrompus(x) & -Sterpus(y)) -> (Brimpus(x) & Brimpus(y)))", "(all x y.(Rompus(x) -> Sally(x)) & (-Sterpus(y) -> Sally(y))) & (Brimpus(y) -> Sally(y)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Rompus(x)) & (-Sterpus(x) & -Brimpus(x)))", "all x y z.((Sally(x) & Rimpus(y) & Sterpus(z)) -> (Rompus(x) & -Sterpus(y) & Brimpus(z)))", "all x.(Sally(x) -> (Rompus(x) & -Sterpus(x) & Brimpus(x)))", "(all x y.(Rompus(x) -> Sally(x)) & (Sterpus(y) -> -Sterpus(y)) & (Brimpus(y) -> Sally(y)))", "exists x.(Rompus(x) & -Sterpus(x) & Brimpus(x))", "all x y.((Sally(x) & Rimpus(x)) -> (Rompus(x) & -Sterepus(y) & Brimpus(x)))", "(all x.(Rompus(x) -> Sally(x)) & (-Sterpus(x) -> Sally(x)) & (Brimpus(x) -> Sally(x)))", "(all x.(Sally(x) -> Rompus(x)) & (Sally(x) -> -Sterepus(x)) & (Sally(x) -> Brimpus(x)))", "all x.(Sally(x) -> (Rompus(x) & -Sterepus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_62", "nl": "Sally is not a grimpus.", "fol": "-grimpus(Sally)", "prediction": ["all x.(Sally(x) -> -Grimpus(x))", "Sally is not a Grimpus.", "(-Grimpus(Sally))", "Sally n'est pas Grimpus.", "Sally is not a Grimpus.", "all x.(Sally(x) -> -Grimpus(x))", "Sally -Grimpus(Sally)", "(-Grimpus(Sally))", "all x.(Sally(x) -> -Grimpus(x))", "-Grimpus(Sally)", "Sally is not a Grimpus.", "Sally n'est pas Grimpus.", "(-Grimpus(Sally))", "Sally is not a Grimpus.", "Sally is notGrimpus.", "-Grimpus(Sally)"]}
{"id": "prontoqa_validation_63", "nl": "Vumpuses are tumpuses.", "fol": "all x. (vumpus(x) -> tumpus(x))", "prediction": ["all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(v) & -Tumpus(v) & HasTumpus(v))", "(all x.(Vumpus(x) -> Tumpus(x)))", "all x.(Vumpus(x) -> Tumpus(x))", "(Tumpuse(v) & Tumpus(v))", "all x y.((Vumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))", "all x.(Vumpuse(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Voluptus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumpus(x))", "all x.(Vumpus(x) -> Tumulus(x))"]}
{"id": "prontoqa_validation_64", "nl": "Sam is not a tumpus, Sam is a jompus, and Sam is a zumpus.", "fol": "(-tumpus(Sam) & jompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Tompus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Tompus(z)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) & All z.(Zumpus(z)) -> -Tumpus(x)))", "all x.(Sam(x) -> (-Tumpus(x) & Jompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Zumpus(z)))", "(all x y z.((Sam(x) & Tumpus(y)) -> -Tumpus(x)) & ((Sam(z) & Jompus(z)) -> Zumpus(z)))", "(all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> -Tumpus(x)) & ((Sam(x) & Zumpus(x)) -> Jompus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & (Jompus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Sam(y) -> Jompus(y)) & all z.(Sam(z) -> Zumpus(z))))", "all x.(Sam(x) -> (-Tumpus(x) & Jompus(x) & Zumpus(x)))", "all x y z.((Sam(x) & Tompus(y) & Jompus(z)) -> (-Tumpus(x) & -Jimpus(y) & -Zumpus(z)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & -Jumpus(y) & -Zumpus(z)))", "exists x.(Sam(x) & -Tumpus(x) & Jompus(x) & Zumpus(x))", "(all x.(Sam(x) -> -Tumpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Tumpus(y) & Jompus(z)) -> (-Tumpus(x) & Zumpus(x)))", "(all x.(Sam(x) -> -Tumpus(x)) & all y.(Jompus(y) -> Zumpus(y)))"]}
{"id": "prontoqa_validation_65", "nl": "Sam is not a vumpus.", "fol": "-vumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Vumpus(x))", "(-Vumpus(Sam))", "Sam is not a Vumpus.", "all x.(Sam(x) -> -Vumpus(x))", "Sam is not a vumpus.", "(-Vumpus(Sam))", "(Vumpus(Sam) & -Vumpus(Sam))", "-Vumpus(Sam)", "all x.(Sam(x) -> -Vumpus(x))", "-Vumpus(Sam)", "Sam is not a Vumpus.", "(-Vimpus(Sam))", "all x.(Sam(x) -> -Vimpus(x))", "all x.(Sam(x) -> -Vumpus(x))", "(-Vumpus(Sam)).", "-Vimpus(sam)"]}
{"id": "prontoqa_validation_66", "nl": "Grimpuses are zumpuses.", "fol": "all x. (grimpus(x) -> zumpus(x))", "prediction": ["all x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "all x y.((Grimpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Gruppuse(x) -> Zumpuse(x))", "all x.(Grimpuse(x) -> Zumpuse(x))", "(All x.(Grimpuse(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpus(x))", "(all x.(Grimpuse(x) -> Zumpuse(x))", "all x y.((Grimpus(x) & Zumpus(y)) -> Tosspus(x))", "all x.(Gruppus(x) -> Zumpus(x))", "all x.(Rambuse(x) -> Zumpuse(x))", "(All x.(Grimpus(x) -> Zumpus(x))", "all x.(Grimpus(x) -> Zumpus(x))", "All x.(Gruppuse(x) -> Zumpuse(x))", "all x.(Grimpus(x) -> Zumpuse(x))", "All x.(Grimpuse(x) -> Zumpuse(x))"]}
{"id": "prontoqa_validation_67", "nl": "Polly is a yumpus and Polly is not a zumpus and Polly is a numpus.", "fol": "(yumpus(Polly) & -zumpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Yampus(y) & Polly(z)) -> (Yumpus(x) & -Zumpus(z) & Numpus(z)))", "all x y.((Polly(x) & Yampus(x)) -> (-Tompus(x) & Numpus(y)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Zumpus(y) -> Polly(y))) & (-Zumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Yumpus(y) & Polly(z)) -> (-Tompus(z) & Numpus(z)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "all x.(Polly(x) -> (Yumpus(x) & -Zumpus(x) & Numpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (Yumpus(x) & -Zumpus(y) & Numpus(y)))", "(yumpus(poly) & -zumpus(poly) & -numpus(poly))", "exists x.(Polly(x) & Yampus(x) & -Zumpus(x) & Numpus(x))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))", "(all x.(Polly(x) -> Yumpus(x)) & (Polly(x) -> -Tompus(x)) & (Polly(x) -> Numpus(x)))", "(all x y.(Yumpus(x) -> Polly(x)) & (-Zumpus(y) -> Polly(y))) & (-Zumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Yampus(y) & Polly(z)) -> (Yumpus(x) & -Zumpus(z) & -Numpus(z)))", "all x y.((Polly(x) & Yampus(x)) -> (-Tompus(x) & Numpus(y)))", "(all x.(Polly(x) -> Yampus(x)) & (Polly(x) -> -Zumpus(x)) & (Polly(x) -> Numpus(x)))"]}
{"id": "prontoqa_validation_68", "nl": "Polly is not a grimpus.", "fol": "-grimpus(Polly)", "prediction": ["all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "Polly is notGrimpus(Polly)", "all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "Polly is notGrimpus(poly)", "(-Grimpus(Polly))", "all x.(Polly(x) -> -Grimpus(x))", "Polly -Grimpus(Polly)", "-Gruppus(Polly)", "Polly is notGrimpus.", "-Grimpus(Polly)", "Polly -Grimpus(polly)", "all x.(Polly(x) -> -Grimpus(x))", "(-Grimpus(Polly))", "(-Grimpus(Polly))"]}
{"id": "prontoqa_validation_69", "nl": "Each shumpus is a grimpus.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x y.((Shumpus(x) & Grimpus(y)) -> Is(x,y))", "(all x.(Shumpus(x) -> Grimpus(x)))", "all x.(Shumpus(x) -> Grimpus(x))", "all x y.((Shumpus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Gruppus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "all x.(Shumpus(x) -> Grumpus(x))", "exists x.(Shumpus(x) & Grimpus(x))", "exists x.(Shumpus(x) & Gruppus(x))", "exists x.(Shumpus(x) & Grimpus(x))", "exists x.(shumpus(x) & Grumpus(x))"]}
{"id": "prontoqa_validation_70", "nl": "Polly is a lorpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "(all x.(Lorpus(x) -> Polly(x)) & all y.(Gorpus(y) -> Polly(y))) & all z.(Grimpus(z) -> -Lorpus(z)))", "all x y.((Polly(x) & Lorpus(x) & Gorpus(y)) -> (Lorpus(x) & -Grimpus(y)))", "all x y z.((Polly(x) & Lorpus(y) & Gorpus(z)) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Gorpus(y) & -Grimpus(y)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & Gorpus(y))) & ((Polly(z) & Grimpus(z)) -> -Lorpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "all x.(Polly(x) -> (Lorpus(x) & Gorpus(x) & -Grimpus(x)))", "exists x.(Polly(x) & Lorpus(x) & Gorpus(x) & -Grimpus(x))", "(all x.(Lorpus(x) -> Polly)) & (Gorpus(x) -> Polly)) & (Grimpus(x) -> -Lorpus(x)))", "all x y.((Polly(x) & Lorpus(x) & Gorpus(y)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(y)))", "all x y z.((Polly(x) & Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Gorpus(y) & Polly(z)) -> (Lorpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Gorpus(y) -> Polly(y)) & (Grimpus(y) -> -Grimpus(y)))"]}
{"id": "prontoqa_validation_71", "nl": "Each impus is a tumpus.", "fol": "all x. (impus(x) -> tumpus(x))", "prediction": ["all x.(Issue(x) -> Tumpus(x))", "all x.(Impossible(x) -> Tumpus(x))", "all x y.((Issue(x) & IsTumpus(y)) -> IsTumpus(x))", "(all x.(Impossible(x) -> Tumpus(x)))", "all x.(Impact(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "all x y.((Issue(x) & Tompus(y)) -> IsTumpus(x))", "all x.(Impossible(x) -> Tumulus(x))", "all x.(Impact(x) -> Tumpus(x))", "all x.(Issue(x) -> Tumpus(x))", "exists x.(Impact(x) & Tumpus(x))", "all x.(Impossible(x) -> Tumulus(x))", "exists x.(Impossible(x) & Tumpus(x))", "exists x.(Impedus(x) & Tumulus(x))", "all x.(Issue(x) -> Tumpus(x))", "exists x.(Impossible(x) & Tumpus(x))"]}
{"id": "prontoqa_validation_72", "nl": "Rex is a numpus and Rex is not a tumpus and Rex is a gorpus.", "fol": "(numpus(Rex) & -tumpus(Rex) & gorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(x) & Tumpus(y) & Gorpus(z)) -> (Numpus(x) & -Tumpus(y) & Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x y z.((Rex(x) & Numpus(x)) -> Numpus(x)) & ((Rex(y) & -Tumpus(y)) -> Gorpus(z)))", "(all x y.(Rex(x) -> Numpus(x)) & (Rex(y) -> -Tumpus(y)) & (Rex(y) -> Gorpus(y)))", "all x.(Rex(x) -> (Numpus(x) & -Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(x) & Rex(y) & Tumpus(z)) -> (-Tumpus(y) & Gorpus(z)))", "all x y.((Rex(x) & Numpus(x) & -Tumpus(y)) -> Gorpus(x))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z)))", "(all x.(Rex(x) -> Numpus(x)) & (-Tumpus(x) & Gorpus(x)))", "all x y z.((Rex(x) & Numpus(y) & Tumpus(z)) -> (-Tumpus(x) & Gorpus(x)))", "all x.(Rex(x) -> (Numpus(x) & -Tumpus(x) & Gorpus(x)))", "(all x y.(Numpus(x) -> Rex)) & (Tumpus(y) -> -Tumpus(y)) & (Gorpus(y) -> Rex)))", "all x y.((Rex(x) & Numpus(x) & Rex(y)) -> (-Tumpus(y) & Gorpus(y)))", "(all x.(Rex(x) -> Numpus(x)) & (Rex(x) -> -Tumpus(x)) & (Rex(x) -> Gorpus(x)))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Rex(y) -> -Tumpus(y))) & all z.(Rex(z) -> Gorpus(z)))"]}
{"id": "prontoqa_validation_73", "nl": "Rex is not an impus.", "fol": "-impus(Rex)", "prediction": ["-Impossible(Rex)", "Rex -Impossible(Rex)", "all x.(Rex(x) -> -Impossible(x))", "Rex is not impused.", "-IllegalRex(x)", "(-Impossible(Rex))", "-(Rex(x) & IsNot(x))", "(-IsRex(Rex))", "all x.(Rex(x) -> -Impossible(x))", "Rex -Impossible(re)", "-Illegal(Rex)", "All x.(Rex(x) -> -Is(x,Is(x,Is(x)))", "Rex is not impus.", "all x.(Rex(x) -> -Impossible(x))", "(-Impossible(Rex))", "(-IsRex(Rex))"]}
{"id": "prontoqa_validation_74", "nl": "Lorpuses are zumpuses.", "fol": "all x. (lorpus(x) -> zumpus(x))", "prediction": ["all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x y.((Lorpuse(x) & Zumpuse(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "All x y.((Lorpus(x) & Zumpus(y)) -> Toss(x,y))", "(Zombie(lorpus) & Lorpus(lorpus))", "All x y.((Lorpuse(x) & Zumpus(y)) -> Toss(x,y))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "(Zumpuse(lorpus) & Tossain(lorpus))", "all x.(Lorpus(x) -> Zumpuse(x))", "all x.(Lurpise(x) -> Zumpuse(x))", "all x.(Lorpuse(x) -> Zumpuse(x))", "all x.(Lorpus(x) -> Zumpus(x))", "all x.(Lorph(x) -> Zumpuse(x))"]}
{"id": "prontoqa_validation_75", "nl": "Sam is a lempus, Sam is not a zumpus, and Sam is a yumpus.", "fol": "(lempus(Sam) & -zumpus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(x) & Yampus(y)))", "(all x y z.((Sam(x) & Lempus(x)) -> (Lempus(x) & -Zumpus(y)) & ((Sam(z) & Yumpus(z))) -> (Yumpus(z))))", "(all x.(SameDay(x) -> Lempus(x)) & (SameDay(x) -> -Zumpus(x)) & (SameDay(x) -> Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(x) & Yumpus(y)))", "(all x y z.((Sam(x) & Lempus(x)) -> (Lempus(x) | -Zumpus(x)) | (Yumpus(y) & Sam(z))))", "all x y.((Sam(x) & Lempus(x)) -> (-Zumpus(x) & Yumpus(y)))", "all x.(Sam(x) -> (Lempus(x) & -Zumpus(x) & Yumpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "exists x.(Sam(x) & Lempus(x) & -Zumpus(x) & Yumpus(x))", "(all x.(Sam) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Lempus(y) & Zumpus(z)) -> (Lempus(x) & -Zumpus(y) & Yumpus(z)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(y) & Yumpus(z)))", "all x y z.((Sam(x) & Lempus(x) & Sam(y) & Zumpus(z)) -> (-Sam(x,y) & Yumpus(y)))", "(all x.(Sam(x) -> Lempus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Yumpus(x)))"]}
{"id": "prontoqa_validation_76", "nl": "Sam is not a lorpus.", "fol": "-lorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Lorpus(x))", "(-Lorpus(Sam))", "Sam is not a lorpus.", "all x.(Sam(x) -> -Lorpus(x))", "(-Lorpus(Sam))", "(-Lorpus(Sam) & -Lorpus(Sam))", "Sam is notLorpus(Sam).", "(Lorpus(Sam) & -Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))", "-Lorpus(Sam)", "(-Lorpus(Sam) & -Lorpus(Sam))", "all x.(Sam(x) -> -Lorpus(x))", "all x.(Sam(x) -> -Lorpus(x))", "-Lorpus(sam)", "all x.(Sam(x) -> -Lorpus(x))", "-Lorpus(Sam)"]}
{"id": "prontoqa_validation_77", "nl": "Every impus is a grimpus.", "fol": "all x. (impus(x) -> grimpus(x))", "prediction": ["all x.(Issue(x) -> Grimpus(x))", "all x.(Impact(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))", "all x y.((Issue(x) & Grimpus(y)) -> IsSurprise(x))", "all x.(Implementation(x) -> Grimpus(x))", "all x.(Impossible(x) -> Grimpus(x))", "(all x.(Impact(x) -> Grimpus(x))", "all x y.((Issue(x) & Grimpus(y)) -> IsStorm(x))", "all x.((Impossible(x) & Grimpus(x)) -> Is(x))", "all x.(Impact(x) -> Grimpus(x))", "all x.(Issue(x) -> Grimpus(x))", "all x.(Is(x) -> Grimpus(x))", "all x.(Impossible(x) -> Gruppus(x))", "exists x.(Defimer(x) & Grimpus(x))", "exists x.(Defimer(x) & Grimpus(x))", "exists x.(Defimer(x) & Grimpus(x))"]}
{"id": "prontoqa_validation_78", "nl": "Polly is a gorpus and Polly is not a grimpus and Polly is a lorpus.", "fol": "(gorpus(Polly) & -grimpus(Polly) & lorpus(Polly))", "prediction": ["(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(z)) -> (-Grimpus(y) & Lorpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y.((Polly(x) & Gorpus(x) & Polly(y)) -> (-Grimpus(y) & -Lorpus(y)))", "(all x y.(Gorpus(x) -> Polly(x)) & (-Grimpus(y) -> Polly(y))) & (Lorpus(y) -> Polly(y)))", "(all x y z.((Polly(x) & Gorpus(x)) -> Polly(y)) & ((Polly(z) & -Grimpus(z)) -> Lorpus(z)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Grimpus(z)) -> (-Grimpus(y) & -Lorpus(y)))", "all x.(Polly(x) -> (Gorpus(x) & -Grimpus(x) & Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y z.((Polly(x) & Gorpus(x) & Polly(y) & Gruppa(z)) -> (-Grimpus(y) & Lorpus(z)))", "exists x.(Polly(x) & Gorpus(x) & -Grimpus(x) & Lorpus(x))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))", "all x y.((Polly(x) & Gorpus(x) & Polly(y)) -> (-Grimpus(y) & Lorpus(y)))", "(all x y.(Gorpus(x) -> Polly(x)) & (-Grimpus(y) -> Polly(y))) & (Lorpus(y) -> Polly(y)))", "all x.(Polly(x) -> (Gorpus(x) & -Grimpus(x) & -Lorpus(x)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)) & (Polly(x) -> Lorpus(x)))"]}
{"id": "prontoqa_validation_79", "nl": "Every vumpus is a dumpus.", "fol": "all x. (vumpus(x) -> dumpus(x))", "prediction": ["all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "(all x.(Vumpus(x) -> Dumpus(x))", "exists x y.(Vumpus(x) & Dumpus(y))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.((Vumpus(x) & Dumpus(x)) -> Has(x,y))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x y.(Vumpus(x) & Dumpus(y))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "exists x.(Vumpus(x) & Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))", "all x.(Vumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_80", "nl": "Polly is a rompus, Polly is a brimpus, and Polly is not a dumpus.", "fol": "(rompus(Polly) & brimpus(Polly) & -dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "(all x y z.((Polly(x) & Rompus(x)) -> Polly(y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)) & -Dumpus(z)))", "all x.(Polly(x) -> (Rompus(x) & Brimpus(x) & -Dumpus(x)))", "all x y z.((Polly(x) & Rompus(x) & Brimpus(y) & Dumpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) | Polly(x) & -Dumpus(x)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) | Polly(x) & -Dumpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))", "all x.(Polly(x) -> (Rompus(x) | Brimpus(x) | -Dumpus(x)))", "(all x y z.((Polly(x) & Rompus(x)) -> Polly(y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)) & ((Polly(z) & Dumpus(z)) -> -Dumpus(z))))", "(all x.(Polly(x) -> Rompus(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> -Dumpus(x)))", "all x y z.((Polly(x) & Rimpus(y) & Brimpus(z)) -> (Rompus(x) & Brimpus(y) & -Dumpus(z)))", "(all x y z.((Polly(x) & Rompus(y)) -> Polly(x,y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)) & -Dumpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> -Dumpus(z))))"]}
{"id": "prontoqa_validation_81", "nl": "Polly is not a vumpus.", "fol": "-vumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Vumpus(x))", "(-Vumpus(Polly))", "Polly is not a Vumpus.", "all x.(Polly(x) -> -Vumpus(x))", "Polly -Vumpus(Polly)", "(-Vumpus(Polly))", "Polly is not a vumpus.", "(Vumpus(Polly) & -Vumpus(Polly))", "-Vumpus(Polly)", "all x.(Polly(x) -> -Vumpus(x))", "all x.(Polly(x) -> -Vumpus(x))", "(-Vumpus(Polly))", "Polly -Vumpus(Polly)", "all x.(Polly(x) -> -Vumpus(x))", "-Vumpus(Polly,y)", "(-Vimpus(Polly))"]}
{"id": "prontoqa_validation_82", "nl": "Every rompus is a yumpus.", "fol": "all x. (rompus(x) -> yumpus(x))", "prediction": ["all x.(Rompus(x) -> Yumpus(x))", "all x.(Rompus(x) -> Yumpus(x))", "(all x.(Rompus(x) -> Yumpus(x))", "all x y.((Rompus(x) & Yampus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Yumpa(x))", "all x.(Rompus(x) -> Yumpus(x))", "all x.(rompus(x) -> Yumpa(x))", "all x y.((Rompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Yampus(x))", "exists x.(rompus(x) & Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "exists x.(rompus(x) & Yampus(x))", "all x.(Rompus(x) -> Yumpus(x))", "exists x.(rompus(x) & Yumpus(x))", "all x.(Rompus(x) -> Yampus(x))", "all x.(Rompus(x) -> Yumpa(x))"]}
{"id": "prontoqa_validation_83", "nl": "Stella is not a yumpus, Stella is a shumpus, and Stella is a vumpus.", "fol": "(-yumpus(Stella) & shumpus(Stella) & vumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & -Shumpus(x) & -Vumpus(x)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Shumpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(y) & Vumpus(z)))", "all x.(Stella(x) -> (-Yumpus(x) & -Shumpus(x) & -Vumpus(x)))", "exists x.(Stella(x) & -Yumpus(x) & Shumpus(x) & Vumpus(x))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Stella(x) -> Vumpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Shumpus(z)) -> (-Yumpus(x) & Shumpus(x) & Vumpus(x)))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & all y.(Stella(y) -> Humpus(y)) & all z.(Stella(z) -> Vumpus(z))))", "all x y.((Stella(x) & Stella(y)) -> (-Yumpus(x) | (Shumpus(y) | Vumpus(y))))", "all x y z.((Stella(x) & Yumpus(y) & Humpus(z)) -> (-Yumpus(x) & Shumpus(x) & Vumpus(x)))", "all x y z.((Stella(x) & Yampus(y) & Humpus(z) & Vumpus(x)) -> (-Yumpus(x) & Shumpus(y) & Vumpus(z)))", "(all x y z.((Stella(x) & Yumpus(y)) -> -Yumpus(x)) & ((Stella(z) & Humpus(z))) -> Vumpus(z)))", "(all x.(Stella(x) -> -Yumpus(x)) & (Stella(x) -> Humpus(x)) & (Vumpus(x) -> Yumpus(x)))"]}
{"id": "prontoqa_validation_84", "nl": "Stella is not a rompus.", "fol": "-rompus(Stella)", "prediction": ["Stella is not a rompus.", "all x.(Stella(x) -> -Rompus(x))", "(-Rompus(Stella))", "Stella -Rompus(Stella))", "Stella is not a Rompus.", "all x.(Stella(x) -> -Rompus(x))", "(-Rompus(Stella))", "Stella is not a rompus.", "all x.(Stella(x) -> -Rompus(x))", "(-Rompus(Stella))", "Stella -Rompus(Stella)", "(-rompus(Stella))", "Stella is not a Rompus.", "-Rompus(Stella)", "Stella is not a rompus.", "-Rompus(Stella)"]}
{"id": "prontoqa_validation_85", "nl": "Each wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "(all x.(Wumpus(x) -> Brimpus(x)))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & -Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & Brumpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & Brumpus(x))"]}
{"id": "prontoqa_validation_86", "nl": "Max is a yumpus, Max is not a brimpus, and Max is a lorpus.", "fol": "(yumpus(Max) & -brimpus(Max) & lorpus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "all x y z.((Max(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(x) & -Brimpus(y))) & ((Max(z) & Lorpus(z)) -> (Lorpus(z))))", "all x y z.((Max(x) & Yumpus(y) & Brimpus(z)) -> (-Yumpus(x) & -Brimpus(y) & -Lorpus(z)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x y z.((Max(x) & Yumpus(y) & -Brimpus(z)) -> (Yumpus(x) & -Brimpus(y)) & ((Max(x) & Lorpus(x)) -> Lorpus(x)))", "all x.(Max(x) -> (Yumpus(x) & -Brimpus(x) & Lorpus(x)))", "(yumpus(x) | -brimpus(x) | -lorpus(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> -Brimpus(y))) & all z.(Max(z) -> Lorpus(z)))", "all x y z.((Max(x) & Yumpus(y) & Brimpus(z)) -> (Yumpus(x) & -Brimpus(x) & Lorpus(x)))", "all x.(Max(x) -> (Yumpus(x) & -Brimpus(x) & -Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(x) | -Brimpus(y)) | (-Yumpus(z) & Brimpus(z)) & -Lorpus(z))))", "all x y z.((Max(x) & Yampus(x) & Brimpus(y) & Lorpus(z)) -> (Yumpus(x) & -Brimpus(y) & -Lorpus(z)))", "all x y z.((Max(x) & Yumpus(y) & -Brimpus(z)) -> (Yumpus(x) | -Brimpus(z) | -Lorpus(x)))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> -Brimpus(x)) & (Max(x) -> Lorpus(x)))"]}
{"id": "prontoqa_validation_87", "nl": "Max is not a wumpus.", "fol": "-wumpus(Max)", "prediction": ["(-Wumpus(Max))", "all x.(Max(x) -> -Wumpus(x))", "Max is not a wumpus.", "(Wumpus(Max) & -Wumpus(Max))", "-Wumpus(Max)", "all x.(Max(x) -> -Wumpus(x))", "Max is not a wumpus.", "(-Wumpus(Max))", "(Wumpus(Max) & -Wumpus(Max))", "all x.(Max(x) -> -Wumpus(x))", "Max is not a wumpus.", "-Wumpus(Max)", "-(Wumpus(Max))", "(-Wumpus(Max))", "-Wumpus(Max)", "-Wumpus(Max)"]}
{"id": "prontoqa_validation_88", "nl": "Zumpuses are impuses.", "fol": "all x. (zumpus(x) -> impus(x))", "prediction": ["all x.(Zumpus(x) -> Issue(x))", "all x y.((Zumpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "(Issue(z) & Impossible(z))", "all x y.((Zumpuse(x) & Impossible(y)) -> Issue(x,y))", "(Issues(z) & Impose(z))", "all x y.((Zumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Zumpuse(x) -> Issue(x))", "all x.(Zumpus(x) -> Issue(x))", "all x.(Zombie(x) -> Isolated(x))", "all x.(Zumpus(x) -> Issues(x))", "all x.(Zombie(x) -> Impects(x))", "all x.(Zumpus(x) -> Impects(x))", "All x.(Zupes(x) -> Isolates(x))", "All x.(Zumpus(x) -> Ispose(x))"]}
{"id": "prontoqa_validation_89", "nl": "Alex is a tumpus and Alex is not an impus and Alex is a rompus.", "fol": "(tumpus(Alex) & -impus(Alex) & rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x))) & (Alex(x) -> Rompus(x)))", "all x y.((Alex(x) & Tompus(x)) -> (-Impossible(x) & Rompus(y)))", "all x.(Alex(x) -> (Tumpus(x) & -Impossible(x) & Rompus(x)))", "all x y z.((Alex(x) & Tompus(y) & Is(z)) -> (Tumpus(x) & -Is(z)) & Rompus(x)))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x)) & (Alex(x) -> Rompus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & (Alexa(x) -> -Impossible(x)) & (Alexa(x) -> Rompus(x)))", "all x y z.((Alex(x) & Tumpus(y) & IsNotImpossible(z)) -> (Tumpus(x) & Rompus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & all y.(Alexa(y) -> -Impossible(y))) & all z.(Alexa(z) -> Rompus(z))))", "all x y.((Alex(x) & Tompus(x) & -Impossible(y)) -> (Tumpus(x) & Rompus(y)))", "exists x.(Alex(x) & Tumpus(x) & -Impossible(x) & Rompus(x))", "(all x y.(Tumpus(x) -> Tumpus(x)) & (Impossible(y) -> Rompus(y)))", "all x.(Alex(x) -> (Tumpus(x) & -Impossible(x) & Rompus(x)))", "(all x y.(Tumpus(x) -> Alex(x)) & (Impossible(y) | Rompus(y))))", "(all x.(Alex(x) -> Tumpus(x)) & (Alex(x) -> -Impossible(x))) & (Alex(x) -> Rompus(x)))", "(all x.(Alexa(x) -> Tumpus(x)) & (Alexa(x) -> -Impossible(x))) & (Alexa(x) -> Rompus(x)))", "all x.(Alex(x) -> (Tumpus(x) & -Issue(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_90", "nl": "Alex is not a zumpus.", "fol": "-zumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Zumpus(x))", "Alex is not a zumpus.", "(-Zumpus(Alex))", "all x.(Alex(x) -> -Zumpus(x))", "Alex is not zumpus.", "Alex is not a zumpus.", "all x.(Alex(x) -> -Zumpus(x))", "(-Zumpus(Alex))", "-Zombipus(Alex)", "Alex is not zumpus.", "all x.(Alex(x) -> -Zombipus(x))", "Alex is not a zumpus.", "-Tompus(Alex)", "(-Zumpus(Alex)).", "All x.(Alex(x) -> -Zumpus(x))", "all x.(Alex(x) -> -Tompus(x))"]}
{"id": "prontoqa_validation_91", "nl": "Tumpuses are wumpuses.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "(Wumpuse(tumpus) & Wumpus(tumpus))", "all x y.((Tumpus(x) & Wumpus(y)) -> Wumpus(x))", "all x.(Tumpuse(x) -> Wumpus(x))", "all x.((Tumpus(x) & Wumpus(x)) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "(Wumpuse(tump) & Wumpus(tump))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpuse(x) -> Wumpus(x))", "(Wumpus)", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_92", "nl": "Rex is a zumpus, Rex is a gorpus, and Rex is not a wumpus.", "fol": "(zumpus(Rex) & gorpus(Rex) & -wumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (Tompus(x) & Gorpus(x) & -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "(all x y z.((Rex(x) & Zumpus(y)) -> Rex(x)) & ((Rex(z) & Gorpus(z)) -> Rex(x)) & ((Rex(x) & -Wumpus(x)) -> Rex(x)))", "all x y z.((Rex(x) & Zumpus(x) & Gorpus(y) & -Wumpus(z)) -> (Tompus(x) | Gorpus(y) & -Wumpus(z)))", "all x.(Rex(x) -> (Tompus(x) | Gorpus(x) | -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & (Rex(x) -> -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (Tompus(x) | Gorpus(z) | -Wumpus(x)))", "(all x y z.((Rex(x) & Zumpus(y)) -> Toad(x)) & ((Rex(z) & Gorpus(z)) -> -Wumpus(x)))", "(all x.(Rex(x) -> Zumpus(x)) & all y.(Rex(y) -> Gorpus(y)) & all z.(Rex(z) -> -Wumpus(z))))", "all x.(Rex(x) -> (Tompus(x) | Gorpus(x) | -Wumpus(x)))", "(All x.(Rex,Zumpus) -> Gorpus(x)) & (Rex,Wumpus) -> -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(x) & Gorpus(y) & -Wumpus(z)) -> (Tompus(x) | Gorpus(y) | Rex(z)))", "(all x y z.((Rex(x) & Zumpus(x)) -> Gorpus(x)) & ((Rex(y) & Wumpus(z)) -> -Wumpus(y)))", "(all x.(Rex(x) -> Zumpus(x)) & (Rex(x) -> Gorpus(x)) & -Wumpus(x)))", "all x y z.((Rex(x) & Zumpus(y) & Gorpus(z)) -> (Tompus(x) & Gorpus(x) & -Wumpus(x)))"]}
{"id": "prontoqa_validation_93", "nl": "Rex is not a tumpus.", "fol": "-tumpus(Rex)", "prediction": ["Rex is notTumpus(x)", "(-Tumpus(Rex))", "all x.(Rex(x) -> -Tumpus(x))", "Rex is notTumpus(x)", "(-Tumpus(Rex))", "all x.(Rex(x) -> -Tumpus(x))", "Rex is not a Tumpus.", "Rex is notTumpus(Rex)", "-Tumpus(Rex)", "all x.(Rex(x) -> -Tumpus(x))", "(-Tumpus(Rex))", "Rex -Tumpus(rex)", "all x.(Rex(x) -> -Tumpus(x))", "-Tumpus(Rex)", "(-Tumpus(Rex))", "-Tumpus(rex)"]}
{"id": "prontoqa_validation_94", "nl": "Tumpuses are lorpuses.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumulus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Lorpuse(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpuse(x) & Lorpus(y)) -> IsLumpus(x,y))", "(Lumpuse(tump) & Loomise(tump))", "(Lumpuse(tumpus) & LivesIn(tumpus,tumpus))", "(Lorpuse(tump) -> Thrombosis(tump))", "all x.(Tumulus(x) -> Lorpus(x))", "all x y.((Tumpuse(x) & Lorpus(y)) -> Loomis(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Loomis(x))", "all x.(Tumulus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpuse(x) -> Loomis(x))", "all x.(Tumulus(x) -> Lorpuse(x))", "all x.(Tumpuse(x) -> Loomise(x))"]}
{"id": "prontoqa_validation_95", "nl": "Sam is not a lorpus, Sam is an impus, and Sam is a grimpus.", "fol": "(-lorpus(Sam) & impus(Sam) & grimpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y)) & all z.(Sam(z) -> Grimpus(z))))", "all x y z.((Sam(x) & Lorpus(y) & Imperator(z)) -> (-Lorpus(x) & Imperator(x) & Grimpus(x)))", "(all x y z.((Sam(x) & Lorpus(y)) -> -Lorpus(x)) & ((Sam(z) & Impossible(z))) -> Grimpus(z)))", "all x y z.((Sam(x) & Lorpus(y) & Impossible(z)) -> (-Lorpus(x) & Grimpus(x)))", "all x.(Sam(x) -> (-Lorpus(x) & Issue(x) & Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Imperator(x)) & (Sam(x) -> Grimpus(x)))", "all x y z.((Sam(x) & Loper(y) & Is(z) & Grimpus(z)) -> (-Lorpus(x) & Is(x,y) & Is(x,z)))", "(all x y z.((Sam(x) & Lorpus(y)) -> -Lorpus(x)) & ((Sam(z) & Imperator(z)) -> Grimpus(z)))", "exists x.(Sam(x) & -Lorpus(x) & Is(x) & Grimpus(x))", "(all x.(Sam(x) -> -Lorpus(x)) & all y.(Sam(y) -> Issue(y)) & all z.(Sam(z) -> Grimpus(z))))", "all x y z.((Sam(x) & Lopa(y) & Impossible(z)) -> (-Lorpus(x) & Grimpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Imperator(z)) -> (-Lorpus(x) & Imperator(x) & Gruppus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) | (Sam(x) -> Issue(x))) | (Sam(x) -> Grimpus(x)))", "(all x.(Sam(x) -> -Lorpus(x)) & (Sam(x) -> Issue(x)) & (Sam(x) -> Grimpus(x)))", "all x y z.((Sam(x) & Lorpus(y) & Impossible(z)) -> (-Lorpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_validation_96", "nl": "Every vumpus is a jompus.", "fol": "all x. (vumpus(x) -> jompus(x))", "prediction": ["all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "(all x.(Vumpus(x) -> Jompus(x))", "exists x y.(Vumpus(x) & Jompus(y))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.((Vumpus(x) & Jompus(x)) -> HasVumpus(x))", "all x.(Vumpus(x) -> Jompus(x))", "exists x y.(Vumpus(x) & Jompus(y))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))", "exists x.(Vumpus(x) & Jompus(x))", "all x.(Vumpus(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_97", "nl": "Fae is a brimpus and Fae is a numpus and Fae is not a jompus.", "fol": "(brimpus(Fae) & numpus(Fae) & -jompus(Fae))", "prediction": ["(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jompus(x)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Jimpus(z)))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(x) & Numpus(y))) & ((Fae(z) & -Jompus(z)) -> (Fae(z) & Numpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jompus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & -Jompus(x)))", "all x y.((Fae(x) & Brimpus(x) & Numpus(y)) -> (Brimpus(x) & Numpus(y) & -Jompus(y)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Jompus(z)))", "all x.(Fae(x) -> (Brimpus(x) & Numpus(x) & -Jompus(x)))", "all x y z.((Fae(x) & Brimpus(x) & Numpus(y) & Jompus(z)) -> (Brimpus(x) & Numpus(y) & -Jompus(z)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (Numpus(y) -> Numpus(y)) & (Jompus(y) -> -Jimpus(y)))", "all x y z.(Fae(x) & Brimpus(x) & Numpus(y) & -Jompus(z))", "exists x.(Fae(x) & Brimpus(x) & Numpus(x) & -Jompus(x))", "(all x y z.((Fae(x) & Brimpus(x)) -> (Brimpus(x) & Numpus(y))) & ((Fae(z) & -Jompus(z)) -> (Nompus(z) & -Brimpus(z))))", "(all x.(Fae(x) -> Brimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Jompus(x)))", "all x.(Fae(x) -> (Brimpus(x) & Numpus(x) & -Jompus(x)))", "(all x.(Fae(x) -> Brimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Jompus(z))))"]}
{"id": "prontoqa_validation_98", "nl": "Fae is not a vumpus.", "fol": "-vumpus(Fae)", "prediction": ["all x.(Fae(x) -> -Vumpus(x))", "-Vumpus(Fae)", "(Vumpus(Fae) & -Vumpus(Fae))", "(-Vumpus(Fae))", "all x.(Fae(x) -> -Vumpus(x))", "-Vumpus(Fae)", "(Vumpus(Fae) & -Vumpus(Fae))", "-Vumpus(Fae)", "(Vumpus(Fae) & -Vumpus(Fae))", "(Vumpus(fe) & -Vumpus(fe))", "all x.(Fae(x) -> -Vumpus(x))", "-Vimpus(fae)", "all x.(Fae(x) -> -Vimpus(x))", "-Vumpus(fae)", "all x.(Fae(x) -> -Vumpus(x))", "exists x.(Fae(x) & -Vimpus(x))"]}
{"id": "prontoqa_validation_99", "nl": "Lempuses are gorpuses.", "fol": "all x. (lempus(x) -> gorpus(x))", "prediction": ["all x.(Lempuse(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpus(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x))", "(Gorpuse(lempuse) & -Gorpuse(lempuse))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lemme(x) -> Gorpus(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x y.((Lempuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lemme(x) -> Gorpus(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "All x.(Lemmes(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "all x.(Lempuse(x) -> Gorpuse(x))", "All x.(Lempus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_validation_100", "nl": "Sally is an impus and Sally is a tumpus and Sally is not a gorpus.", "fol": "(impus(Sally) & tumpus(Sally) & -gorpus(Sally))", "prediction": ["(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x y z.((Sally(x) & IsImpossible(x) & Sally(y) & Tumpus(y)) -> (Impossible(x) & Tumpus(y) & -Gorpus(z)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x.(Sally(x) -> (Impossible(x) & Tumpus(x) & -Gorpus(x)))", "all x y.((Sally(x) & IsImpossible(x) & Sally(y)) -> (Tumpus(y) & -Gorpus(y)))", "(all x y.(Sally(x) -> Impossible(x)) & (Sally(y) -> Tumpus(y)) & (Sally(y) -> -Gorpus(y)))", "all x y z.((Sally(x) & Impossible(x) & Sally(y) & Tumpus(z) & -Gorpus(x)) -> (Impossible(y) & Tumpus(z)))", "Sally is an impus (symbol) & Sally is tumpus(symbol) & Sally is not gorpus(symbol))", "(all x y.(Sally(x) -> Is(x,Impossible)) & (Sally(y) -> Tumpus(y)) & (Sally(y) -> -Gorpus(y)))", "(all x.(Sally(x) -> Is(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "exists x.(Sally(x) & IsImpossible(x) & exists y.(Tumpus(y) & -Gorpus(y)))", "all x.(Sally(x) -> (Imposer(x) & Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Tumpus(x)) & (Sally(x) -> -Gorpus(x)))", "all x.(Sally(x) -> (Impossible(x) & Tumpus(x) & -Gorpus(x)))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> (Tumpus(y) & -Gorpus(y))))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Tumpus(y)) & all z.(Sally(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_validation_101", "nl": "Sally is not a lempus.", "fol": "-lempus(Sally)", "prediction": ["Sally is not a lempus.", "all x.(Sally(x) -> -Lempus(x))", "Sally -Lempus(Sally)", "(-Lempus(Sally))", "Sally n'est pas lempus.", "all x.(Sally(x) -> -Lempus(x))", "Sally is not a lempus.", "(-Lempus(Sally))", "Sally neems(Sally,Limpus)", "Sally -Lempus(Sally)", "all x.(Sally(x) -> -Lempus(x))", "-Lempus(Sally)", "Sally is not a Lempus.", "(-lempus(Sally))", "Sally is not a lempus.", "-Lempus(Sally)"]}
{"id": "prontoqa_validation_102", "nl": "Wumpuses are grimpuses.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x y.((Wumpus(x) & Grimpus(y)) -> (Grimpus(x) & Grimpus(y)))", "(Grimpuse(w) & -Grimpus(w))", "(Scrappuse(w) & Grimpuse(w))", "(Grimpuse(w) & Grapple(w))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "(Grimpuse(w) & -Grimpus(w))", "all x.(Wumpus(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grappase(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpuse(x) -> Grimpuse(x))", "all x.(Wumpus(x) -> Grimpuse(x))", "All x.(Wumpus(x) -> Grimpuse(x))"]}
{"id": "prontoqa_validation_103", "nl": "Rex is a jompus, Rex is a vumpus, and Rex is not a grimpus.", "fol": "(jompus(Rex) & vumpus(Rex) & -grimpus(Rex))", "prediction": ["(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Vumpus(z)) -> (Jompus(x) & Vumpus(x) & -Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "(all x y z.((Rex(x) & Jompus(y)) -> (Jompus(x) | Vumpus(y))) & ((Rex(z) & Grimpus(z)) -> -Smoothpus(z)))", "(all x y z.((Rex(x) & Jompus(y)) -> Rex)) & ((Rex(z) & Vumpus(z)) -> Rex)) & ((Rex(x) & -Grimpus(x)) -> Rex)))", "all x.(Rex(x) -> (Jompus(x) | Vumpus(x) | -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(y) & Vumpus(z)) -> (Jompus(x) | Vumpus(z) | -Grimpus(x)))", "(all x.(Rex) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "all x y z.((Rex(x) & Jompus(x) & Vumpus(y) & Gruppus(z)) -> (Jompus(x) & Vumpus(y) & -Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> Vumpus(x)) & (Rex(x) -> -Grimpus(x)))", "(all x.(Rex,jompus) -> Rex(x)) & all y.(Vumpus(y) -> Rex(y)) & all z.(Grimpus(z) -> -Rex(z))))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> Vumpus(y)) & all z.(Rex(z) -> -Grimpus(z))))", "all x.(Rex(x) -> (Jompus(x) | Vumpus(x) | -Grimpus(x)))", "(all x y z.(Jompus(x) -> Rex)) & (Vumpus(y) -> Rex)) & (Smoothpus(z) -> -Rex)))", "all x y z.((Rex(x) & Jompus(x) & Vumpus(y) & -Grimpus(z)) -> (Jompus(x) & Vumpus(y) & -Grimpus(z)))", "all x y z.((Rex(x) & Jompus(y) & Vumpus(z)) -> (Jompus(x) & Vumpus(y) & -Grimpus(z)))"]}
{"id": "prontoqa_validation_104", "nl": "Rex is not a wumpus.", "fol": "-wumpus(Rex)", "prediction": ["Rex is not a wumpus.", "all x.(Rex(x) -> -Wumpus(x))", "(-Wumpus(Rex))", "Rex is notWumpus(x)", "(Wumpus(Rex) & -Wumpus(Rex))", "(-Wumpus(Rex))", "all x.(Rex(x) -> -Wumpus(x))", "Rex is not a wumpus.", "-Wumpus(Rex)", "Rex is notWumpus(x)", "all x.(Rex(x) -> -Wumpus(x))", "Rex -Wumpus(Rex)", "Rex is not a wumpus.", "(-Wumpus(Rex))", "-Wumpus(Rex)", "-Wumpus(rex)"]}
{"id": "prontoqa_validation_105", "nl": "Every vumpus is a zumpus.", "fol": "all x. (vumpus(x) -> zumpus(x))", "prediction": ["all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "(all x.(Vumpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x y.((Vumpus(x) & Zumpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Zumpus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Tompus(x))", "all x.(Vumpus(x) -> Zumpus(x))", "exists x.(Vumpus(x) & Zumpus(x))"]}
{"id": "prontoqa_validation_106", "nl": "Fae is a lempus and Fae is not a zumpus and Fae is a dumpus.", "fol": "(lempus(Fae) & -zumpus(Fae) & dumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Zumpus(z)) -> (-Tompus(y) & Dumpus(z)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x y z.((Fae(x) & Lempus(x)) -> (Lempus(x) & -Zumpus(y))) & ((Fae(z) & Dumpus(z)) -> Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y.((Fae(x) & Lempus(x) & Fae(y)) -> (-Tompus(y) & Dumpus(y)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Zumpus(z)) -> (-Tompus(y) & Dumpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> -Zumpus(y))) & all z.(Fae(z) -> Dumpus(z)))", "exists x.(Fae(x) & Lempus(x) & -Zumpus(x) & Dumpus(x))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "(all x y.(Fae(x) -> Lempus(x)) & (Fae(y) -> -Zumpus(y)) & (Fae(y) -> Dumpus(y)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))", "all x y.((Fae(x) & Fae(y)) -> (Lempus(x) & -Zumpus(y) & Dumpus(y)))", "all x y z.((Fae(x) & Lempus(x) & Fae(y) & Dumpus(z)) -> (-Zumpus(y) & Dumpus(z)))", "all x.(Fae(x) -> (Lempus(x) & -Zumpus(x) & Dumpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> -Zumpus(x)) & (Fae(x) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_107", "nl": "Each grimpus is an impus.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> IsImpossible(x))", "-all x.(Grimpus(x) -> IsImpossible(x))", "all x.(Grimpus(x) -> IsImpossible(x))", "all x.(Grimpus(x) -> Impossible(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> IsImpossible(x))", "(all x.(Grimpus(x) -> Impossible(x))", "all x.(Grimpus(x) -> Imperator(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Is(x,y))", "exists x.(Gruppus(x) & IsImpossible(x))", "all x.(Grimpus(x) -> Is(x,y))", "exists x.(Grip(x) & Impossible(x))", "all x.(Grimpus(x) -> Impossible(x))", "all x.(Grampus(x) -> Impeccable(x))", "exists x.(Grimps(x) & Impossible(x))", "exists x.(Sgrimpus(x) & Impermissible(x))", "all x.(Grampus(x) -> IsImprovement(x))"]}
{"id": "prontoqa_validation_108", "nl": "Stella is not an impus and Stella is a zumpus and Stella is a rompus.", "fol": "(-impus(Stella) & zumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-Impossible(x) & Tossup(y) & Rompus(z)))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Rompus(z))))", "(all x y z.((Stella(x) & Impossible(x)) -> -Stella(x)) & ((Stella(y) & Zumpus(y)) -> Rompus(z)))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-IsImpossible(x) & -Impossible(y) & -Impossible(y) & -Impossible(y)))", "all x y.((Stella(x) & Stella(y)) -> (-Impossible(x) & Zumpus(y) & Rompus(y)))", "(all x y.((Stella(x) & IsNotImpossible(x)) -> Tossus(x)) & ((Stella(y) & Rompus(y)) -> Rompus(y)))", "all x.(Stella(x) -> (-Impossible(x) & Stella(x) & Zumpus(x) & Rompus(x)))", "(-Impossible(Stella) | Zumpus(Stella) | Rompus(Stella)))", "(all x.(Stella(x) -> -Impossible(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))", "exists x.(Stella(x) & -Impossible(x) & Stella(x) & Zumpus(x) & Rompus(x))", "(all x.(Stella(x) -> -Impossible(x)) & all y.(Stella(y) -> Zumpus(y)) & all z.(Stella(z) -> Rompus(z))))", "all x y z.((Stella(x) & Stella(y) & Zumpus(z)) -> (-Impossible(x) & Tosso(y) & Rompus(y)))", "all x y.((Stella(x) & Stella(y)) -> (-Impossible(x) & Zumpus(y) & Rompus(y)))", "all x y z.((Stella(x) & Zumpus(y) & Rompus(z)) -> (-IsImpossible(x) & -Impossible(y) & -Impossible(z) & -Impossible(z)))", "(all x.(Stella(x) -> -Issue(x)) & (Stella(x) -> Zumpus(x)) & (Stella(x) -> Rompus(x)))"]}
{"id": "prontoqa_validation_109", "nl": "Grimpuses are impuses.", "fol": "all x. (grimpus(x) -> impus(x))", "prediction": ["all x.(Grimpus(x) -> Issue(x))", "all x y.((Grimpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Grimpus(x) -> Issue(x))", "(Issue(Grimpuses) & Issue(Grimpuses))", "all x.(Gruppuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Issue(x))", "all x y.((Grimpuse(x) & Issue(y)) -> Issue(x,y))", "all x y.((Grimpus(x) & Issue(y)) -> Issue(x,y))", "(Issues(Grimpus) & Issues(Grimpus))", "all x.(Grimpuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Imperium(x))", "all x.(Grimpse(x) -> Isolates(x))", "(Issues(Grimps) & Impisite(Grimps))", "all x.(Grimpus(x) -> Issue(x))", "All x.(Gruppuse(x) -> Issue(x))", "all x.(Grimpus(x) -> Impermissible(x))"]}
{"id": "prontoqa_validation_110", "nl": "Polly is not an impus, Polly is a brimpus, and Polly is a numpus.", "fol": "(-impus(Polly) & brimpus(Polly) & numpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Impossible(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y)) & all z.(Polly(z) -> Numpus(z))))", "(all x y z.((Polly(x) & Impossible(y)) -> Polly(x)) & ((Polly(z) & Brimpus(z)) -> Polly(z)))", "(all x y z.((Polly(x) & IsNotImpossible(x)) -> Polly(y)) & ((Polly(z) & Brimpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "exists x.(Polly(x) & -Is(x) & Polly(x) & Brimpus(x) & Numpus(x))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Issue(x) & Brimpus(y) & Numpus(z)))", "all x y.((Polly(x) & Polly(y)) -> (-Issue(x) & Brimpus(y) & Numpus(y)))", "(all x.(Polly(x) -> -Impossible(x)) & (Brimpus(x) | Numpus(x)))", "(all x.(Polly(x) -> -Issue(x)) & (Polly(x) -> Brimpus(x)) & (Polly(x) -> Numpus(x)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) | (-Impossible(y) & Brimpus(y) & Numpus(z))))", "all x y z.((Polly(x) & Polly(y) & Brimpus(z)) -> (-Impossible(x) & Brimpus(y) & Numpus(z)))", "(all x y z.((Polly(x) & Impossible(y)) -> -Polly(x)) & ((Polly(z) & Brimpus(z)) -> Numpus(z)))", "(all x.(Polly(x) -> -Impossible(x)) & all y.(Polly(y) -> Brimpus(y))) & all z.(Polly(z) -> Numpus(z)))", "all x y z.((Polly(x) & Brimpus(y) & Numpus(z)) -> (-Impossible(x) | (Brimpus(y) | Numpus(z)))))"]}
{"id": "prontoqa_validation_111", "nl": "Every jompus is a zumpus.", "fol": "all x. (jompus(x) -> zumpus(x))", "prediction": ["all x.(Jompus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "(all x.(Jompus(x) -> Zumpus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x y.((Jompus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jimpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "all x.(Jumpus(x) -> Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "exists x.(Jimpus(x) & Zumpus(x))", "exists x.(jompus(x) & Zumpus(x))", "all x.(Jompus(x) -> Zumpus(x))", "exists x.(Mjompus(x) & Zumpus(x))"]}
{"id": "prontoqa_validation_112", "nl": "Fae is not a zumpus, Fae is a shumpus, and Fae is a numpus.", "fol": "(-zumpus(Fae) & shumpus(Fae) & numpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & Shumpus(y) & Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Numpus(z))))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Tompus(x)) & ((Fae(z) & Humpus(z))) -> Numpus(z)))", "all x.(Fae(x) -> (-Zumpus(x) & Shumpus(x) & Numpus(x)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & -Shumpus(y) & -Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Humpus(x)) & (Fae(x) -> Numpus(x)))", "all x y z.((Fae(x) & Zumpus(y) & Humpus(z)) -> (-Zumpus(x) & Shumpus(x) & Numpus(x)))", "exists x.(Fae(x) & -Zumpus(x) & Shumpus(x) & Numpus(x))", "all x y z.(Fae(x) & Zumpus(y) & Shumpus(z) & Numpus(x))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Tompus(x)) & ((Fae(z) & Humpus(z))) -> Numpus(z)))", "all x y z.(Fae(x) -> (-Zumpus(x) & Shumpus(y) & Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & all y.(Fae(y) -> Shumpus(y)) & all z.(Fae(z) -> Numpus(z)))", "all x y z.((Fae(x) & Shumpus(y) & Numpus(z)) -> (-Zumpus(x) & Shumpus(y) & Numpus(z)))", "(all x y z.((Fae(x) & Zumpus(y)) -> -Zumpus(x)) & ((Fae(z) & Humpus(z))) -> Numpus(z)))", "(all x.(Fae(x) -> -Zumpus(x)) & (Fae(x) -> Shumpus(x)) & (Fae(x) -> Numpus(x)))"]}
{"id": "prontoqa_validation_113", "nl": "Brimpuses are lempuses.", "fol": "all x. (brimpus(x) -> lempus(x))", "prediction": ["all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x y.((Brompus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "(all x.(Brompus(x) -> Lempuse(x)))", "all x.(Brimpus(x) -> Lempuse(x))", "all x y.((Brimpus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Brimuse(x) -> Lempuse(x))", "(all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brompus(x) -> Lempuse(x))", "all x y.((Brompus(x) & Lempuse(y)) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brimpuse(x) -> Lempuse(x))", "all x.(Brombus(x) -> Lempuse(x))", "all x.(Brimpus(x) -> Lempuse(x))", "all x.(Brombus(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_114", "nl": "Wren is a yumpus, Wren is a shumpus, and Wren is not a lempus.", "fol": "(yumpus(Wren) & shumpus(Wren) & -lempus(Wren))", "prediction": ["(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y))) & all z.(Wren(z) -> -Lempus(z))))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(x) | Shumpus(y))) & ((Wren(z) & -Lempus(z))) -> (Yumpus(z) & -Shumpus(z))))", "(yumpus(Wren) & shumpus(Wren) & -lempus(Wren))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Shumpus(z) | -Lempus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Shumpus(x)) & (Wren(x) -> -Lempus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "all x y z.((Wren(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) & Shumpus(x) & -Lempus(x)))", "(all x y z.((Wren(x) & Yumpus(y)) -> (Yumpus(z) | Humpus(z))) & ((Wren(x) & Lempus(z)) -> -Yumpus(x)))", "all x y.((Wren(x) & Yumpus(x)) -> (Shumpus(x) & -Lempus(y)))", "(all x.(Wren(x) -> Yampus(x)) & all y.(Wren(y) -> Humpus(y)) & all z.(Wren(z) -> -Lempus(z))))", "all x y z.((Wren(x) & Yampus(y) & Humpus(z) & -Lempus(z)) -> (Yumpus(x) | Shumpus(x) | -Yumpus(x)))", "(all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Humpus(z)) | -Lempus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(y) & -Lempus(z)))", "(all x.(Wren(x) -> Yumpus(x)) & (Wren(x) -> Humpus(x)) & (Wren(x) -> -Lempus(x)))"]}
{"id": "prontoqa_validation_115", "nl": "Wren is not a brimpus.", "fol": "-brimpus(Wren)", "prediction": ["all x.(Wren(x) -> -Brimpus(x))", "(-Brimpus(Wren))", "Wren is not a Brimpus.", "all x.(Wren(x) -> -Brimpus(x))", "-(Wren(w) & Brimpus(w))", "(-Brimpus(Wren))", "(Brimpus(Wren) & -Brimpus(Wren))", "all x.(Wren(x) -> -Brumpus(x))", "-Brumpus(Wren)", "all x.(Wren(x) -> -Brimpus(x))", "(Brimpus(wren) & -Brimpus(wren))", "(-Brimpus(Wren))", "-Brumpus(Wren)", "all x.(Wren(x) -> -Brumpus(x))", "all x.(Wren(x) -> -Brimpus(x))", "all x.(Wren(x) -> -Brumpus(x))"]}
{"id": "prontoqa_validation_116", "nl": "Shumpuses are sterpuses.", "fol": "all x. (shumpus(x) -> sterpus(x))", "prediction": ["all x.(Shumpus(x) -> Sterpuse(x))", "all x y.((Shupuse(x) & Sterpuse(y)) -> Sterpuse(x))", "all x.(Shampus(x) -> Sterpuse(x))", "all x.(Shampoos(x) -> Sterpuse(x))", "all x.(Shumpsue(x) -> Sterpuse(x))", "(Shampoos(shm) & Sterpuse(shm))", "(Shampoos(s) & Sterpuse(s))", "all x.(Shupuse(x) -> Sterpuse(x))", "all x y.((Shupuse(x) & Sterus(y)) -> Sterpuse(x))", "all x.(Shumpus(x) -> Steroid(x))", "all x y.((Shampus(x) & Sterpus(y)) -> Sterpuse(x))", "all x.(Shumpuse(x) -> Sterpuse(x))", "all x.(Shupuse(x) -> Sterpuse(x))", "(Shumpus)", "all x.(Shumpus(x) -> Sterus(x))", "All x.(Shupuse(x) -> Sterpuse(x))"]}
{"id": "prontoqa_validation_117", "nl": "Wren is not a sterpus, Wren is a yumpus, and Wren is a numpus.", "fol": "(-sterpus(Wren) & yumpus(Wren) & numpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Sterpus(x) & -Yumpus(x) & -Numpus(x)))", "(all x y z.((Wren(x) & Sterpus(y)) -> -Sterpus(x)) & ((Wren(z) & Yumpus(z)) -> Numpus(z)))", "(all x.(Wren(x) -> -Sterpus(x)) & (Yumpus(x) & Numpus(x)))", "all x.(Wren(x) -> (-Sterpus(x) & Yampus(x) & Numpus(x)))", "all x y z.((Wren(x) & Sterus(y) & Yumpus(z)) -> (-Sterus(x) & -Yumpus(y) & -Numpus(z)))", "all x y z.((Wren(x) & Yumpus(y) & Numpus(z)) -> (-Sterpus(x) & -Yumpus(y) & -Yumpus(z) & -Yumpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Sterpus(x) & Yumpus(x) & Numpus(x)))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpus(y)) & all z.(Wren(z) -> Numpus(z))))", "(-Sterpus(Wren) & -Yumpus(Wren) & Numpus(Wren))", "(all x y z.((Wren(x) & Sterepus(y) & Yumpus(z)) -> -Sterepus(x)) & ((Wren(x) & Yumpus(x) & Numpus(x)) -> Numpus(x)))", "(all x y z.((Wren(x) & Sterpus(y)) -> -Sterpus(x)) & ((Wren(z) & Yumpus(z))) -> Numpus(z)))", "all x y z.((Wren(x) & Sterepus(y) & Yumpus(z)) -> (-Sterpus(x) & -Yumpus(y) & -Numpus(z)))", "(all x.(Wren(x) -> -Sterepus(x)) & (Yumpus(x) | Numpus(x))))", "(all x.(Wren(x) -> -Sterpus(x)) & all y.(Wren(y) -> Yumpsum(y))) & all z.(Wren(z) -> Numpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Yumpus(z)) -> (-Stereos(x) | (Yumpus(z) | Numpus(z)))))"]}
{"id": "prontoqa_validation_118", "nl": "Wren is not a shumpus.", "fol": "-shumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "Wren is notShumpus.", "-(Wren(w) & Humpus(w))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren))", "(-Shumpus(Wren) & -Shumpus(Wren))", "-Shumpus(Wren)", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "-Shumpus(wren)", "all x.(Wren(x) -> -Shumpus(x))", "all x.(Wren(x) -> -Shumpus(x))", "(-Shumpus(Wren)"]}
{"id": "prontoqa_validation_119", "nl": "Gorpuses are rompuses.", "fol": "all x. (gorpus(x) -> rompus(x))", "prediction": ["all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x y.((Gorpuse(x) & Rompus(y)) -> Rompus(x))", "(all x.(Gorpuse(x) -> Rompuse(x))", "(Rompus(gorpus) & Rompus(gorpus))", "all x y.((Gorpuse(x) & Rompus(y)) -> Is(x,y))", "(Rompus(gorpus) -> rompus(gorpus))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))", "all x.(Rompus(x) -> Gorpuse(x))", "all x.(Gorpus(x) -> Rompus(x))", "all x.(Gorpuse(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_120", "nl": "Sam is a shumpus and Sam is a numpus and Sam is not a rompus.", "fol": "(shumpus(Sam) & numpus(Sam) & -rompus(Sam))", "prediction": ["all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & Numpus(z) & -Rompus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & (Numpus(x) -> Sam(x)) & -Rompus(x)))", "all x y z.((Sam(x) & Sam(y) & Sam(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Numpus(y) & -Rompus(y)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z))))", "(all x y.(Shumpus(x) -> Sam(x)) & (Numpus(y) -> Sam(y)) & (Rompus(y) -> Sam(y)))", "all x.(Sam(x) -> (Shumpus(x) & Numpus(x) & -Rompus(x)))", "(all x y z.((Shumpus(x) & Sam(y) & Numpus(z)) -> (Shumpus(x) & Numpus(y) & -Rompus(z)))", "(all x.(Shumpus(x) -> Sam(x)) & (Numpus(x) -> Sam(x)) & (Rompus(x) -> Sam(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> Numpus(x)) & (Sam(x) -> -Rompus(x)))", "all x.(Sam(x) -> (Shumpus(x) | Numpus(x) | -Rompus(x)))", "all x y z.((Sam(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) | Numpus(z) | -Rompus(z)))", "(all x.(Shumpus(x) & All y.(Numpus(y) & All z.(Rompus(z) & -Shumpus(z))) -> (Shumpus(x) & Numpus(y))))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Numpus(y) -> Sam(y))) & all z.(Rompus(z) -> Sam(z)))", "exists x.(Sam(x) & Shumpus(x) & Numpus(x) & -Rompus(x))", "all x y.((Sam(x) & Sam(y)) -> (Shumpus(x) & Numpus(y) & -Rompus(y)))"]}
{"id": "prontoqa_validation_121", "nl": "Sam is not a gorpus.", "fol": "-gorpus(Sam)", "prediction": ["all x.(Sam(x) -> -Gorpus(x))", "(-Gorpus(Sam))", "all x.(Sam(x) -> -Gorpus(x))", "Sam is not a Gorpus.", "(-Gorpus(Sam))", "(-Gorpus(Sam) & -Gorpus(Sam))", "Sam is notGorpus(Sam).", "all x.(Sam(x) -> -Gorpus(x))", "-Gorpus(Sam)", "all x.(Sam(x) -> -Gorpus(x))", "all x.(Sam(x) -> -Gorpus(x))", "(-Gorpus(Sam)).", "-Gorpus(sam)", "all x.(Sam(x) -> -Gorpus(x))", "-Gorpus(sam)", "(-Gorpus(Sam)"]}
{"id": "prontoqa_validation_122", "nl": "Vumpuses are sterpuses.", "fol": "all x. (vumpus(x) -> sterpus(x))", "prediction": ["all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "(Sterpuse(v) & Sterpuse(v))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpuse(x))", "(Sterpuse(Vumpus) & Sterpuse(Vumpus))", "all x.(Vumpus(x) -> Sterpuse(x))", "(Sterpuse(v) & Sterpuse(v))", "all x y.((Vumpus(x) & Sterpus(y)) -> Sterpuse(x))", "all x.(Vumpus(x) -> Steroid(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpuse(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpus(x))", "all x.(Vumpus(x) -> Steroid(x))", "all x.(Vumpuse(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterpuse(x))", "all x.(Vumpus(x) -> Sterosene(x))"]}
{"id": "prontoqa_validation_123", "nl": "Sally is not a sterpus and Sally is a lorpus and Sally is a zumpus.", "fol": "(-sterpus(Sally) & lorpus(Sally) & zumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Sterpus(x)) & (Lorpus(x) & Zumpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & -Lorpus(x) & -Zumpus(x)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & All z.(Zumpus(z))) -> -Sterpus(x)))", "(-Sterpus(Sally) & -Lorpus(Sally) & Zumpus(Sally))", "all x.(Sally(x) -> (-Sterpus(x) & -Lorpus(x) & -Zumpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & Lorpus(x) & Zumpus(x)))", "all x y.((Sally(x) & -Sterpus(x)) -> (Lorpus(x) & Zumpus(y)))", "(all x.(Sally(x) -> -Sterepus(x)) & (Lorpus(x) | Zumpus(x))))", "(-Sterpus(Sally) & Lorpus(Sally) & Zumpus(Sally))", "all x.(Sally(x) -> (-Sterpus(x) & (Lorpus(x) | Zumpus(x))))", "exists x.(Sally(x) & -Sterpus(x) & exists y.(Lorpus(y) & exists z.(Zumpus(z) & -Sterpus(z))))", "(-Storpus(Sally) & -Lorpus(Sally) & Zumpus(Sally))", "(all x y.(Sally(x) -> -Sterpus(x)) & (Lorpus(y) | Zumpus(y)))", "(all x.(Sally(x) -> -Sterpus(x)) & all y.(Lorpus(y) & All z.(Zumpus(z))) -> -Sterpus(x)))", "all x y z.((Sally(x) & Sterpus(y) & Lorpus(z)) -> (-Sterpus(x) & -Lorpus(y) & -Zumpus(z)))", "all x y.((Sally(x) & Sterpus(y)) -> (-Sterpus(x) & Lorpus(y) & Zumpus(x)))"]}
{"id": "prontoqa_validation_124", "nl": "Sally is not a vumpus.", "fol": "-vumpus(Sally)", "prediction": ["Sally is not a vumpus.", "all x.(Sally(x) -> -Vumpus(x))", "(-Vumpus(Sally))", "Sally n'est pas vumpus.", "Sally -Vumpus(Sally)", "all x.(Sally(x) -> -Vumpus(x))", "Sally is not a Vumpus.", "-Vumpus(Sally)", "Sally is not a vumpus.", "all x.(Sally(x) -> -Vumpus(x))", "(-Vumpus(Sally))", "Sally n'est pas vumpus.", "Sally is not a Vumpus(Sally)", "Sally -Vumpus(Sally)", "-Vimpus(Sally)", "(-Vumpus(Sally))"]}
{"id": "prontoqa_validation_125", "nl": "Every wumpus is a brimpus.", "fol": "all x. (wumpus(x) -> brimpus(x))", "prediction": ["all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Has(x,y))", "(all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x y.((Wumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & -Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "all x.(Wumpus(x) -> Brimpus(x))", "exists x.(Wumpus(x) & Brumpus(x))", "exists x.(Wumpus(x) & Brumpus(x))"]}
{"id": "prontoqa_validation_126", "nl": "Rex is not a brimpus and Rex is a numpus and Rex is a sterpus.", "fol": "(-brimpus(Rex) & numpus(Rex) & sterpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x)))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Numpus(y) -> -Brimpus(y)) & (Sterpus(y) -> -Brimpus(y)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Nompus(y) & Sterpus(y))))", "all x.(Rex(x) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "(all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> -Brimpus(x)) & ((Rex(x) & Sterpus(x)) -> Sterpus(x)))", "(-Brimpus(rex) & Numpus(rex) & Sterpus(rex))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "all x y.((Rex(x) & Brimpus(y) & Numpus(y)) -> (-Brimpus(x) & Sterpus(x)))", "(all x.(Rex(x) -> -Brimpus(x)) & (Rex(x) -> Numpus(x)) & (Rex(x) -> Sterpus(x)))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z)) -> (-Brimpus(x) & -Numpus(x) & -Sterpus(x)))", "all x.(Rex(x) -> (-Brimpus(x) & Numpus(x) & Sterpus(x)))", "(-Brimpus(rex) & Numpus(rex) & Sterpus(rex))", "all x y z.((Rex(x) & Brimpus(y) & Numpus(z) & Sterpus(x)) -> (-Brimpus(x) & Numpus(y) & Sterpus(z)))", "(all x.(Rex(x) -> -Brimpus(x)) & all y.(Nompus(y) & Sterpus(y)))", "(all x.(Rex(x) -> -Brumpus(x)) & all y.(Rex(y) -> Numpus(y)) & all z.(Rex(z) -> Sterpus(z))))"]}
{"id": "prontoqa_validation_127", "nl": "Numpuses are yumpuses.", "fol": "all x. (numpus(x) -> yumpus(x))", "prediction": ["all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x y.((Numpus(x) & Yumpus(y)) -> Is(x,y))", "all x.(Numpus(x) -> Yumpus(x))", "(Yumpuse(Numpus)", "all x y.((Numpus(x) & Yumpus(y)) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))", "all x y.((Numpus(x) & Yampus(y)) -> Yumpus(x))", "all x.(Numpuse(x) -> Yampus(x))", "(Yumpus)", "all x.(Numpus(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "all x.(Numpuse(x) -> Yumpus(x))", "all x.(Numpus(x) -> Yampus(x))", "All x.(Numpus(x) -> Yampus(x))", "all x.(Numpus(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_128", "nl": "Fae is not a yumpus, Fae is an impus, and Fae is a shumpus.", "fol": "(-yumpus(Fae) & impus(Fae) & shumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Humpus(x)))", "all x y z.((Fae(x) & Yampus(y) & Is(z) & Is(x,y)) -> (-Yumpus(x) & Is(x,z) & Is(x,y) & Is(x,z)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Shumpus(z))))", "(all x y z.((Fae(x) & Yumpus(y)) -> -Yumpus(x)) & ((Fae(z) & Impossible(z)) -> Humpus(z)))", "all x y z.((Fae(x) & Yumpus(y) & Impossible(z)) -> (-Yumpus(x) & Shumpus(x)))", "all x.(Fae(x) -> (-Yumpus(x) & Issue(x) & Shumpus(x)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Shumpus(x)))", "all x y z.((Fae(x) & Yampus(y) & Imperator(z)) -> (-Yumpus(x) & Imperator(x) & Humpus(y)))", "exists x.(Fae(x) & -Yumpus(x) & Is(x) & Is(x) & Shumpus(x))", "(all x y z.((Fae(x) & Yumpus(y)) -> -Yumpus(x)) & ((Fae(z) & Issue(z)) -> Shumpus(z)))", "all x y z.(Fae(x) & (-Yumpus(x) & Fae(y) & Imperator(y) & Shumpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & all y.(Fae(y) -> Issue(y)) & all z.(Fae(z) -> Shumpus(z))))", "all x y z.((Fae(x) & Yumpus(y) & Impossible(z)) -> (-Yumpus(x) & Shumpus(x)))", "all x y z.(Fae(x) -> (-Yumpus(x) & Issue(y) & IsShumpus(z)))", "(all x y z.((Fae(x) & Yumpus(y)) -> -Yumpus(x)) & ((Fae(z) & Impossible(z)) -> Humpus(z)))", "(all x.(Fae(x) -> -Yumpus(x)) & (Fae(x) -> Issue(x)) & (Fae(x) -> Humpus(x)))"]}
{"id": "prontoqa_validation_129", "nl": "Fae is not a numpus.", "fol": "-numpus(Fae)", "prediction": ["all x.(Fae(x) -> -Numpus(x))", "(-numpus(Fae))", "-Numpus(Fae)", "(Fae isn'tNumpus(Fae))", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(Fae)", "(-numpus(Fae))", "(-numpus(fae) & -numpus(fae))", "(Numpus(Fae) & -Numpus(Fae))", "-Numpus(Fae)", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(Fae)", "(Numpus(fae) & -Numpus(fae))", "all x.(Fae(x) -> -Numpus(x))", "-Numpus(fae)", "all x.(Fae(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_130", "nl": "Every sterpus is a wumpus.", "fol": "all x. (sterpus(x) -> wumpus(x))", "prediction": ["all x.(Sterpus(x) -> Wumpus(x))", "all x.(Steerpus(x) -> Wumpus(x))", "all x y.((Sterpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Sterpus(x) -> Wumpus(x))", "(all x.(Sterpus(x) -> Wumpus(x)))", "all x y.((Steerpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Steerpus(x) -> Wumpus(x))", "all x.(Strohpus(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "exists x.(Sterpus(x) & Wumpus(x))", "all x.(Stereo(x) -> Wumpus(x))", "all x.(Sterpus(x) -> Wampus(x))", "exists x.(Sterpus(x) & Hush(x))", "all x.(Steerpus(x) -> Wompus(x))", "all x.(Sterpus(x) -> Wumpus(x))", "exists x.(Steerpus(x) & Wumpus(x))"]}
{"id": "prontoqa_validation_131", "nl": "Sam is a vumpus and Sam is not a wumpus and Sam is a lorpus.", "fol": "(vumpus(Sam) & -wumpus(Sam) & lorpus(Sam))", "prediction": ["(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Wumpus(y) & Lorpus(z)))", "all x y.((Sam(x) & Vumpus(x) & Sam(y)) -> (-Wumpus(y) & Lorpus(y)))", "(all x.(Sam(x) -> Vumpus(x)) & (-Wumpus(x)) & (Lorpus(x) -> Vumpus(x)))", "all x.(Sam(x) -> (Vumpus(x) & -Wumpus(x) & Lorpus(x)))", "all x y z.((Sam(x) & Vumpus(x) & Sam(y) & Wumpus(z)) -> (-Wumpus(y) & -Lorpus(y)))", "(all x.(Vumpus(x) -> Sam(x)) & (-Wumpus(x) -> Sam(x)) & (Lorpus(x) -> Sam(x)))", "(all x y.(Vumpus(x) -> Sam(x)) & (-Wumpus(y) -> Sam(y))) & (Lorpus(y) -> Sam(y)))", "(all x.(Sam(x) -> Vumpus(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))", "(all x.(Sam(x) -> Vumpus(x)) & (-Wumpus(x)) | (-Wumpus(x) & -Lorpus(x))))", "all x y z.((Sam(x) & Vampire(x) & Wumpus(y) & Lorpus(z)) -> (Vampire(x) & -Wumpus(y) & Lorpus(z)))", "all x y.((Sam(x) & Vumpus(x) & Sam(y)) -> (-Wumpus(y) & Loompus(y)))", "all x.(Sam(x) -> (Vimpus(x) & -Wumpus(x) & Lorpus(x)))", "(all x y.(Vumpus(x) -> Sam(x)) & (-Wumpus(y) -> Sam(x)) & (Lorpus(y) -> Sam(y)))", "exists x.(Sam(x) & Vumpus(x) & -Wumpus(x) & Loompus(x))", "(all x.(Sam(x) -> Vampire(x)) & (Sam(x) -> -Wumpus(x)) & (Sam(x) -> Lorpus(x)))"]}
{"id": "prontoqa_validation_132", "nl": "Sam is not a sterpus.", "fol": "-sterpus(Sam)", "prediction": ["all x.(Sam(x) -> -Sterpus(x))", "(-Sterpus(Sam))", "Sam is not sterpus.", "all x.(Sam(x) -> -Sterpus(x))", "(-Sterpus(Sam))", "(-Sterepus(Sam) & -Sterpus(Sam))", "-(Sam(s) & Sterpus(s))", "Sam is not sterpus.", "all x.(Sam(x) -> -Sterepus(x))", "-Sam(sam)", "-SamSterpus(Sam)", "(-Sterepus(Sam) & -Sterpus(Sam))", "all x.(Sam(x) -> -Sterpus(x))", "all x.(Sam(x) -> -Sterepus(x))", "(-Steerpus(Sam))", "all x.(Sam(x) -> -Sterpus(x))"]}
{"id": "prontoqa_validation_133", "nl": "Tumpuses are zumpuses.", "fol": "all x. (tumpus(x) -> zumpus(x))", "prediction": ["all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x y.((Tumpus(x) & Zumpus(y)) -> Tompus(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "(Zombie(tump) & Tompus(tump))", "all x y.((Tumpus(x) & Tompus(y)) -> Zumpus(x))", "(Tompuse(tumpus) & Tompuse(tumpus))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tompus(x) -> (Tumpus(x) & Zumpus(x)))", "all x.(Tumpuse(x) -> Zumpuse(x))", "all x.(Tumpus(x) -> Zumpus(x))", "all x.(Tumpus(x) -> Zumpuse(x))", "all x.(Tumpuse(x) -> Zumpuse(x))", "All x.(Mumpsue(x) -> Zumpuse(x))", "All x.(Tompus(x) -> Tompus(x))"]}
{"id": "prontoqa_validation_134", "nl": "Sam is a rompus, Sam is not a zumpus, and Sam is a dumpus.", "fol": "(rompus(Sam) & -zumpus(Sam) & dumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Dumpus(z)))", "(all x.(Rompus(x) -> Sam(x)) & (-Zumpus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)) & (-Rompus(x) -> Sam(x)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Dumpus(z)))", "(all x y z.((Sam(x) & Rompus(y)) -> (Rompus(z) & -Zumpus(z)) & ((Sam(x) & Dumpus(x)) -> Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) & -Zumpus(x) & Dumpus(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "(all x y z.(Rompus(x) -> Sam(x)) & (Zumpus(y) -> Sam(z))) & (Dumpus(z) -> Sam(z)))", "(all x.(SameDay(x) -> Rompus(x)) & (SameDay(x) -> -Zumpus(x)) & (SameDay(x) -> Dumpus(x)))", "all x.(Sam(x) -> (Rompus(x) | -Zumpus(x) | Dumpus(x)))", "all x y z.((Sam(x) & Rompus(x) & Sam(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(y)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Zumpus(y) & Dumpus(z)))", "exists x.(Rompus(x) & -Zumpus(x) & Dumpus(x))", "(all x.(Rompus(x) -> Sam(x)) & (-Tompus(x) -> Sam(x)) & (Dumpus(x) -> Sam(x)))", "(all x.(Sam(x) -> Rompus(x)) & (Sam(x) -> -Zumpus(x)) & (Sam(x) -> Dumpus(x)))", "all x y z.((Sam(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(x)))"]}
{"id": "prontoqa_validation_135", "nl": "Tumpuses are jompuses.", "fol": "all x. (tumpus(x) -> jompus(x))", "prediction": ["all x.(Tumpuse(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x y.((Tumpuse(x) & Jompus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Jompuse(x))", "(Jompuse(tump) & Jompuse(tump))", "all x.(Tumpuse(x) -> Jompuse(x))", "all x y.((Tumpuse(x) & Jombus(y)) -> Has(x,y))", "(Jompuse(tump) & Jompuse(tump))", "all x.(Tumulus(x) -> Jompus(x))", "all x.(Tumpus(x) -> Jompuse(x))", "all x.(Tumpuse(x) -> Jompuse(x))", "(Jumpus)", "all x.(Tumulus(x) -> Jombus(x))", "all x.(Mumpsue(x) -> Jompuse(x))", "all x.(Mumpsue(x) -> Jombus(x))", "all x.(Tumpuse(x) -> Jompuse(x))"]}
{"id": "prontoqa_validation_136", "nl": "Polly is a lorpus, Polly is not a jompus, and Polly is a dumpus.", "fol": "(lorpus(Polly) & -jompus(Polly) & dumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(y) & Dumpus(z)))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & -Jompus(y)) & ((Polly(z) & Dumpus(z)) -> (Dumpus(z)))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Jompus(z)) -> (Lorpus(x) & -Jompus(x) & Dumpus(x)))", "all x.(Polly(x) -> (Lorpus(x) | -Jompus(x) | Dumpus(x)))", "exists x.(Polly(x) & Lorpus(x) & -Jompus(x) & Dumpus(x))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & -Jompus(y)) & ((Polly(z) & Dumpus(z)) -> Dumpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Polly(z)) -> (Lorpus(x) | -Jompus(z) | Dumpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Jompus(z) & Dumpus(x)) -> (Lorpus(x) & -Jompus(y) & Dumpus(z)))", "(all x.(Lorpus(x) -> Polly(x)) & (-Jompus(x) -> Polly(x)) & (Dumpus(x) -> Polly(x)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Jompus(y) -> Polly(y))) & (Dumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Jompus(z) & Dumpus(x)) -> (Lorpus(y) & -Jompus(y) & Dumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> -Jompus(y)) & all z.(Polly(z) -> Dumpus(z))))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) | -Jompus(y)) | (Dumpus(z) & Polly(z))))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Jompus(x)) & (Polly(x) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_137", "nl": "Polly is not a tumpus.", "fol": "-tumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly))", "Polly is notTumpus(Polly)", "all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly))", "all x.(Polly(x) -> -Tumpus(x))", "Polly is notTumpus(poly)", "all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly))", "Polly -Tumpus(Polly)", "-Tumpus(Polly)", "all x.(Polly(x) -> -Tumpus(x))", "(-Tumpus(Polly,Polly))", "(-Tumpus(Polly))", "All x.(Polly(x) -> -Tumpus(x))", "-Tumpus(Poly)"]}
{"id": "prontoqa_validation_138", "nl": "Every vumpus is a rompus.", "fol": "all x. (vumpus(x) -> rompus(x))", "prediction": ["all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "(all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "exists x y.(Vumpus(x) & Rompus(y))", "all x.((Vumpus(x) & Rompus(x)) -> HasVumpus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "exists x y.(Vumpus(x) & Rompus(y))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))", "exists x.(Vumpus(x) & Rompus(x))", "all x.(Vumpus(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_139", "nl": "Alex is a jompus, Alex is a sterpus, and Alex is not a rompus.", "fol": "(jompus(Alex) & sterpus(Alex) & -rompus(Alex))", "prediction": ["(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & -Rompus(y)))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) & Sterpus(y) & -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & -Alex(x)))", "(all x y z.((Alex(x) & Jompus(y)) -> (Jompus(z) | Sterepus(z))) & ((Alex(x) & -Rompus(x)) -> (Sterpus(x) & -Jompus(x))))", "all x.(Alex(x) -> (Jompus(x) | Sterpus(x) | -Rompus(x)))", "all x y z.((Alex(x) & Jompus(y) & Sterepus(z)) -> (Jompus(x) | Sterpus(x) | -Rompus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & all z.(Alex(z) -> -Rompus(z))))", "(all x.(Alexa(x) -> Jompus(x)) & all y.(Alexa(y) -> Sterpus(y)) & all z.(Alexa(z) -> -Rompus(z))))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) | Sterpus(y) & -Rompus(z)))", "(all x.(Alex(x) -> Jompus(x)) & (Alex(x) -> Sterpus(x)) & (Alex(x) -> -Rompus(x)))", "(all x y z.((Alex(x) & Jompus(y)) -> (Jompus(z) | Sterpus(z))) & ((Alex(x) & -Rompus(x)) -> (Sterpus(x) & -Jompus(x))))", "all x.(Alex(x) -> (Jompus(x) | Sterpus(x) | -Rompus(x)))", "all x y z.((Alex(x) & Jompus(y) & Sterepus(z)) -> (Jompus(x) | Sterpus(z) | -Rompus(z)))", "all x.(Alex(x) -> (Jompus(x) | Sterepus(x) | -Rompus(x)))", "(all x.(Alex(x) -> Jompus(x)) & all y.(Alex(y) -> Sterpus(y)) & -Rompus(y)))", "all x y z.((Alex(x) & Jompus(x) & Sterpus(y) & -Rompus(z)) -> (Jompus(x) | Sterpus(y) & -Rompus(z)))"]}
{"id": "prontoqa_validation_140", "nl": "Alex is not a vumpus.", "fol": "-vumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Vumpus(x))", "Alex is not a vumpus.", "(-Vumpus(Alex))", "all x.(Alex(x) -> -Vumpus(x))", "Alex is not a vumpus.", "-Vumpus(Alex)", "all x.(Alex(x) -> -Vumpus(x))", "Alex is not a Vumpus.", "(-Vumpus(Alex))", "-Vumpus(Alex)", "Alex is not vumpus.", "Alex is not a vumpus.", "all x.(Alex(x) -> -Vumpus(x))", "all x.(Alex(x) -> -Vumpus(x))", "(-Vumpus(Alex))", "All x.(Alex(x) -> -Vimpus(x))"]}
{"id": "prontoqa_validation_141", "nl": "Every dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x y.((Dumpus(x) & Wumpus(y)) -> Is(x,y))", "(all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x y.((Dumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Dumps(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "exists x.(Dumpus(x) & Humpus(x))", "exists x.(Dumpus(x) & Wumpus(x))", "exists x.(Dupus(x) & Wumpus(x))"]}
{"id": "prontoqa_validation_142", "nl": "Alex is not a wumpus, Alex is a yumpus, and Alex is a zumpus.", "fol": "(-wumpus(Alex) & yumpus(Alex) & zumpus(Alex))", "prediction": ["(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(z) & Yumpus(z)) -> Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & -Yumpus(x) & -Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yumpus(y) & Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & Yampus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)) & all z.(Alex(z) -> Zumpus(z))))", "(all x y z.((Alex(x) & Wumpus(y)) -> -Wumpus(x)) & ((Alex(z) & Yumpus(z)) -> Zumpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yumpus(x)) & (Alex(x) -> Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yumpus(z)) -> (-Wumpus(x) & Yampus(y) & Zumpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & Yampus(x) & Zumpus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Yampus(z)) -> (-Wumpus(x) | Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Yumpus(y)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Yampus(x)) & (Alex(x) -> Zumpus(x)))"]}
{"id": "prontoqa_validation_143", "nl": "Alex is not a dumpus.", "fol": "-dumpus(Alex)", "prediction": ["all x.(Alex(x) -> -Dumpus(x))", "Alex is not a Dumpus.", "(-Dumpus(Alex))", "all x.(Alex(x) -> -Dumpus(x))", "Alex is not a Dumpus.", "(-Dumpus(Alex))", "all x.(Alex(x) -> -Dumpus(x))", "-Dumpus(Alex)", "Alex is notDumpus.", "Alex is not a Dumpus.", "Alex is not Dumpus.", "all x.(Alex(x) -> -Dumpus(x))", "-Dumpus(Alex)", "(-Dumpus(Alex))", "All x.(Alex(x) -> -Dumpus(x))", "all x.(Alex(x) -> -Dumpus(x))"]}
{"id": "prontoqa_validation_144", "nl": "Every lempus is a jompus.", "fol": "all x. (lempus(x) -> jompus(x))", "prediction": ["all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x y.((Lempus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x y.((Lempus(x) & Jompus(y)) -> Has(x,y))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Limpus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "all x.(Limpus(x) -> Jompus(x))", "all x.(Lempus(x) -> Jompus(x))", "exists x.(Lempus(x) & Joompa(x))", "exists x.(Lempus(x) & Jompus(x))", "exists x.(Lempus(x) & Jompus(x))"]}
{"id": "prontoqa_validation_145", "nl": "Max is a sterpus and Max is not a jompus and Max is a yumpus.", "fol": "(sterpus(Max) & -jompus(Max) & yumpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Max(x) & Sterpus(x) & -Jompus(y) & Yumpus(z)) -> (Sterpus(x) & -Jompus(y) & Yumpus(z)))", "(all x y.((Max(x) & Sterpus(x)) -> (Max(x) & -Jompus(y)) & ((Max(x) & Yumpus(x)) -> (Max(x) & -Jompus(y))))", "all x y.((Max(x) & Sterpus(x) & -Jompus(y)) -> Yumpus(x))", "(all x y z.((Max(x) & Sterpus(x)) -> (Sterpus(x) & -Jompus(y)) & ((Max(z) & Yumpus(z))) -> (Yumpus(z))))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Jompus(x)) & (Max(x) -> Yumpus(x)))", "all x.(Max(x) -> (Sterpus(x) & -Jompus(x) & Yumpus(x)))", "((Max(Max) & Sterpus(Max)) | (-Jompus(Max) & Yumpus(Max))))", "(all x.(Max(x) -> Sterepus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Jompus(z)) -> (-Jompus(x) & Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) & -Jompus(x)) | (-Max(x) & Yumpus(x)))))", "(all x y.((Max(x) & Sterpus(x)) -> (Sterpus(x) & -Jompus(y)) & ((Max(x) & Yumpus(x)) -> (Yumpus(x))))", "all x y.((Max(x) & Sterpus(x)) -> (-Jompus(x) & Yumpus(y)))", "all x.(Max(x) -> (Sterpus(x) & -Jompus(x) & Yumpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Jompus(y))) & all z.(Max(z) -> Yumpus(z)))", "all x.(Max(x) -> (Stereos(x) & -Jompus(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_146", "nl": "Max is not a lempus.", "fol": "-lempus(Max)", "prediction": ["all x.(Max(x) -> -Lempus(x))", "-Lempus(Max)", "Max is not a lempus.", "all x.(Max(x) -> -Lempus(x))", "(-Lempus(Max))", "(Max is notLempus(Max))", "Max is not a Lempus.", "Max is not lempus.", "-Limpus(Max)", "all x.(Max(x) -> -Lempus(x))", "(-lempus(Max))", "all x.(Max(x) -> -Lempus(x))", "-Lempus(Max)", "(-lempus(Max))", "-Limpus(Max)", "-Lempus(Max)"]}
{"id": "prontoqa_validation_147", "nl": "Each yumpus is a zumpus.", "fol": "all x. (yumpus(x) -> zumpus(x))", "prediction": ["all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Zumpus(x))", "all x y.((Yumpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(yumpus(x) & Tompus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(yumpus(x) & Tosspus(x))", "all x.(Yumpus(x) -> Zumpus(x))", "exists x.(Yumpus(x) & Zurpus(x))"]}
{"id": "prontoqa_validation_148", "nl": "Rex is a rompus, Rex is a dumpus, and Rex is not a zumpus.", "fol": "(rompus(Rex) & dumpus(Rex) & -zumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) & Dumpus(y) & -Rompus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Rex(y) -> Dumpus(y)) & all z.(Rex(z) -> -Zumpus(z))))", "(all x y z.(Rompus(x) -> Rompus(x)) & (Dumpus(y) -> Dumpus(y)) & (Zumpus(z) -> -Rompus(z)))", "(all x.(Rompus(x) -> Rex)) & (Dumpus(x) -> Rex)) & (Zumpus(x) -> -Rompus(x)))", "all x.(Rex(x) -> (Rompus(x) & Dumpus(x) & -Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(y) | -Rompus(z)))", "all x y z.((Rompus(x) & Dumpus(y) & Rex(z)) -> (Rompus(x) | Dumpus(y) & -Zumpus(z)))", "(all x y z.((Rex(x) & Rompus(y)) -> (Rompus(x) | Dumpus(y)) & -Zumpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Dumpus(y) -> -Zumpus(y)))", "all x y z.((Rex(x) & Rompus(y) & Dumpus(z)) -> (Rompus(x) & Dumpus(x) & -Zumpus(x)))", "all x.(Rompus(x) & Dumpus(x) & -Zumpus(x))", "(all x.(Rompus(x) -> Rex)) & (Dumpus(x) -> Rex)) & -Zumpus(x)))", "(all x y z.(Rompus(x) -> Rompus(x)) & (Dumpus(y) -> Dumpus(y)) & (Rompus(z) -> Zumpus(z)))", "(all x.(Rex) -> Rompus(x)) & (Rex(x) -> Dumpus(x)) & (Rex(x) -> -Zumpus(x)))", "all x y z.((Rex(x) & Dumpus(y) & Zumpus(z)) -> (Rompus(x) | Dumpus(y) | -Tompus(z)))"]}
{"id": "prontoqa_validation_149", "nl": "Rex is not a yumpus.", "fol": "-yumpus(Rex)", "prediction": ["Rex is notYumpus(x)", "(-Yumpus(Rex))", "all x.(Rex(x) -> -Yumpus(x))", "-Yumpus(Rex)", "(Yumpus(Rex) & -Yumpus(Rex))", "Rex is notYumpus(x)", "all x.(Rex(x) -> -Yumpus(x))", "Rex is notyumpus.", "(-Yumpus(Rex))", "-Yumpus(Rex)", "all x.(Rex(x) -> -Yumpus(x))", "Rex is notYumpus(x)", "Rex is notyumpus.", "All x.(Rex(x) -> -Yumpus(x))", "(-Yumpus(Rex))", "-yumpus."]}
{"id": "prontoqa_validation_150", "nl": "Tumpuses are impuses.", "fol": "all x. (tumpus(x) -> impus(x))", "prediction": ["all x.(Tumulus(x) -> Issue(x))", "all x y.((Tumpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Tumpuse(x) -> Issue(x))", "(Issues(tumpuse) & Issues(tumpuse))", "all x.(Tumult(x) -> Issue(x))", "all x y.((Tumult(x) & Issue(y)) -> Issue(x,y))", "all x.(Tumpus(x) -> Issue(x))", "(Issue(tump) & Isofix(tump))", "all x.(Tumpuse(x) -> Issues(x))", "all x y.((Tumpuse(x) & Issue(y)) -> Issue(x,y))", "all x.(Tumulus(x) -> Impects(x))", "all x.(Tumpuse(x) -> Isolated(x))", "all x.(Tumpus(x) -> Issue(x))", "all x.(Tumult(x) -> Impermissible(x))", "all x.(Mumpsue(x) -> Issue(x))", "all x.(Tumpuse(x) -> Isolated(x))"]}
{"id": "prontoqa_validation_151", "nl": "Sally is a jompus and Sally is a dumpus and Sally is not an impus.", "fol": "(jompus(Sally) & dumpus(Sally) & -impus(Sally))", "prediction": ["(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x))))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y) & -Impossible(z)) -> (Jompus(x) & Dumpus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x y.((Sally(x) & Jompus(x) & Dumpus(y)) -> (Jompus(x) & -Impossible(y)))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & -Impossible(x)))", "(all x y.(Jompus(x) & Dumpus(y)) -> (Jompus(x) & Dumpus(y) & -Impossible(y)))", "Sally is a Jompus (Jompus) & Sally is Dumpus(Sally) & Sally is -Impossible(Sally))", "all x y z.((Sally(x) & Jompus(x) & Dumpus(y) & -Ilimination(z)) -> (Jompus(x) & Dumpus(y) & -Ilimination(z)))", "(Jompus(Sally) & Dumpus(Sally) & -Impossible(Sally))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & (Sally(x) -> -Impossible(x)))", "exists x.(Sally(x) & Jompus(x) & Dumpus(x) & -Ilios(x))", "(all x.(Sally(x) -> Jompus(x)) & all y.(Sally(y) -> Dumpus(y)) & all z.(Sally(z) -> -Impossible(z))))", "all x.(Sally(x) -> (Jompus(x) & Dumpus(x) & -Ilimination(x)))", "(all x y.(Jompus(x) -> Sally(x)) & (Dumpus(y) -> Sally(y)))", "all x.(Sally(x) -> (Jompus(x) | Dumpus(x) | Imperator(x)))", "(all x.(Sally(x) -> Jompus(x)) & (Sally(x) -> Dumpus(x)) & -Ilios(x)))"]}
{"id": "prontoqa_validation_152", "nl": "Sally is not a tumpus.", "fol": "-tumpus(Sally)", "prediction": ["all x.(Sally(x) -> -Tumpus(x))", "Sally is not a Tumpus.", "(-Tumpus(Sally))", "Sally -Tumpus(Sally)", "Sally is not a tumpus.", "all x.(Sally(x) -> -Tumpus(x))", "Sally n'est pasTumpus(Sally)", "(-Tumpus(Sally))", "Sally is not a Tumpus.", "-Tumpus(Sally)", "all x.(Sally(x) -> -Tumpus(x))", "Sally -Tumpus(Sally)", "Sally is not a tumpus.", "Sally is not tumpus.", "(-Tumpus(Sally))", "-Tumpus(Sally)"]}
{"id": "prontoqa_validation_153", "nl": "Each zumpus is a vumpus.", "fol": "all x. (zumpus(x) -> vumpus(x))", "prediction": ["all x.(Tompus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "(all x.(Zumpus(x) -> Vumpus(x))", "all x y.((Tompus(x) & Vumpus(y)) -> Has(x,y))", "all x.(Tompus(x) -> Vumpus(x))", "all x y.((Zumpus(x) & Vumpus(y)) -> -Vumpus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "all x.(Tompus(x) -> Vampus(x))", "all x.(Zumpus(x) -> Vumpus(x))", "exists x.(Zumpus(x) & -Vumpus(x))", "all x.(Tompus(x) -> Vumpus(x))", "all x.(Zumpus(x) -> Voompus(x))", "exists x.(Zumpus(x) & -Vumpus(x))", "all x.(Tompus(x) -> Vampus(x))", "exists x.(Zumpus(x) & Vampus(x))", "exists x.(Tommus(x) & -Vimpus(x))"]}
{"id": "prontoqa_validation_154", "nl": "Sally is not a vumpus and Sally is a yumpus and Sally is a dumpus.", "fol": "(-vumpus(Sally) & yumpus(Sally) & dumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & Yumpus(x) & Dumpus(x)))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "(all x.(Sally(x) -> -Vumpus(x)) & (Yumpus(x) & Dumpus(x)))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & -Yumpus(x) & -Dumpus(x)))", "all x y.((Sally(x) & -Vumpus(x) & Yumpus(y)) -> Dumpus(x))", "(all x y.(Vumpus(x) -> -Vumpus(x)) & (Yumpus(y) -> Dumpus(y)))", "all x.(Sally(x) -> (-Vumpus(x) & -Yumpus(x) & -Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & (Yumpus(x) & Dumpus(x)))", "(all x.(Sally(x) -> -Vumpus(x)) & all y.(Sally(y) -> Yumpus(y))) & all z.(Sally(z) -> Dumpus(z)))", "all x.(Sally(x) -> (-Vumpus(x) & -Yumpus(x) & -Dumpus(x)))", "exists x.(Sally(x) & -Vumpus(x) & Yumpus(x) & Dumpus(x))", "(-Vumpus(Sally) & Yumpus(Sally) & Dumpus(Sally))", "all x y.((Sally(x) & Sally(y)) -> (-Vumpus(x) & Yumpus(y) & Dumpus(x)))", "all x y z.((Sally(x) & Vumpus(y) & Yumpus(z)) -> (-Vumpus(x) & Yumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_155", "nl": "Sally is not a zumpus.", "fol": "-zumpus(Sally)", "prediction": ["Sally is not a zumpus.", "all x.(Sally(x) -> -Zumpus(x))", "(-Zumpus(Sally))", "Sally -Zumpus(Sally)", "Sally is not a zumpus.", "all x.(Sally(x) -> -Zumpus(x))", "Sally n'est pas zumpus.", "(-Zumpus(Sally))", "Sally is not a zumpus.", "all x.(Sally(x) -> -Zumpus(x))", "-Zumpus(Sally)", "Sally -Zumpus(Sally)", "Sally is not zumpus.", "Sally n'est pas zumpus.", "(-Zumpus(Sally))", "Sally is not a zumpus."]}
{"id": "prontoqa_validation_156", "nl": "Every jompus is a rompus.", "fol": "all x. (jompus(x) -> rompus(x))", "prediction": ["all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "(all x.(Jompus(x) -> Rompus(x))", "all x y.((Jompus(x) & Rompus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x y.((Jompus(x) & Rompus(y)) -> Is(x,y))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jimpus(x) -> Rompus(x))", "exists x.(Jumpus(x) & Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "all x.(Jompus(x) -> Rompus(x))", "exists x.(Jompus(x) & Rompus(x))", "exists x.(Mjompus(x) & Rompus(x))"]}
{"id": "prontoqa_validation_157", "nl": "Alex is not a rompus and Alex is a zumpus and Alex is a shumpus.", "fol": "(-rompus(Alex) & zumpus(Alex) & shumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(y) & Humpus(z)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))", "all x y.((Alex(x) & Rompus(y)) -> (-Rompus(x) & Zumpus(y) & Humpus(x)))", "all x.(Alex(x) -> (-Rompus(x) & -Zumpus(x) & -Shumpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y))) & all z.(Alex(z) -> Humpus(z)))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(x) & Humpus(x)))", "(all x y.((Alex(x) & -Rompus(x)) -> Zumpus(x)) & ((Alex(y) & -Rompus(y)) -> Humpus(y)))", "(all x y z.((Alex(x) & Rompus(y)) -> -Rompus(x)) & ((Alex(z) & Zumpus(z)) -> Humpus(z)))", "all x.(Alex(x) -> (-Rompus(x) & Zumpus(x) & Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))", "all x y.((Alex(x) & Rompus(y) & Zumpus(y)) -> (-Rompus(x) & Zumpus(y) & Humpus(y)))", "all x.(Alex(x) -> (-Rompus(x) & Tompus(x) & Humpus(x)))", "(all x.(Alex(x) -> -Rompus(x)) & all y.(Alex(y) -> Zumpus(y)) & all z.(Alex(z) -> Humpus(z))))", "all x y z.((Alex(x) & Rompus(y) & Zumpus(z)) -> (-Rompus(x) & Zumpus(y) & Humpus(z)))", "exists x.(Alex(x) & -Rompus(x) & Zumpus(x) & Humpus(x))", "(all x.(Alex(x) -> -Rompus(x)) & (Alex(x) -> Zumpus(x)) & (Alex(x) -> Humpus(x)))"]}
{"id": "prontoqa_validation_158", "nl": "Alex is not a jompus.", "fol": "-jompus(Alex)", "prediction": ["all x.(Alex(x) -> -Jompus(x))", "Alex is not a jompus.", "all x.(Alex(x) -> -Jompus(x))", "Alex is not a Jompus.", "(-Jompus(Alex))", "all x.(Alex(x) -> -Jimpus(x))", "Alex is not a jompus.", "(-Jimpus(Alex))", "-Jompus(Alex)", "Alex is not a Jompus.", "(-jompus(Alex)).", "all x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jimpus(x))", "-Jompus(Alex)", "All x.(Alex(x) -> -Jompus(x))", "all x.(Alex(x) -> -Jumpus(x))"]}
{"id": "prontoqa_validation_159", "nl": "Alex is a lorpus and Alex is a grimpus and Alex is not a tumpus.", "fol": "(lorpus(Alex) & grimpus(Alex) & -tumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(z) & -Tumpus(x)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & (Alex(x) -> -Tumpus(x)))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> (Lorpus(x) & -Tumpus(x)))", "all x.(Alex(x) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x y z.((Alex(x) & Lorpus(y)) -> (Lorpus(x) & Grimpus(y))) & ((Alex(z) & Tumpus(z)) -> -Tumpus(z)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) & Grimpus(x) & -Tumpus(x)))", "(all x.(Alexa(x) -> Lorpus(x)) & all y.(Alexa(y) -> Grimpus(y)) & all z.(Alexa(z) -> -Tumpus(z))))", "all x y z.((Alex(x) & Lorpus(x) & Grimpus(y) & -Tumpus(z)) -> (Lorpus(x) & Grimpus(y) & -Tumpus(z)))", "all x.(Alex(x) -> (Lorpus(x) | Grimpus(x) | -Tumpus(x)))", "exists x.(Alex(x) & Lorpus(x) & Grimpus(x) & -Tumpus(x))", "(all x y.(Lorpus(x) -> Alex(x)) & (Grimpus(y) -> Alex(y)) & (Tumpus(y) -> Alex(y)))", "(all x.(Alex(x) -> Lorpus(x)) & all y.(Alex(y) -> Grimpus(y)) & all z.(Alex(z) -> -Tumpus(z))))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> Grimpus(x)) & -Alex(x)))", "all x y.((Alex(x) & Lorpus(x) & Grimpus(y)) -> (Lorpus(x) & -Tumpus(x)))", "all x y z.((Alex(x) & Lorpus(y) & Grimpus(z)) -> (Lorpus(x) | Grimpus(z) | -Tumpus(x)))"]}
{"id": "prontoqa_validation_160", "nl": "Alex is not an impus.", "fol": "-impus(Alex)", "prediction": ["all x.(Alex(x) -> -Impossible(x))", "-Impossible(Alex)", "Alex -IsImpossible(Alex)", "Alex -Impossible(Alex)", "Alex is not impus.", "(-Is(Alex) & Is(Alex)))", "Alex is not a impus.", "all x.(Alex(x) -> -Impossible(x))", "-Impossible(Alex)", "(-IsExercise(Alex))", "All x.(Alex(x) -> -Impossible(x))", "Alex is not a impus.", "Alex is not impus.", "-Impossible(Alex)", "all x.(Alex(x) -> -Issue(x))", "All x.(Alex(x) -> -Impossible(x))"]}
{"id": "prontoqa_validation_161", "nl": "Yumpuses are brimpuses.", "fol": "all x. (yumpus(x) -> brimpus(x))", "prediction": ["all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x y.((Yumpus(x) & Brimpus(y)) -> Brimpus(x))", "(Brimpuse(y) & -Brimpus(y))", "all x.(Yumpus(x) -> Brimpus(x))", "(Brimpuse(y) & Brimpuse(y))", "All x y.((Yumpus(x) & Brimpuse(y)) -> Is(x,y))", "all x.(Umpuse(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "All x y.((Yumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Umbuse(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpuse(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpus(x))", "all x.(Yumpus(x) -> Brimpuse(x))"]}
{"id": "prontoqa_validation_162", "nl": "Wren is not a brimpus and Wren is a zumpus and Wren is a grimpus.", "fol": "(-brimpus(Wren) & zumpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Tompus(y) -> Tompus(y)) & (Grimpus(y) -> Grimpus(y)))", "all x y.((Wren(x) & Wren(y)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(y)))", "(all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> -Brimpus(x)) & ((Wren(x) & Grimpus(x)) -> Grimpus(x)))", "all x.(Wren(x) -> (-Brimpus(x) & Zumpus(x) & Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))", "all x y.((Wren(x) & Brimpus(y) & Zumpus(y)) -> (-Brimpus(x) & Grimpus(x)))", "(-Brimpus(Wren) & Zumpus(Wren) & Grimpus(Wren))", "(all x.(Wren(x) -> -Brimpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Zumpus(y) & Grimpus(z)))", "(all x.(Wren(x) -> -Brimpus(x)) & all y.(Wren(y) -> Zumpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "(all x y.(Brimpus(x) -> -Brimpus(x)) & (Zumpus(y) -> Grimpus(y)))", "(all x.(Wren(x) -> -Brumpus(x)) & (Wren(x) -> Zumpus(x)) & (Wren(x) -> Grimpus(x)))", "all x y z.((Wren(x) & Brimpus(y) & Zumpus(z)) -> (-Brimpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_validation_163", "nl": "Wren is not a yumpus.", "fol": "-yumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Yumpus(x))", "(-Yumpus(Wren))", "all x.(Wren(x) -> -Yumpus(x))", "Wren is notYumpus.", "(-Yumpus(Wren))", "all x.(Wren(x) -> -Yumpus(x))", "(Yumpus(wren) & -Yumpus(wren))", "-Yumpus(Wren)", "(yumpus)", "all x.(Wren(x) -> -Yumpus(x))", "(-Yumpus(Wren))", "-Yumpus(Wren)", "all x.(Wren(x) -> -Yumpus(x))", "-yumpus.", "all x.(Wren(x) -> -Yumpus(x))", "-Yumpus(wren)"]}
{"id": "prontoqa_validation_164", "nl": "Numpuses are dumpuses.", "fol": "all x. (numpus(x) -> dumpus(x))", "prediction": ["all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> (Dumpsuse(x) & -Dumpsuse(y)))", "(all x.(Numpuse(x) -> Dumpuse(x)))", "(Dumpsuse(n) & -Dumpsuse(n))", "all x.(Numpus(x) -> Dumpuse(x))", "all x y.((Numpuse(x) & Dumpuse(y)) -> Is(x,y))", "all x.(Numptus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "(Dumpsus(nupus) & Dumpuse(nupus))", "all x.(Numpus(x) -> Dumpuse(x))", "all x.(Numptus(x) -> Dumpuse(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpus(x))", "all x.(Numpuse(x) -> Dumpuse(x))", "all x.(Numpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_165", "nl": "Wren is not a dumpus, Wren is a sterpus, and Wren is a lorpus.", "fol": "(-dumpus(Wren) & sterpus(Wren) & lorpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) -> Sterpus(x))) & ((Wren(x) -> Lorpus(x))))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Lorpus(z))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z)))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))", "all x.(Wren(x) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))", "(-Dumpus(Wren) & Sterpus(Wren) & Lorpus(Wren))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Lorpus(x)))))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & all y.(Wren(y) -> Sterpus(y)) & all z.(Wren(z) -> Lorpus(z))))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(y) & Lorpus(z)))", "(all x y z.((Wren(x) & Dumpus(y)) -> -Dumpus(x)) & ((Wren(z) & Sterpus(z)) -> Lorpus(z)))", "all x y z.((Wren(x) & Sterpus(y) & Lorpus(z)) -> (-Dumpus(x) | Sterpus(y) & Lorpus(z)))", "(all x.(Wren(x) -> -Dumpus(x)) & ((Wren(x) & Sterpus(x)) | (Wren(x) & Lorpus(x))))", "all x y z.((Wren(x) & Dumpus(y) & Sterpus(z)) -> (-Dumpus(x) & Sterpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_166", "nl": "Each brimpus is an impus.", "fol": "all x. (brimpus(x) -> impus(x))", "prediction": ["all x.(Brimpus(x) -> IsImpossible(x))", "all x.(Brimpus(x) -> IsImpossed(x))", "all x y.((Brimpus(x) & Brimpus(y)) -> IsImpossible(x))", "all x.(Brimpus(x) -> Imperator(x))", "all x.(Brumpus(x) -> Impossible(x))", "(all x.(Brimpus(x) -> Isolated(x))", "all x y.((Brimpus(x) & Brimpus(y)) -> IsImpossible(x))", "all x.(Brimpus(x) -> IsImpossible(x))", "all x y.((Brimpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Brumpus(x) -> Imperative(x))", "all x.(Brimpus(x) -> Is(x,Impossible))", "exists x.(Brimpus(x) & IsImpossed(x))", "exists x.(Brimpus(x) & Impossible(x))", "all x.(Brumpus(x) -> Impeccable(x))", "exists x.(Brimpus(x) & Impossible(x))", "exists x.(Brimpus(x) & IsBrimpus(x))"]}
{"id": "prontoqa_validation_167", "nl": "Max is a sterpus and Max is not an impus and Max is a gorpus.", "fol": "(sterpus(Max) & -impus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Gorpus(x)))", "all x y z.((Max(x) & Sterpus(y) & Is(z)) -> (-Impossible(x) & Gorpus(x)))", "all x y.((Max(x) & Sterpus(x) & -Impossible(y)) -> (Max(x) & Gorpus(x)))", "(all x y.((Max(x) & Sterpus(x)) -> -Impossible(x)) & ((Max(y) & Gorpus(y)) -> -Impossible(y)))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) & -Impossible(x))) | (-Max(x) & Gorpus(x))))", "all x.(Max(x) -> (Sterpus(x) & -Impossible(x) & Gorpus(x)))", "((Max(Max) & Sterpus(Max)) & -Impossible(Max)) & (Max(Max) -> Gorpus(Max)))", "(all x y.((Max(x) & Sterpus(x)) -> (Sterpus(x) & -Impossible(x))) & ((Max(y) & Gorpus(y)) -> (Gorpus(y))))", "all x y z.((Max(x) & Sterpus(x) & -Impossible(y) & Gorpus(z)) -> (Sterpus(x) & Gorpus(z)))", "(all x.(Max(x) -> Sterpus(x)) & (Max(x) -> -Impossible(x)) & (Max(x) -> Gorpus(x)))", "(all x y.((Max(x) & Sterpus(x)) -> (-Impossible(x) & -Impossible(y))) & ((Max(x) & Gorpus(x)) -> (-Impossible(y))))", "(all x.(Max(x) -> Sterpus(x)) & ((Max(x) -> -Impossible(x))) & ((Max(x) -> Gorpus(x))))", "all x y.((Max(x) & Sterpus(x) & Max(y)) -> (-Impossible(y) & Gorpus(y)))", "all x.(Max(x) -> (Sterpus(x) & -Impossible(x) & Gorpus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Max(y) -> -Impossible(y))) & all z.(Max(z) -> Gorpus(z)))", "all x.(Max(x) -> (Sterpus(x) & -Impossible(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_168", "nl": "Shumpuses are grimpuses.", "fol": "all x. (shumpus(x) -> grimpus(x))", "prediction": ["all x.(Shampus(x) -> Grimpuse(x))", "all x.(Shuppus(x) -> Grimpuse(x))", "all x y.((Shuppus(x) & Grimpuse(y)) -> (Shampoos(x) & Grimpuse(x)))", "all x.(Shampoos(x) -> Grimpuse(x))", "(Gruffus(sh) & Grimpuse(sh))", "(Shampoos(shm) & Grimpuse(shm))", "all x.(Shimpus(x) -> Grimpuse(x))", "(Shutus) -> Grimpuse(s))", "all x y.((Shuppus(x) & Grimpus(y)) -> Grimpuse(x))", "all x.(Smoothpuse(x) -> Grimpuse(x))", "(Grimpuse(s) & -Shampoose(s))", "all x.(Shumpus(x) -> Grimpuse(x))", "all x.(Shupuse(x) -> Grappase(x))", "all x.(Shutus(x) -> Grimpuse(x))", "all x.(Shumpus(x) -> Grappus(x))", "all x.(Shuppe(x) -> Grimpuse(x))"]}
{"id": "prontoqa_validation_169", "nl": "Max is not a grimpus and Max is a lempus and Max is a gorpus.", "fol": "(-grimpus(Max) & lempus(Max) & gorpus(Max))", "prediction": ["(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "(all x y z.((Max(x) & Grimpus(y)) -> -Grimpus(x)) & ((Max(z) & Lempus(z)) -> Gorpus(z)))", "all x.(Max(x) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(-Grimpus(Max) & Lempus(Max) & Gorpus(Max))", "all x y z.((Max(x) & Gruppus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "all x y.((Max(x) & Grimpus(y)) -> (-Grimpus(x) & Lempus(y) & Gorpus(x)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z))))", "all x.(Max(x) -> (-Grimpus(x) & Lempus(x) & Gorpus(x)))", "(all x y.((Max(x) & Grimpus(y)) -> -Grimpus(x)) & ((Max(x) & Lempus(y)) -> Gorpus(x)))", "(all x.(Max(x) -> -Grimpus(x)) & (Max(x) -> Lempus(x)) & (Max(x) -> Gorpus(x)))", "all x y z.((Max(x) & Grimpus(y) & Lempus(z) & Gorpus(x)) -> (-Grimpus(x) & Lempus(y) & Gorpus(z)))", "exists x.(Max(x) & -Grimpus(x) & Lempus(x) & Gorpus(x))", "(all x.(Max(x) -> -Grimpus(x)) & all y.(Max(y) -> Lempus(y)) & all z.(Max(z) -> Gorpus(z)))"]}
{"id": "prontoqa_validation_170", "nl": "Max is not a shumpus.", "fol": "-shumpus(Max)", "prediction": ["(-Shumpus(Max))", "all x.(Max(x) -> -Shumpus(x))", "-Shumpus(Max)", "Max is not a shumpus.", "all x.(Max(x) -> -Shumpus(x))", "Max is notShumpus(Max)", "-(Max(Max) & Humpus(Max))", "(Max is notShumpus(Max))", "(-Shumpus(Max))", "all x.(Max(x) -> -Shumpus(x))", "-Shumpus(Max)", "all x.(Max(x) -> -Shumpus(x))", "(-Shumpus(Max))", "-(Shumpus(Max))", "-Shumpus(Max)", "(-Shumpus(Max))"]}
{"id": "prontoqa_validation_171", "nl": "Zumpuses are jompuses.", "fol": "all x. (zumpus(x) -> jompus(x))", "prediction": ["all x.(Zumpus(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompuse(x))", "(Jumpuses(z) & Jompuse(z))", "all x y.((Zumpus(x) & Jompuse(y)) -> (Jumpus(x) & Jompuse(y)))", "all x.(Zumpus(x) -> Jompuse(x))", "(Jumpuses(z) & Jompuse(w))", "all x y.((Zumpus(x) & Jompus(y)) -> Jompus(x))", "all x.(Zumpus(x) -> Jompuse(x))", "all x y.((Zumpus(x) & Jompuse(y)) -> Has(x,y))", "all x.(Zimpuse(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "all x.(Zombus(x) -> Jompuse(x))", "all x.(Zombus(x) -> Jompuse(x))", "All x.(Zimpuse(x) -> Jompuse(x))", "all x.(Zumpus(x) -> Jompus(x))", "All x.(Zumpus(x) -> Jompuse(x))"]}
{"id": "prontoqa_validation_172", "nl": "Wren is a grimpus and Wren is not a jompus and Wren is a yumpus.", "fol": "(grimpus(Wren) & -jompus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Yumpus(z)) -> (-Jompus(y) & -Jompus(z)))", "(all x y.(Wren(x) -> Grimpus(x)) & (-Jompus(y) & -Yumpus(y)))", "(all x y z.((Wren(x) & Grimpus(x)) -> (Smooth(x) & -Jompus(y)) & ((Wren(z) & Yumpus(z))) -> (Yumpus(z))))", "all x y.((Wren(x) & Grimpus(x) & Wren(y)) -> (-Jompus(y) & Yumpus(y)))", "all x y z.((Wren(x) & Grumpus(y) & Wren(z)) -> (Grimpus(x) & -Jompus(z) & Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y z.((Wren(x) & Grimpus(x) & Wren(y) & Yompus(z)) -> (-Jompus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Grimpus(x)) & (-Jompus(x) & (Yumpus(x) | Wren(x))))", "(all x.(Wren(x) -> Grumpus(x)) & (-Jompus(x) & -Yumpus(x)))", "all x y.((Wren(x) & Grimpus(x)) -> (-Jompus(x) & Yumpus(y)))", "(all x y.(Wren(x) -> Grumpus(x)) & (-Jompus(y) & -Yumpus(y)))", "(all x.(Wren(x) -> Grimpus(x)) & (Wren(x) -> -Jompus(x)) & (Wren(x) -> Yumpus(x)))", "all x.(Wren(x) -> (Grimpus(x) & -Jompus(x) & Yumpus(x)))", "all x y z.((Wren(x) & Grapple(x) & Wren(y) & Jompus(z)) -> (-Jompus(y) & Yumpus(z)))", "(all x y z.(Wren(x) -> Grimpus(x)) & (Wren(y) -> -Jompus(y)) & (Wren(z) -> Yumpus(z)))"]}
{"id": "prontoqa_validation_173", "nl": "Wren is not a zumpus.", "fol": "-zumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Zumpus(x))", "(-Zumpus(Wren))", "Wren is not a zumpus.", "all x.(Wren(x) -> -Zumpus(x))", "(-Zumpus(Wren))", "-Zombipus(Wren)", "all x.(Wren(x) -> -Zombipus(x))", "(-Zumpus(Wren) & -Zombie(Wren))", "all x.(Wren(x) -> -Tompus(x))", "(-Zombipus(Wren,x))", "-Tompus(Wren)", "-Tompus(Wren)", "all x.(Wren(x) -> -Zumpus(x))", "all x.(Wren(x) -> -Tompus(x))", "All x.(Wren(x) -> -Zombipus(x))", "(-Zumpus(Wren))."]}
{"id": "prontoqa_validation_174", "nl": "Every jompus is a wumpus.", "fol": "all x. (jompus(x) -> wumpus(x))", "prediction": ["all x.(Jompus(x) -> Wumpus(x))", "(all x.(Jompus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x y.((Jompus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x y.((Jompus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jimpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "all x.(Jumpus(x) -> Wumpus(x))", "all x.(Jompus(x) -> Wampus(x))", "exists x.(Jimpus(x) & Wumpus(x))", "exists x.(jompus(x) & Wumpus(x))", "all x.(Jompus(x) -> Wumpus(x))", "exists x.(Jompus(x) & Wompus(x))"]}
{"id": "prontoqa_validation_175", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a sterpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & sterpus(Alex))", "prediction": ["all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x y.(Wumpus(x) -> -Wumpus(x)) & (Lempus(y) -> Sterepus(y)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Sterepus(x)))", "(all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> -Wumpus(x)) & ((Alex(x) & Lempus(x)) -> Sterpus(x)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Sterpus(z))))", "all x y.((Alex(x) & Wumpus(y) & Lempus(y)) -> (-Wumpus(x) & Sterepus(x)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Sterpus(z)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Sterpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Sterpus(z)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Sterpus(x)))"]}
{"id": "prontoqa_validation_176", "nl": "Zumpuses are brimpuses.", "fol": "all x. (zumpus(x) -> brimpus(x))", "prediction": ["all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpus(x))", "(Brimpuse(z) & Brimpuse(z))", "all x y.((Zumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "(Brimpuse(z) & -Brimpus(z) & -Brimpus(z))", "(Brimpuse(z) & Brimpus(w))", "all x y.((Zumpus(x) & Brimpus(y)) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "all x.(Zimpuse(x) -> Brimpuse(x))", "all x.(Zombus(x) -> Brimpus(x))", "all x.(Zumpus(x) -> Brimpus(x))", "all x.(Zumpuse(x) -> Brimpuse(x))", "all x.(Zumpus(x) -> Brimpuse(x))", "All x.(Zombus(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_177", "nl": "Fae is a grimpus and Fae is a numpus and Fae is not a brimpus.", "fol": "(grimpus(Fae) & numpus(Fae) & -brimpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brimpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y)) -> (Fae(x) & -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x y z.((Fae(x) & Grimpus(x)) -> (Fae(y) & Numpus(y))) & ((Fae(z) & Brimpus(z)) -> (-Fae(z))))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(z) -> -Brimpus(z)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Numpus(y)) & (Fae(y) -> -Brimpus(y)))", "all x y.((Fae(x) & Grimpus(x) & Fae(y)) -> (Numpus(y) & -Brimpus(y)))", "all x.(Fae(x) -> (Grimpus(x) & Numpus(x) & -Brimpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Numpus(y)) -> (Fae(z) & -Brimpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & -Brimpus(x)))", "exists x.(Fae(x) & Grimpus(x) & Numpus(x) & -Brimpus(x))", "all x y z.((Fae(x) & Grimpus(y) & Numpus(z)) -> (Smooth(x) & Numpus(z) & -Brimpus(x)))", "all x y z.(Fae(x) & Grimpus(x) & Numpus(y) & -Brimpus(z))", "all x.(Fae(x) -> (Grimpus(x) | Numpus(x) | -Brimpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Numpus(y)) & all z.(Fae(z) -> -Brimpus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Numpus(x)) & (Fae(x) -> -Brimpus(x)))"]}
{"id": "prontoqa_validation_178", "nl": "Fae is not a zumpus.", "fol": "-zumpus(Fae)", "prediction": ["(-Zumpus(Fae))", "all x.(Fae(x) -> -Zumpus(x))", "Fae is not zumpus.", "-Zumpus(Fae)", "all x.(Fae(x) -> -Zumpus(x))", ".(Fae(x) & -Zumpus(x))", "(-Zumpus(Fae))", "all x.(Fae(x) -> -Zumpus(x))", "(-zusp(Fae,Simulator))", "-Zumpus(Fae)", "all x.(Fae(x) -> -Zumpus(x))", "(-Zombipus(Fae))", "(-Zumpus(Fae))", "(-Zumpus(Fae,Fae))", "-Tompus(fae)", "-Tompus(fae)"]}
{"id": "prontoqa_validation_179", "nl": "Impuses are rompuses.", "fol": "all x. (impus(x) -> rompus(x))", "prediction": ["all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x y.((Impuse(x) & Rompus(y)) -> Is(x,y))", "all x.(Impuse(x) -> Rompus(x))", "(Rompus(impus) & HasRecognition(impus,impus))", "all x y.((Impuse(x) & Rompus(y)) -> Is(x,y))", "(all x.(Impuse(x) -> Rompuse(x)))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "(all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompus(x))", "all x.(Impus(x) -> Rompus(x))", "all x.(Impuse(x) -> Rompuse(x))", "all x.(Impuse(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_180", "nl": "Max is not a rompus, Max is a dumpus, and Max is a wumpus.", "fol": "(-rompus(Max) & dumpus(Max) & wumpus(Max))", "prediction": ["(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z)) -> Wumpus(z)))", "(-Rompus(Max) & Dumpus(Max) & Wumpus(Max))", "all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "all x.(Max(x) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) | Dumpus(y) | Wumpus(z)))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z)) -> Wumpus(z)))", "all x.(Max(x) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "(all x.(Max(x) -> -Rompus(x)) & all y.(Max(y) -> Dumpus(y)) & all z.(Max(z) -> Wumpus(z))))", "all x y z.((Max(x) & Rompus(y) & Dumpus(z)) -> (-Rompus(x) & Dumpus(x) & Wumpus(x)))", "all x y z.((Max(x) & Dumpus(y) & Wumpus(z)) -> (-Rompus(x) & Dumpus(y) & Wumpus(z)))", "(all x y z.((Max(x) & Rompus(y)) -> -Rompus(x)) & ((Max(z) & Dumpus(z)) -> Wumpus(z)))", "(all x.(Max(x) -> -Rompus(x)) & (Max(x) -> Dumpus(x)) & (Max(x) -> Wumpus(x)))"]}
{"id": "prontoqa_validation_181", "nl": "Max is not an impus.", "fol": "-impus(Max)", "prediction": ["-Impossible(Max)", "all x.(Max(x) -> -Impossible(x))", "(Max(Max) & -Impossible(Max))", "Max -Impossible(Max)", "-Impossible(Max)", "Max is not impus.", "all x.(Max(x) -> -Impossible(x))", "(-Is(Max) & Is(Max))", "(Max(Max) & -Impossible(Max))", "(Exists(Max) & -Impossible(Max))", "(-Impossible(Max))", "Max is not impus.", "-IsExercise(Max)", "-Imposer(Max)", "-Impossible(Max)", "-Exercise(Max)"]}
{"id": "prontoqa_validation_182", "nl": "Every numpus is a vumpus.", "fol": "all x. (numpus(x) -> vumpus(x))", "prediction": ["all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x y.((Numpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x y.((Numpus(x) & Vumpus(y)) -> Is(x,y))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "all x.(Numerus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vumpus(x))", "exists x.(Numpus(x) & -Vumpus(x))", "exists x.(numpus(x) & Vumpus(x))", "all x.(Nompus(x) -> Vumpus(x))", "all x.(Numpus(x) -> Vampus(x))", "exists x.(Nompus(x) & -Vumpus(x))", "exists x.(Numpus(x) & Vampus(x))"]}
{"id": "prontoqa_validation_183", "nl": "Alex is a sterpus and Alex is a lorpus and Alex is not a vumpus.", "fol": "(sterpus(Alex) & lorpus(Alex) & -vumpus(Alex))", "prediction": ["(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "all x y z.((Alex(x) & Sterpus(x) & Lorpus(y) & -Vumpus(z)) -> (Stereo(x) & Lorpus(y) & -Vumpus(z)))", "all x y.((Alex(x) & Sterpus(x) & Lorpus(y)) -> (-Vumpus(x)))", "all x.(Alex(x) -> (Sterpus(x) & Lorpus(x) & -Vumpus(x)))", "(all x.(Alex(x) -> Sterpus(x)) & (Alex(x) -> Lorpus(x)) & (Alex(x) -> -Vumpus(x)))", "all x y z.((Alex(x) & Sterpus(y) & Lorpus(z)) -> (Stereo(x) & Lorpus(x) & -Vumpus(x)))", "(all x y.((Alex(x) & Sterpus(x)) -> Sterpus(x)) & ((Alex(y) & Lorpus(y)) -> -Vumpus(y)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Alex(y) -> Lorpus(y)) & all z.(Alex(z) -> -Vumpus(z))))", "(all x y z.((Alex(x) & Sterpus(y) & Lorpus(z)) -> (Sterepus(x) & Lorpus(y)) & -Vumpus(z)))", "exists x.(Alex(x) & Sterpus(x) & Lorpus(x) & -Vumpus(x))", "all x y.((Alex(x) & Sterpus(x) & Lorpus(y)) -> (-Vumpus(x)))", "(all x.(Alex(x) -> Sterepus(x)) & (Alex(x) -> Lorpus(x)) & -Alex(x)))", "all x.(Alex(x) -> (Sterepus(x) & Lorpus(x) & -Vumpus(x)))", "all x y z.((Alex(x) & Sterpus(x) & Lorpus(y) & -Vumpus(z)) -> (Sterpus(x) & Lorpus(y) & -Vumpus(z)))", "(all x.(Alex(x) -> Sterpus(x)) & all y.(Lorpus(y) -> -Vumpus(y)))", "all x.(Alex(x) -> (Sterpus(x) & Lorpus(x) & -Vumpus(x)))"]}
{"id": "prontoqa_validation_184", "nl": "Each yumpus is a sterpus.", "fol": "all x. (yumpus(x) -> sterpus(x))", "prediction": ["all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> HasSterpus(x,y))", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterepus(y)) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x y.((Yumpus(x) & Sterpus(y)) -> Is(x,y))", "all x.(Yumpus(x) -> Sterepus(x))", "exists x.(yumpus(x) & Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "all x.(Yumpus(x) -> Sterepus(x))", "exists x.(yumpus(x) & Y.Sterpus(x))", "all x.(Yumpus(x) -> Sterpus(x))", "exists x.(Yumpus(x) & Sterpus(x))", "exists x.(Yumpus(x) & Sterus(x))", "all x.(Yumpus(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_185", "nl": "Rex is a jompus and Rex is not a sterpus and Rex is a grimpus.", "fol": "(jompus(Rex) & -sterpus(Rex) & grimpus(Rex))", "prediction": ["all x y z.((Rex(x) & Jompus(x) & -Sterpus(y) & Grimpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (-Sterepus(x) & -Sterpus(x)))", "all x y.((Rex(x) & Jompus(x) & -Sterepus(y)) -> Grimpus(x))", "(all x.(Jompus(x) -> Rex)) & (-Sterepus(x) -> Rex)) & (-Sterepus(x) -> Rex)))", "(all x y.(Jompus(x) -> Rex)) & (-Sterpus(y) -> Rex)) & (Smoothpus(y) -> Rex)))", "(all x.(Rex(x) -> Jompus(x)) & (Rex(x) -> -Sterepus(x)) & (Rex(x) -> Grimpus(x)))", "all x y z.((Rex(x) & Jompus(x) & Rex(y) & Sterpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Rex(x) -> Jompus(x)) & (-Sterepus(x) & -Strictus(x)))", "all x.(Rex(x) -> (Jompus(x) & -Sterpus(x) & Grimpus(x)))", "(all x y.(Jompus(x) -> Rex)) & (-Sterepus(y) -> Rex)) & (-Sterepus(y) -> Rex)) & (-Sterepus(y) -> Grimpus(y)))", "(all x y z.(Jompus(x) -> Rex)) & (-Sterepus(y) -> Rex)) & (Smoothpus(z) -> Rex)))", "all x.(Rex(x) -> (Jompus(x) | -Sterpus(x) | Grimpus(x)))", "all x y.((Rex(x) & Jompus(x)) -> (-Sterepus(y) & Grimpus(x)))", "(all x.(Rex(x) -> Jompus(x)) & all y.(Rex(y) -> -Sterpus(y))) & all z.(Rex(z) -> Grimpus(z)))", "all x y z.((Rex(x) & Jompus(x) & -Sterpus(y) & Grimpus(z)) -> (Jompus(x) & -Sterpus(y) & Grimpus(z)))", "(all x.(Jompus(x) -> Rex)) & (-Sterepus(x) -> Rex)) & (-Sterepus(x) -> Grimpus(x)))"]}
{"id": "prontoqa_validation_186", "nl": "Every numpus is a zumpus.", "fol": "all x. (numpus(x) -> zumpus(x))", "prediction": ["all x.(Numpus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "(all x.(Numpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Numpus(x) -> Zumpus(x))", "all x y.((Numpus(x) & Zumpus(y)) -> Has(x,y))", "all x.(Numerus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "exists x.(numpus(x) & Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "exists x.(numpus(x) & Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "all x.(Nompus(x) -> Zumpus(x))", "all x.(Numpus(x) -> Zumpus(x))", "exists x.(Nompus(x) & Zurpus(x))"]}
{"id": "prontoqa_validation_187", "nl": "Stella is a rompus and Stella is not a zumpus and Stella is a grimpus.", "fol": "(rompus(Stella) & -zumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Grimpus(z)) -> (-Tompus(y) & Grimpus(z)))", "(all x.(Rompus(x) -> -Tompus(x)) & (Stella(x) -> Grimpus(x)))", "all x y.((Stella(x) & Rompus(x) & Stella(y)) -> (-Tompus(y) & Grimpus(y)))", "(all x y.((Stella(x) & Rompus(x)) -> Toshpus(y)) & ((Stella(x) & Grimpus(x)) -> Toshpus(y)))", "all x.(Stella(x) -> (Rompus(x) & -Zumpus(x) & Grimpus(x)))", "all x y z.((Stella(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Grimpus(z)))", "(all x y z.((Stella(x) & Rompus(x)) -> (Rompus(x) & -Zumpus(y)) & ((Stella(z) & Grimpus(z))) -> (Stella(z))))", "(all x y.(Rompus(x) -> -Tompus(y)) & (Stella(x) -> Grimpus(x)))", "(all x.(Rompus(x) -> Stella)) & (-Tompus(x) -> Stella)) & (-Tompus(x) -> Stella)))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Grimpus(x)))", "all x y.((Stella(x) & Rompus(x)) -> (-Tompus(x) & Grimpus(y)))", "all x y z.((Stella(x) & Rompus(x) & Stella(y) & Zumpus(z)) -> (Rompus(x) & -Tompus(y) & Grimpus(y)))", "all x.(Stella(x) -> (Rompus(x) & -Zumpus(x) & Grimpus(x)))", "exists x.(Rompus(x) & Zumpus(x) & Grimpus(x))", "(all x.(Stella(x) -> Rompus(x)) & (Stella(x) -> -Zumpus(x)) & (Stella(x) -> Gruppus(x)))"]}
{"id": "prontoqa_validation_188", "nl": "Stella is not a numpus.", "fol": "-numpus(Stella)", "prediction": ["Stella is not a Numpus(Stella)", "(-numpus(Stella))", "all x.(Stella(x) -> -Numpus(x))", "Stella is not Numpus(Stella)", "Stella is not a Numpus.", "(-Numpus(Stella))", "(-numpus(Stella))", "all x.(Stella(x) -> -Numpus(x))", "Stella -Numpus(Stella))", "-Numpus(Stella)", "Stella is not a Numpus(Stella)", "all x.(Stella(x) -> -Numpus(x))", "Stella is not Numpus(Stella)", "-Numpus(Stella)", "Stella -Numpus(s)", "(-numpus(Stella))"]}
{"id": "prontoqa_validation_189", "nl": "Vumpuses are impuses.", "fol": "all x. (vumpus(x) -> impus(x))", "prediction": ["all x.(Vumpus(x) -> Issue(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Vumpus(x) -> Issue(x))", "all x.(Vumpus(x) -> Issues(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "(Issues(vumpus) & Imperative(v))", "(Issues(v) & Impects(v))", "all x.(Vumpus(x) -> Issue(x))", "all x y.((Vumpus(x) & Issue(y)) -> Issue(x,y))", "all x.(Vumpus(x) -> Impects(x))", "all x.(Vumpus(x) -> Issues(x))", "all x.(Vumpuse(x) -> Isolated(x))", "all x.(Vumpus(x) -> Impermissible(x))", "all x.(Vumpus(x) -> Isolated(x))", "all x.(Vumpus(x) -> Issue(x))", "All x.(Vumpus(x) -> Impose(x))"]}
{"id": "prontoqa_validation_190", "nl": "Rex is a dumpus and Rex is a rompus and Rex is not an impus.", "fol": "(dumpus(Rex) & rompus(Rex) & -impus(Rex))", "prediction": ["(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> -Impossible(y)))", "all x y z.((Rex(x) & Dumpus(x) & Rompus(y) & Rex(z)) -> (Impossible(z) | Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x)))", "all x y.((Rex(x) & Dumpus(x) & Rompus(y)) -> -Impossible(x))", "(all x y z.((Rex(x) & Dumpus(x)) -> Dumpus(x)) & ((Rex(y) & Rompus(y)) -> -Impossible(z)))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y)) & all z.(Issue(z) -> -Issue(z))))", "all x y z.((Rex(x) & Dumpus(x) & Rompus(y) & -Impossible(z)) -> (Dumps(x) & Rompus(y) & -Impossible(z)))", "(all x y.(Dumpus(x) -> Rex)) & (Rompus(y) -> Rex)) & (IsNotImpossible(y)))", "all x.(Rex(x) -> (Dumpus(x) & Rompus(x) & -Impossible(x)))", "all x.(Rex(x) -> (Dumps(x) & Rompus(x) & -Impossible(x)))", "(exists x.(Dumpus(x) & Rex(x)) & exists y.(Rompus(y) & Rex(y))))", "(all x.(Rex(x) -> Dumpus(x)) & all y.(Rompus(y) -> Rompus(y)) & all z.(Rex(z) -> -Impossible(z))))", "all x y.((Rex(x) & Dumpus(x) & Rompus(y)) -> -Impossible(x))", "(all x y.(Dumpus(x) -> Rex)) & (Rompus(y) -> Rex)) & (Impossible(y) -> Rex)))", "all x.(Rex(x) -> (Dumpus(x) & Rompus(x) & -Impossible(x)))", "(all x.(Rex(x) -> Dumpus(x)) & (Rex(x) -> Rompus(x)) & (Rex(x) -> -Impossible(x)))"]}
{"id": "prontoqa_validation_191", "nl": "Numpuses are gorpuses.", "fol": "all x. (numpus(x) -> gorpus(x))", "prediction": ["all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "(Gorpuse(Numpus) & -Gorpuse(Numpus))", "(Gorpuse(Numpus) & Gorpus(Numpus))", "all x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "All x y.((Numpus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Numptus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "all x.(Numpuse(x) -> Gorpuse(x))", "all x.(Numpus(x) -> Gorpus(x))", "all x.(Numpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_validation_192", "nl": "Fae is a grimpus and Fae is a jompus and Fae is not a gorpus.", "fol": "(grimpus(Fae) & jompus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & -Fae(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)) -> (Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y.((Fae(x) & Grimpus(x) & Fae(y)) -> (Jompus(y) & -Gorpus(y)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x y z.(Fae(x) -> (Grimpus(x) & Jompus(y))) & (Fae(z) -> -Gorpus(z)))", "(all x y z.((Fae(x) & Grimpus(x)) -> (Fae(y) & Jompus(y))) & ((Fae(z) & Gorpus(z)) -> -Fae(z)))", "all x.(Fae(x) -> (Grimpus(x) & Jompus(x) & -Gorpus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)) -> (Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z)))", "(all x y.(Fae(x) -> Grimpus(x)) & (Fae(y) -> Jompus(y)) & (Fae(y) -> -Gorpus(y)))", "all x y z.(Fae(x) & Grimpus(x) & Jompus(y) & -Gorpus(z))", "exists x.(Fae(x) & Grimpus(x) & Jompus(x) & -Gorpus(x))", "all x y z.((Fae(x) & Grimpus(x) & Jompus(y) & Gorpus(z)) -> (Fae(x) & -Fae(x)))", "all x.(Fae(x) -> (Grimpus(x) | Jompus(x) | -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> Jompus(x)) & (Fae(x) -> -Gorpus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> Jompus(y)) & all z.(Fae(z) -> -Gorpus(z))))"]}
{"id": "prontoqa_validation_193", "nl": "Shumpuses are tumpuses.", "fol": "all x. (shumpus(x) -> tumpus(x))", "prediction": ["all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumulus(x))", "all x y.((Shupuse(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(shupuse,s) & -Tumpus(shupuse))", "all x.(Shampoos(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "(Tumpuse(shm) & Tumpus(shm))", "all x y.((Shumpus(x) & Tumpus(y)) -> Tumpus(x))", "(all x.(Shupuse(x) -> Tumpus(x)))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumpus(x))", "all x.(Shutus(x) -> Tumulus(x))", "all x.(Shumpus(x) -> Tumpus(x))", "All x.(Shumpus(x) -> Tumpus(x))", "all x.(Shupuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_194", "nl": "Sam is a wumpus and Sam is a dumpus and Sam is not a tumpus.", "fol": "(wumpus(Sam) & dumpus(Sam) & -tumpus(Sam))", "prediction": ["(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & -Tumpus(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "all x y.((Sam(x) & Wumpus(x) & Dumpus(y)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(x)))", "all x y z.((Sam(x) & Wumpus(x) & Dumpus(y) & Sam(z)) -> (Wumpus(x) & Dumpus(y) & -Tumpus(z)))", "(all x y z.((Sam(x) & Wumpus(x)) -> (Wumpus(x) & Dumpus(y))) & ((Sam(z) & -Tumpus(z))) -> (Dumpus(z) & -Wumpus(z))))", "(all x.(Wumpus(x) -> Sam(x)) & (Dumpus(x) -> Sam(x))) & (Tumpus(x) -> Sam(x)))", "(all x.(Sam(x) -> Wumpus(x)) & all y.(Sam(y) -> Dumpus(y)) & all z.(Sam(z) -> -Tumpus(z))))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))", "all x.(Sam(x) -> (Wumpus(x) & Dumpus(x) & -Tumpus(x)))", "(all x y.(Wumpus(x) -> Sam(x)) & (Dumpus(y) -> Sam(y)))", "(all x.(Wumpus(x) -> Sam(x)) & all y.(Dumpus(y) -> Sam(y))) & all z.(Tumpus(z) -> Sam(z)))", "all x y z.((Sam(x) & Wumpus(y) & Dumpus(z)) -> (Wumpus(x) & Dumpus(z) & -Tumpus(x)))", "all x y.((Sam(x) & Wumpus(x)) -> (Dumps(x) & -Tumpus(y)))", "all x.(Sam(x) -> (Wumpus(x) & Dumpus(x) & -Tumpus(x)))", "exists x.(Wumpus(x) & Dumpus(x) & -Tumpus(x))", "(all x.(Sam(x) -> Wumpus(x)) & (Sam(x) -> Dumpus(x)) & (Sam(x) -> -Tumpus(x)))"]}
{"id": "prontoqa_validation_195", "nl": "Sam is not a shumpus.", "fol": "-shumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "all x.(Sam(x) -> -Shumpus(x))", "Sam is notShumpus(Sam).", "(-Shumpus(Sam))", "Sam is not a shumpus.", "(Sam, notShumpus(Sam))", "-(Sam(s) & Humpus(s))", "all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "-Shumpus(Sam)", "all x.(Sam(x) -> -Shumpus(x))", "all x.(Sam(x) -> -Shumpus(x))", "(-Shumpus(Sam))", "-Shumpus(sam)", "all x.(Sam(x) -> -Shumpus(x))"]}
{"id": "prontoqa_validation_196", "nl": "Every vumpus is a numpus.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Numpus(x))", "(all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.((Vumpus(x) & Numpus(x)) -> Has(x,y))", "all x y.((Vumpus(x) & Numpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "exists x.(Vumpus(x) & Number(x))", "all x.(Vumpus(x) -> Numpus(x))", "exists x.(Vumpus(x) & Numpus(x))", "exists x.(Vumpus(x) & Numpus(x))"]}
{"id": "prontoqa_validation_197", "nl": "Polly is a lorpus and Polly is not a numpus and Polly is a tumpus.", "fol": "(lorpus(Polly) & -numpus(Polly) & tumpus(Polly))", "prediction": ["all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Lorpus(x) -> Polly)) & (-Numpus(x) -> Polly)) & (Tumpus(x) -> Polly)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x)))", "all x y z.((Polly(x) & Lorpus(x) & Polly(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x y.(Lorpus(x) -> Polly(x)) & (Nompus(y) | Tumpus(y))))", "all x y.((Polly(x) & Lorpus(x) & Polly(y)) -> (-Numpus(y) & Tumpus(y)))", "(all x y z.((Lorph(x) & Polly(y) & Numpus(z)) -> (Lorph(y) & -Numpus(y) & Tumpus(z))))", "(all x.(Lorpus(x) -> Polly(x)) & (-Numpus(x) -> Polly(x))) & (Tumpus(x) -> Polly(x)))", "all x.(Polly(x) -> (Lorpus(x) & -Numpus(x) & Tumpus(x)))", "all x y.((Polly(x) & Lorpus(x)) -> (-Lumpus(x) & -Numpus(y) & Tumpus(x)))", "(all x y.(Lorph(x) -> Polly(x)) & (-Lumpus(y) & -Numpus(y))) & (Tumpus(y) -> Polly(y)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & -Numpus(y) & Tumpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Tumpus(x)))", "exists x.(Lorpus(x) & -Numpus(x) & Tumpus(x))", "(all x.(Lorph(x) -> Polly(x)) & (-Numpus(x) -> Polly(x)) & (Tumpus(x) -> Polly(x)))", "all x.(Polly(x) -> (Lorpus(x) & -Numpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_validation_198", "nl": "Wren is a tumpus, Wren is a rompus, and Wren is not a sterpus.", "fol": "(tumpus(Wren) & rompus(Wren) & -sterpus(Wren))", "prediction": ["(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterpus(x)))", "all x y z.((Wren(x) & Tumpus(y) & Rompus(z)) -> (Tumpus(x) | Roompus(z) | -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & Rompus(z)) -> -Sterepus(z)))", "all x y z.((Wren(x) & Rumpus(y) & Sterpus(z)) -> (Tumpus(x) & Rompus(y) & -Sterpus(z)))", "all x y z.((Wren(x) & Tompus(y) & Rompus(z)) -> (Tumpus(x) & Rompus(x) & -Sterpus(x)))", "all x.(Wren(x) -> (Tumpus(x) & Rompus(x) & -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & (Wren(x) -> -Sterepus(x)))", "all x y z.((Wren(x) & Tumpus(x) & Rompus(y) & -Sterpus(z)) -> (Tumpus(x) & Rompus(y) & -Sterpus(z)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & Rompus(z)) -> -Sterepus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterpus(z))))", "all x y z.((Wren(x) & Rumpus(y) & -Sterpus(z)) -> (Tumpus(x) | Rompus(y) | -Tumpus(z)))", "all x y z.((Wren(x) & Tompus(y) & Rompus(z) & -Sterpus(z)) -> (Tumpus(x) | Rompus(x) | -Sterpus(x)))", "(all x y z.((Wren(x) & Tumpus(y)) -> Tumpus(x)) & ((Wren(z) & Rompus(z)) -> -Sterpus(z)))", "(all x.(Wren(x) -> Tumpus(x)) & (Wren(x) -> Rompus(x)) & -Sterpus(x)))", "(all x.(Wren(x) -> Tumpus(x)) & all y.(Wren(y) -> Rompus(y)) & all z.(Wren(z) -> -Sterepus(z))))"]}
{"id": "prontoqa_validation_199", "nl": "Wren is not a vumpus.", "fol": "-vumpus(Wren)", "prediction": ["all x.(Wren(x) -> -Vumpus(x))", "(-Vumpus(Wren))", "Wren is not a Vumpus.", "all x.(Wren(x) -> -Vumpus(x))", "(-Vumpus(Wren))", "(Vumpus(Wren) & -Vumpus(Wren))", "Wren is not a Vumpus.", "-Vumpus(Wren)", "-Vumpus(Wren)", "all x.(Wren(x) -> -Vumpus(x))", "(Vumpus(Wren) & -Vumpus(Wren))", "(-Vimpus(Wren))", "all x.(Wren(x) -> -Vimpus(x))", "-Vumpus(Wren)", "all x.(Wren(x) -> -Vumpus(x))", "-Vimpus(Wren)"]}
{"id": "prontoqa_validation_200", "nl": "Wren is a sterpus and Wren is a jompus and Wren is not a numpus.", "fol": "(sterpus(Wren) & jompus(Wren) & -numpus(Wren))", "prediction": ["(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(y) & Jompus(z)) -> (Stereo(x) & Jompus(x) & -Numpus(x)))", "(all x.(Wren(x) -> Sterpus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "(all x y z.((Wren(x) & Sterpus(y)) -> (Stereo(x) & Jompus(y)) & ((Wren(z) & Numpus(z))) -> (Numpus(z))))", "all x y.((Wren(x) & Sterpus(x) & Jompus(y)) -> (-Numpus(x) & -Sterpus(y)))", "(all x y.(Wren(x) -> Sterpus(x)) & (Wren(y) -> Jompus(y)) & (Wren(y) -> -Numpus(y)))", "all x y z.((Wren(x) & Sterepus(y) & Jompus(z)) -> (Sterpus(x) & Jompus(z) & -Numpus(z)))", "all x.(Wren(x) -> (Sterpus(x) & Jompus(x) & -Numpus(x)))", "all x y z.((Wren(x) & Sterpus(x) & Jompus(y) & Numpus(z)) -> (Stereo(x) & Jompus(y) & -Numpus(z)))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))", "(all x y z.(Wren(x) -> Sterpus(x)) & ((Wren(y) & Jompus(y)) -> -Numpus(z)))", "all x y.((Wren(x) & Sterepus(x) & Jompus(y)) -> (Sterpus(x) & -Numpus(y)))", "(all x.(Wren(x) -> Sterepus(x)) & all y.(Wren(y) -> Jompus(y)) & all z.(Wren(z) -> -Numpus(z))))", "all x.(Wren(x) -> (Stereos(x) & Jompus(x) & -Numpus(x)))", "all x y z.((Wren(x) & Sterepus(y) & Jompus(z)) -> (Stereo(x) | Jompus(z) | Numpus(z)))", "(all x.(Wren(x) -> Sterpus(x)) & (Wren(x) -> Jompus(x)) & (Wren(x) -> -Numpus(x)))"]}
{"id": "prontoqa_validation_201", "nl": "Wren is not a lempus.", "fol": "-lempus(Wren)", "prediction": ["all x.(Wren(x) -> -Lempus(x))", "(-Lempus(Wren))", "Wren is not a lempus.", "all x.(Wren(x) -> -Lempus(x))", "(-Lempus(Wren))", "Wren is not a lempus.", "all x.(Wren(x) -> -Lempus(x))", "-Lempus(Wren)", "all x.(Wren(x) -> -Lempus(x))", "(-lempus(Wren))", "-Lempus(Wren)", "all x.(Wren(x) -> -Lempus(x))", "(-Lampus(Wren))", "all x.(Wren(x) -> -Limpus(x))", "(-lempus(Wren,2019))", "-Lempus(wren)"]}
{"id": "prontoqa_validation_202", "nl": "Each rompus is a grimpus.", "fol": "all x. (rompus(x) -> grimpus(x))", "prediction": ["all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> Is(x,y))", "(all x.(Rompus(x) -> Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> Has(x,y))", "all x.(Rompus(x) -> Grimpus(x))", "all x.(Romesue(x) -> Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "all x y.((Rompus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Rompus(x) -> Gruppus(x))", "all x.(Rompus(x) -> Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "exists x.(rompus(x) & Grimpus(x))", "all x.(Rompus(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_203", "nl": "Polly is a wumpus and Polly is a gorpus and Polly is not a grimpus.", "fol": "(wumpus(Polly) & gorpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & Polly(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Gorpus(y) & -Grimpus(y)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & -Grimpus(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))", "(all x y z.((Polly(x) & Wumpus(x)) -> (Wumpus(x) & Gorpus(y)) & ((Polly(z) & Grimpus(z))) -> -Wumpus(z)))", "(all x.(Wumpus(x) -> Polly)) & (Gorpus(x) -> Polly)) & -Grimpus(x)))", "(all x.(Polly(x) -> Wumpus(x)) & all y.(Polly(y) -> Gorpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x y.(Wumpus(x) -> Polly(y)) & (Gorpus(y) -> Polly(y)))", "all x.(Polly(x) -> (Wumpus(x) & Gorpus(x) & -Grimpus(x)))", "all x y z.((Polly(x) & Wumpus(x) & Gorpus(y) & Polly(z)) -> (Wumpus(x) & Gorpus(y) & -Grimpus(z)))", "all x y z.((Polly(x) & Wumpus(y) & Gorpus(z)) -> (Wumpus(x) & Gorpus(x) & -Grimpus(x)))", "exists x.(Polly(x) & Wumpus(x) & Gorpus(x) & -Grimpus(x))", "all x y.((Polly(x) & Wumpus(x) & Polly(y)) -> (Gorpus(y) & -Grimpus(y)))", "(all x y.(Wumpus(x) & Polly(y)) & (Gorpus(y) | -Grimpus(y)))", "(all x.(Polly(x) -> Wumpus(x)) & (Polly(x) -> Gorpus(x)) & (Polly(x) -> -Grimpus(x)))"]}
{"id": "prontoqa_validation_204", "nl": "Polly is not a rompus.", "fol": "-rompus(Polly)", "prediction": ["all x.(Polly(x) -> -Rompus(x))", "(-Rompus(Polly))", "Polly is not a rompus.", "all x.(Polly(x) -> -Rompus(x))", "all x.(Polly(x) -> -Rompus(x))", "(-Rompus(Polly))", "Polly is not a Rompus.", "all x.((Polly(x) & -Rompus(x)) -> -Rompus(x))", "(-rompus(Polly))", "all x.(Polly(x) -> -Rompus(x))", "Polly is not a rompus.", "(-Rompus(Polly))", "(-rompus(Polly))", "-Rompus(Polly)", "All x.(Polly(x) -> -Rompus(x))", "-Rompus(Polly)"]}
{"id": "prontoqa_validation_205", "nl": "Each gorpus is a lorpus.", "fol": "all x. (gorpus(x) -> lorpus(x))", "prediction": ["all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Gorpus(x) -> Lorpus(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Contains(x,y))", "all x.(Gorpus(x) -> Lorpus(x))", "all x y.((Gorpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Gorpus(x) -> Loomis(x))", "all x.(Gorpus(x) -> Lorpus(x))", "all x.(Gorpus(x) -> Lord(x))", "all x.(Gorpus(x) -> Lorpus(x))", "exists x.(Gorpus(x) & Thrombosis(x))", "exists x.(Gorpus(x) & Lord(x))", "all x.(Gorpus(x) -> Loompus(x))", "exists x.(Gorpus(x) & Lord(x))", "exists x.(Gorpus(x) & Lord(x))"]}
{"id": "prontoqa_validation_206", "nl": "Sally is a brimpus, Sally is not a lorpus, and Sally is a yumpus.", "fol": "(brimpus(Sally) & -lorpus(Sally) & yumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "all x y z.((Sally(x) & Brimpus(x) & -Lorpus(y) & Yumpus(z)) -> (Brimpus(x) & Yumpus(z)))", "(all x y z.((Sally(x) & Brimpus(x)) -> (Brimpus(y) & -Lorpus(z))) & ((Sally(x) & Yumpus(x)) -> (Yumpus(x))))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & (Yumpus(x) | -Lorpus(x))))", "all x y z.((Sally(x) & Brimpus(y) & Yumpus(z)) -> (-Lorpus(x) & -Brimpus(y) & Yumpus(z)))", "all x.(Sally(x) -> (Brimpus(x) & -Lorpus(x) & Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))", "all x y z.((Sally(x) & Brimpus(x) & -Lorpus(y) & Yumpus(z)) -> (Brimpus(x) & Yampus(z)))", "(all x y z.((Sally(x) & Brimpus(y)) -> Brimpus(x)) & ((Sally(z) & -Lorpus(z)) -> Yumps(z)))", "(all x.(Sally(x) -> Brimpus(x)) & all y.(Sally(y) -> -Lorpus(y))) & all z.(Sally(z) -> Yumpus(z)))", "all x y z.((Sally(x) & Brimpus(y) & Lorpus(z)) -> (Brimpus(x) | -Lorpus(x) | Yumpus(x)))", "(all x.(Sally(x) -> Brimpus(x)) & (-Lorpus(x) & (Yumpus(x) | -Lorpus(x))))", "(all x y z.((Sally(x) & Brimpus(x)) -> (Brimpus(x) | -Lorpus(y)) | (Yumpus(z) & Sally(z))))", "all x.(Sally(x) -> (Brimpus(x) & -Lorpus(x) & Yumpus(x)))", "all x y z.((Sally(x) & Brimpus(x) & -Lorpus(y) & Yumpus(z)) -> (Brimpus(x) & Yampus(x) & Yampus(y)))", "(all x.(Sally(x) -> Brimpus(x)) & (Sally(x) -> -Lorpus(x)) & (Sally(x) -> Yumpus(x)))"]}
{"id": "prontoqa_validation_207", "nl": "Sally is not a gorpus.", "fol": "-gorpus(Sally)", "prediction": ["all x.(Sally(x) -> -Gorpus(x))", "Sally is not a Gorpus.", "(-Gorpus(Sally))", "Sally -Gorpus(Sally)", "Sally is not a Gorpus.", "all x.(Sally(x) -> -Gorpus(x))", "Sally n'est pas Gorpus(Sally)", "(-Gorpus(Sally))", "Sally is not a Gorpus.", "all x.(Sally(x) -> -Gorpus(x))", "-Gorpus(Sally)", "Sally is not gorpus.", "Sally -Gorpus(Sally)", "all x.(Sally(x) -> -Gorpus(x))", "(-Gorpus(Sally))", "Sally is not a Gorpus."]}
{"id": "prontoqa_validation_208", "nl": "Each dumpus is a wumpus.", "fol": "all x. (dumpus(x) -> wumpus(x))", "prediction": ["all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "(all x.(Dumpus(x) -> Wumpus(x)))", "all x y.((Dumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumps(x) -> Wumpus(x))", "all x y.((Dumpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "exists x.(Dumps(x) & Wumpus(x))", "all x.(Dumpus(x) -> Wumpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "exists x.(Dumpus(x) & Wumpus(x))", "exists x.(Dumpus(x) & Humpus(x))", "all x.(Dumpus(x) -> Wampus(x))", "exists x.(Dupus(x) & Humpus(x))"]}
{"id": "prontoqa_validation_209", "nl": "Alex is not a wumpus and Alex is a lempus and Alex is a zumpus.", "fol": "(-wumpus(Alex) & lempus(Alex) & zumpus(Alex))", "prediction": ["all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z))))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "all x y.((Alex(x) & Wumpus(y)) -> (-Wumpus(x) & Lempus(y) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))", "(all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> -Wumpus(x)) & ((Alex(x) & Lempus(x)) -> Zumpus(x)))", "(all x y.(Wumpus(x) -> -Wumpus(x)) & (Lempus(y) -> Zumpus(y)))", "all x.(Alex(x) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & (Alex(x) -> Lempus(x)) & (Alex(x) -> Zumpus(x)))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y)) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(x) & Zumpus(x)))", "exists x.(Alex(x) & -Wumpus(x) & Lempus(x) & Zumpus(x))", "all x y.((Alex(x) & Wumpus(y) & Lempus(y)) -> Zumpus(x))", "(all x.(Alex(x) -> -Wumpus(x)) & all y.(Alex(y) -> Lempus(y))) & all z.(Alex(z) -> Zumpus(z)))", "all x y z.((Alex(x) & Wumpus(y) & Lempus(z)) -> (-Wumpus(x) & Lempus(y) & Zumpus(z)))"]}
{"id": "prontoqa_validation_210", "nl": "Each lempus is a grimpus.", "fol": "all x. (lempus(x) -> grimpus(x))", "prediction": ["all x.(Lempus(x) -> Grimpus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x y.((Lempus(x) & Grimpus(y)) -> Is(x,y))", "(all x.(Lempus(x) -> Grimpus(x)))", "all x.(Lempus(x) -> Grimpus(x))", "all x y.((Lempus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Gruppus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Gruppus(x))", "all x.(Lempus(x) -> Grimpus(x))", "all x.(Limpus(x) -> Gruppus(x))", "exists x.(Lempus(x) & Grimpus(x))", "exists x.(Lempus(x) & Grimpus(x))", "exists x.(Lempus(x) & Grimpus(x))", "exists x.(Lempus(x) & Grimpus(x))"]}
{"id": "prontoqa_validation_211", "nl": "Max is a brimpus and Max is not a grimpus and Max is a zumpus.", "fol": "(brimpus(Max) & -grimpus(Max) & zumpus(Max))", "prediction": ["(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Grimpus(z)) -> (-Grimpus(y) & Zumpus(z)))", "all x y.((Max(x) & Brimpus(x) & Max(y)) -> (-Grimpus(y) & Zumpus(y)))", "(all x y.((Max(x) & Brimpus(x)) -> (Brimpus(x) & -Grimpus(y))) & ((Max(x) & Zumpus(x)) -> (Tompus(x))))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (Max(x) -> Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x)) & (Max(x) -> Zumpus(x)))", "all x y z.((Max(x) & Brimpus(x) & Max(y) & Grimpus(z)) -> (Brimpus(x) & -Grimpus(y) & Zumpus(z)))", "(all x y z.((Max(x) & Brimpus(x)) -> (Brimpus(x) & -Grimpus(y)) & ((Max(z) & Zumpus(z)) -> Zumpus(z))))", "all x.(Max(x) -> (Brimpus(x) & -Grimpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & all y.(Max(y) -> -Grimpus(y))) & all z.(Max(z) -> Zumpus(z)))", "(all x y.(Brimpus(x) -> Brimpus(x)) & (-Grimpus(y) & Zumpus(y)))", "(all x.(Max(x) -> Brimpus(x)) & (Max(x) -> -Grimpus(x))) & (Max(x) -> Zumpus(x)))", "all x y.((Max(x) & Brimpus(x) & Max(y)) -> (-Grimpus(y) & Zumpus(y)))", "all x.(Max(x) -> (Brimpus(x) & -Grimpus(x) & Zumpus(x)))", "(all x.(Max(x) -> Brimpus(x)) & (-Max(x) -> Grimpus(x)) & (-Max(x) -> Zumpus(x)))", "all x.(Max(x) -> (Brimpus(x) & -Grimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_validation_212", "nl": "Sterpuses are shumpuses.", "fol": "all x. (sterpus(x) -> shumpus(x))", "prediction": ["all x.(Sterpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "(all x.(Sterpuse(x) -> Shumpus(x)))", "all x y.((Sterpuse(x) & Shumpus(y)) -> Shumpus(x))", "all x y.((Sterpuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "(Sterpuses(s) & Shumpuses(s))", "(all x.(Sterpuse(x) -> Humpuse(x)))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Stump(x) -> Shumpus(x))", "all x.(Sterpus(x) -> Shumpus(x))", "all x.(Stupid(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpus(x))", "all x.(Strerpus(x) -> Shumpus(x))", "all x.(Sterpuse(x) -> Shumpuse(x))"]}
{"id": "prontoqa_validation_213", "nl": "Polly is a brimpus, Polly is not a shumpus, and Polly is a yumpus.", "fol": "(brimpus(Polly) & -shumpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Brimpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yampus(z)))", "(all x y z.((Polly(x) & Brimpus(x)) -> Polly(y)) & ((Polly(z) & -Shumpus(z)) -> Polly(z)))", "all x y z.((Polly(x) & Brimpus(y) & Yumpus(z)) -> (-Shumpus(y) & -Brimpus(z) & -Shumpus(y) & -Yumpus(z)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))", "all x.(Polly(x) -> (Brimpus(x) & -Shumpus(x) & Yumpus(x)))", "(all x.(Brimpus(x) -> Polly)) & (-Shumpus(x) -> Polly)) & (Yumpus(x) -> Polly)))", "all x y.((Polly(x) & Brimpus(x)) -> (-Shumpus(x) & Yampus(y)))", "(all x y z.((Polly(x) & Brimpus(y)) -> (Brimpus(x) | -Shumpus(y)) | (Polly(z) & Yumpus(z))))", "(all x.(Brimpus(x) -> Polly)) & all y.(Shumpus(y) -> Polly)) & all z.(Yumpus(z) -> Polly)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x y z.(Brimpus(x) -> Polly)) & (Brimpus(y) | -Shumpus(y))) & (Yumpus(z) -> Polly))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yampus(z)))", "all x y z.((Polly(x) & Brimpus(x) & Polly(y) & Humpus(z)) -> (-Shumpus(y) & Yumpus(z)))", "(all x.(Polly(x) -> Brimpus(x)) & (Polly(x) -> -Shumpus(x)) & (Polly(x) -> Yumpus(x)))"]}
{"id": "prontoqa_validation_214", "nl": "Polly is not a sterpus.", "fol": "-sterpus(Polly)", "prediction": ["all x.(Polly(x) -> -Sterpus(x))", "(-Sterpus(Polly))", "Polly is not sterpus.", "all x.(Polly(x) -> -Sterpus(x))", "(-Sterpus(Polly))", "Polly is not sterpus.", "Polly -Sterpus(Polly)", "All x.(Polly(x) -> -Sterpus(x))", "all x.(Polly(x) -> -Sterepus(x))", "(-Stereos(Polly,Sterpus))", "(-Sterepus(Polly))", "-Sterpus(Polly)", "all x.(Polly(x) -> -Sterpus(x))", "-Sterpus(Poly)", "all x.(Polly(x) -> -Sterepus(x))", "(-Steerpus(Poly))"]}
{"id": "prontoqa_validation_215", "nl": "Each dumpus is a brimpus.", "fol": "all x. (dumpus(x) -> brimpus(x))", "prediction": ["all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "(all x.(Dumpus(x) -> Brimpus(x)))", "all x y.((Dumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Brimpus(x))", "(all x.(Dumpus(x) -> Brimpus(x)))", "all x.(Dumps(x) -> Brimpus(x))", "all x y.((Dumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Brimpus(x))", "exists x.(Dumps(x) & Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "exists x.(Dumpus(x) & Brimpus(x))", "all x.(Dumpus(x) -> Brimpus(x))", "exists x.(Dupus(x) & Brumpus(x))"]}
{"id": "prontoqa_validation_216", "nl": "Rex is a gorpus and Rex is not a brimpus and Rex is a lorpus.", "fol": "(gorpus(Rex) & -brimpus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x y.(Gorpus(x) -> Rex)) & (-Brimpus(y) -> Rex)) & (Lorpus(y) -> Rex)))", "(all x y z.((Rex(x) & Gorpus(x)) -> Gorpus(x)) & ((Rex(y) & -Brimpus(y)) -> Lorpus(z)))", "all x y.((Rex(x) & Gorpus(x) & Brimpus(y)) -> (Rose(x) & -Brimpus(y) & Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "all x y z.((Rex(x) & Gorpus(x) & Brimpus(y) & Lorpus(z)) -> (Gorpus(x) & -Brimpus(y) & Lorpus(z)))", "(all x y.(Gorpus(x) -> Gorpus(x)) & (Brimpus(y) -> -Brimpus(y)) & (Lorpus(y) -> Gorpus(y)))", "all x y.((Rex(x) & Gorpus(x) & -Brimpus(y)) -> (Lorpus(x) & Lorpus(y)))", "all x.(Rex(x) -> (Gorpus(x) & -Brumpus(x) & Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (-Brimpus(x) & -Lorpus(x)))", "(all x.(Rex(x) -> Gorpus(x)) & (Rex(x) -> -Brimpus(x)) & (Rex(x) -> Lorpus(x)))", "(all x.(Rex,Gorpus) -> Rex(x)) & (-Brimpus(x) -> Rex(x)) & (Lorpus(x) -> Rex(x)))", "all x.(Rex(x) -> (Gorpus(x) & -Brimpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_217", "nl": "Rex is not a dumpus.", "fol": "-dumpus(Rex)", "prediction": ["Rex is not a Dumpus.", "all x.(Rex(x) -> -Dumpus(x))", "(-Dumpus(Rex))", "Rex is not a Dumpus.", "Rex is notDumpus(x)", "(-Dumpus(Rex))", "all x.(Rex(x) -> -Dumpus(x))", "Rex -Dumpus(Rex)", "-Dumpus(Rex)", "Rex is not Dumpus.", "all x.(Rex(x) -> -Dumpus(x))", "(-Dumpus(Rex))", "(-Dumps(Rex))", "Rex is not a Dumpus.", "-Dumpus(Rex)", "-Dumpus(rex)"]}
{"id": "prontoqa_validation_218", "nl": "Each tumpus is a lorpus.", "fol": "all x. (tumpus(x) -> lorpus(x))", "prediction": ["all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Lorpus(x))", "all x y.((Tumpus(x) & Lorpus(y)) -> HasTumpus(x,y))", "all x.(Tumpus(x) -> Loomis(x))", "all x.(Tumpus(x) -> Lorpus(x))", "all x.(Tumpus(x) -> lorpus(x))", "exists x.(Tumpus(x) & Thrombos(x))", "all x.(Tumpus(x) -> Lordus(x))", "exists x.(Tumpus(x) & Lord(x))", "all x.(Tumpus(x) -> Lorpus(x))", "exists x.(Tumpus(x) & Lord(x))", "exists x.(Tumpus(x) & Lamb(x))"]}
{"id": "prontoqa_validation_219", "nl": "Stella is not a lorpus, Stella is a yumpus, and Stella is a wumpus.", "fol": "(-lorpus(Stella) & yumpus(Stella) & wumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) & -Yumpus(y) & -Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & all y.(Stella(y) -> Yumpus(y)) & all z.(Stella(z) -> Wumpus(z))))", "(all x y z.((Stella(x) & Lorpus(y)) -> -Lorpus(x)) & ((Stella(z) & Yumpus(z))) -> Wumpus(z)))", "all x.(Stella(x) -> (-Lorpus(x) & Yampus(x) & Wumpus(x)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & all y.(Yumpus(y) -> -Lorpus(y))) & all z.(Wumpus(z) -> (Lorpus(z) & Yumpus(z))))", "all x y z.((Stella(x) & Lorpus(y) & Yumpus(z)) -> (-Lorpus(x) & Yumpus(x) & Wumpus(x)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Yumpus(x) | Wumpus(x))))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) & -Yumpus(y) & -Wumpus(z)))", "exists x.(Stella(x) & -Lorpus(x) & Yampus(x) & Wumpus(x))", "(all x y z.((Stella(x) & Lorpus(y)) -> -Lorpus(x)) & ((Stella(z) & Yumpa(z))) -> Wumpus(z)))", "(all x.(Lorpus(x) | Yampus(x)) & all y.(Wumpus(y))) -> -Lorpus(x))", "(all x y z.((Lorpus(x) & Stella(y) & Yumpus(z)) -> -Lorpus(x)) & ((Yumpus(y) & Stella(z)) -> Wumpus(z)))", "all x y z.((Stella(x) & Yompus(y) & Wumpus(z)) -> (-Lorpus(x) & Yampus(y) & Wumpus(z)))", "(all x.(Stella(x) -> -Lorpus(x)) & (Stella(x) -> Yumpus(x)) & (Stella(x) -> Wumpus(x)))", "all x y z.((Lorpus(x) & Yampus(y) & Wumpus(z)) -> (-Lorpus(x) & Yampus(y) & Wumpus(z)))"]}
{"id": "prontoqa_validation_220", "nl": "Stella is not a tumpus.", "fol": "-tumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Tumpus(x))", "(-Tumpus(Stella))", "Stella is not a Tumpus.", "Stella is notTumpus(Stella)", "all x.(Stella(x) -> -Tumpus(x))", "Stella is not a Tumpus(Stella)", "(-Tumpus(Stella))", "Stella is notTumpus(Stella)", "Stella -Tumpus(s)", "all x.(Stella(x) -> -Tumpus(x))", "(-Tumpus(Stella))", "-Tumpus(Stella)", "Stella is not a Tumpus.", "Stella -Tumpus(Stella)", "(-Tumpus(Stella))", "-Tumpus(Stella)"]}
{"id": "prontoqa_validation_221", "nl": "Brimpuses are numpuses.", "fol": "all x. (brimpus(x) -> numpus(x))", "prediction": ["all x.(Brimpus(x) -> Numpus(x))", "all x.(Brompus(x) -> Numpus(x))", "all x y.((Brimpus(x) & Numpus(y)) -> (Brompus(x) & Numpus(x)))", "(all x.(Brimpus(x) -> Numpuse(x)))", "all x.(Brimbus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpuse(x))", "all x y.((Brompus(x) & Numpus(y)) -> Is(x,y))", "all x.(Brimpuse(x) -> Numpuse(x))", "(all x.(Brompus(x) -> Numpus(x)))", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimpus(x) -> Numpuse(x))", "(Numpus)", "all x.(Brompus(x) -> Numpus(x))", "all x.(Brimbus(x) -> Numpuse(x))", "all x.(Brompus(x) -> Numpus(x))", "all x.( Brimpuse(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_222", "nl": "Stella is a lempus and Stella is not a numpus and Stella is a dumpus.", "fol": "(lempus(Stella) & -numpus(Stella) & dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z)) -> (-Numpus(y) & Dumpus(y)))", "(all x y.((Stella(x) & Lempus(x)) -> Numpus(y)) & ((Stella(x) & Dumpus(x)) -> Dumpus(x)))", "all x y.((Stella(x) & Lempus(x) & Stella(y)) -> (-Numpus(y) & Dumpus(y)))", "(all x.(Lempus(x) -> Stella(x)) & (-Numpus(x) -> Stella(x)) & (Dumpus(x) -> Stella(x)))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & -Numpus(y)) & ((Stella(z) & Dumpus(z)) -> Dumpus(z))))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z) & Dumpus(z)) -> (Lempus(x) & -Numpus(y) & Dumpus(y)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))", "all x.(Stella(x) -> (Lempus(x) & -Numpus(x) & Dumpus(x)))", "(all x y.(Lempus(x) -> Stella(x)) & (Numpus(y) -> Stella(y)) & (Dumpus(y) -> Stella(y)))", "(all x.(Lempus(x) & -Numpus(x)) & all y.(Dumpus(y)) -> Lempus(x)))", "all x y.((Stella(x) & Lempus(x)) -> (-Numpus(y) & Dumpus(x)))", "exists x.(Lempus(x) & -Numpus(x) & Dumpus(x))", "all x y z.((Stella(x) & Lempus(x) & Stella(y) & Numpus(z) & Dumpus(y)) -> (Lempus(x) & -Numpus(y) & Dumpus(z)))", "all x.(Stella(x) -> (Lempus(x) & -Numpus(x) & Dumpus(x)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> -Numpus(x)) & (Stella(x) -> Dumpus(x)))"]}
{"id": "prontoqa_validation_223", "nl": "Stella is not a brimpus.", "fol": "-brimpus(Stella)", "prediction": ["all x.(Stella(x) -> -Brimpus(x))", "Stella is not a Brimpus.", "(-Brimpus(Stella))", "all x.(Stella(x) -> -Brimpus(x))", "Stella is not a Brimpus.", "Stella -Brimpus(Stella))", "Stella is not a brimpus.", "(-Brimpus(Stella))", "all x.(Stella(x) -> -Brumpus(x))", "-(Brimpus(Stella))", "-Brimpus(Stella)", "Stella -Brimpus(Stella)", "Stella is not a Brimpus.", "Stella is not a brimpus.", "(-Brumpus(Stella))", "all x.(Stella(x) -> -Brimpus(x))"]}
{"id": "prontoqa_validation_224", "nl": "Max is a yumpus, Max is a shumpus, and Max is not an impus.", "fol": "(yumpus(Max) & shumpus(Max) & -impus(Max))", "prediction": ["(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "all x y z.((Max(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))", "all x y z.((Max(x) & Yumpus(y) & Humpus(z)) -> (Yumpus(x) & Shumpus(x) & -Impossible(x)))", "all x.(Max(x) -> (Yumpus(x) & Humpus(x) & -Impossible(x)))", "(all x y z.((Max(x) & Yumpus(y)) -> (Yumpus(z) | Humpus(z))) & ((Max(x) & Issue(x)) -> -Impossible(x)))", "(yumpus(x) | shumpus(x)) & -Impossible(x))", "(all x y z.((Max(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) | Shumpus(z))) & ((Max(x) & Issue(x)) -> -Impossible(x)))", "(all x.(Max(x) -> Yumpus(x)) & (Max(x) -> Humpus(x)) & (Max(x) -> -Impossible(x))))", "all x y z.((Max(x) & Yumpus(y) & Shumpus(z)) -> (Yumpus(x) & Shumpus(x) & -Impossible(x)))", "(yumpus(x) & shumpus(x) & -isolator(x))", "(all x.(Max(x) -> Yampus(x)) & (Max(x) -> Humpus(x)) & -Impossible(x)))", "all x y z.((Max(x) & Yumpus(y) & Humpus(z) & Is(x,y)) -> (Yumpus(x) | Shumpus(z) | -Impossible(x)))", "all x.(Max(x) -> (Yumpus(x) & Humpus(x) & -Impossible(x)))", "all x.(Max(x) -> (Yumpus(x) | Humpus(x) | Imperator(x)))", "(all x.(Max(x) -> Yumpus(x)) & all y.(Max(y) -> Humpus(y)) & all z.(Max(z) -> -Impossible(z))))"]}
{"id": "prontoqa_validation_225", "nl": "Max is not a numpus.", "fol": "-numpus(Max)", "prediction": ["(-numpus(Max))", "all x.(Max(x) -> -Numpus(x))", "Max is not a Numpus.", "(Max(Max) & -Numpus(Max))", "-numpus(Max)", "Max is not a Numpus(Max)", "-Numpus(Max)", "all x.(Max(x) -> -Numpus(x))", "(-numpus(Max))", "Max is not Numpus.", "-Numpus(Max)", "(Max is notnumpus(Max))", "all x.(Max(x) -> -Numpus(x))", "-Numpus(Max)", "(-numpus(Max))", "all x.(Max(x) -> -Numpus(x))"]}
{"id": "prontoqa_validation_226", "nl": "Each vumpus is a brimpus.", "fol": "all x. (vumpus(x) -> brimpus(x))", "prediction": ["all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "(all x.(Vumpus(x) -> Brimpus(x)))", "all x y.((Vumpus(x) & Brimpus(y)) -> Is(x,y))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x y.((Vumpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "all x.(Vumpus(x) -> Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))", "exists x.(Vumpus(x) & Brimpus(x))"]}
{"id": "prontoqa_validation_227", "nl": "Wren is a jompus, Wren is a tumpus, and Wren is not a brimpus.", "fol": "(jompus(Wren) & tumpus(Wren) & -brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jompus(x) | Tumpus(z) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & -Brimpus(z)) -> (Jompus(x) & Tumpus(y) & -Brimpus(z)))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Tumpus(z))) & ((Wren(x) & -Brimpus(x)) -> (Tumpus(x) & -Brimpus(x))))", "all x.(Wren(x) -> (Jompus(x) | Tumpus(x) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "(all x y z.((Wren(x) & Jompus(x)) -> (Wren(y) & Tumpus(y))) & ((Wren(z) & -Brimpus(z)) -> (-Jompus(z) & Tumpus(z))))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jompus(x) | Tumpus(z) | -Brimpus(z)))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & -Brimpus(z)) -> (Jompus(x) | Tumpus(y) | -Brimpus(z)))", "(all x y z.((Wren(x) & Jompus(y)) -> (Jompus(z) | Tumpus(z))) & ((Wren(x) & -Brimpus(x)) -> (Brimpus(x))))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brimpus(z))))", "(all x.(Wren(x) -> Jompus(x)) & (Wren(x) -> Tumpus(x)) & (Wren(x) -> -Brimpus(x)))", "all x y z.((Wren(x) & Jompus(x) & Tumpus(y) & -Brimpus(z)) -> (Jompus(x) | Tumpus(y) & -Brimpus(z)))", "all x y z.((Wren(x) & Jompus(y) & Tumpus(z)) -> (Jompus(x) | Tumpus(z) | -Brimpus(x)))", "(all x.(Wren(x) -> Jompus(x)) & all y.(Wren(y) -> Tumpus(y)) & all z.(Wren(z) -> -Brumpus(z))))"]}
{"id": "prontoqa_validation_228", "nl": "Each sterpus is a jompus.", "fol": "all x. (sterpus(x) -> jompus(x))", "prediction": ["all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x y.((Sterpus(x) & Jompus(y)) -> Has(x,y))", "(all x.(Sterpus(x) -> Jompus(x)))", "all x.(Sterpus(x) -> Jompus(x))", "all x y.((Steerpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Sterepus(x) -> Jompus(x))", "all x y.((Sterpus(x) & Jompus(y)) -> Has(x,y))", "all x.(Sterpus(x) -> Jompus(x))", "all x.(Steerpus(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "exists x.(Steerpus(x) & JOMPUS(x))", "all x.(Stereo(x) -> Jompus(x))", "all x.(Sterpus(x) -> Jompus(x))", "exists x.(Sterpus(x) & Jompus(x))", "exists x.(Sterpus(x) & Jompus(x))"]}
{"id": "prontoqa_validation_229", "nl": "Polly is not a jompus, Polly is a lempus, and Polly is a rompus.", "fol": "(-jompus(Polly) & lempus(Polly) & rompus(Polly))", "prediction": ["(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(x) & Rompus(x)))", "(all x y z.((Polly(x) & Jompus(y)) -> -Jompus(x)) & ((Polly(z) & Lempus(z))) -> Rompus(z)))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(x) & Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) & Lempus(y) & Rompus(z)))", "all x y.((Polly(x) & Jompus(y)) -> (-Jompus(x) | Lempus(y) | Rompus(y)))", "(all x y z.((Polly(x) & Jompus(y)) -> -Jompus(x)) & ((Polly(z) & Lempus(z)) -> Rompus(z)))", "exists x.(Polly(x) & -Jompus(x) & Lempus(x) & Rompus(x))", "(all x.(Polly(x) -> -Jompus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Rompus(z))))", "(all x.(Polly(x) -> -Jompus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Rompus(x)))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) | (Lempus(x) & Rompus(x))))", "all x y z.((Polly(x) & Jompus(y) & Lempus(z)) -> (-Jompus(x) | (Lempus(z) | Rompus(z)))))", "(all x y z.((Polly(x) & Jompus(y)) -> -Jompus(x)) & ((Polly(z) & Lempus(z)) -> Rompus(z)))", "all x y z.((Polly(x) & Lempus(y) & Rompus(z)) -> (-Jompus(x) & Lempus(y) & Rompus(z)))"]}
{"id": "prontoqa_validation_230", "nl": "Vumpuses are numpuses.", "fol": "all x. (vumpus(x) -> numpus(x))", "prediction": ["all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x))", "(Numpuses(v) & Numpus(v))", "(Numpus(v) & Numpus(v))", "all x.(Vumpus(x) -> Numpus(x))", "all x y.((Vumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "(Numpus)", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpus(x))", "all x.(Volpus(x) -> Numpus(x))", "all x.(Vumpus(x) -> Numpuse(x))", "all x.(Vumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_231", "nl": "Stella is not a numpus, Stella is a shumpus, and Stella is a sterpus.", "fol": "(-numpus(Stella) & shumpus(Stella) & sterpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x))))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "(all x y z.((Stella(x) & Numpus(y)) -> -Numpus(x)) & ((Stella(z) & Humpus(z))) -> Sterpus(z)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> Sterpus(y)))", "all x.(Stella(x) -> (-Numpus(x) & -Shumpus(x) & -Sterpus(x)))", "exists x.(Stella(x) & -Numpus(x) & Shumpus(x) & Sterpus(x))", "all x y z.((Stella(x) & Numpus(y) & Humpus(z)) -> (-Numpus(x) & Shumpus(x) & Sterpus(x)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & Shumpus(y) & Sterpus(z)))", "(all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> -Numpus(x)) & ((Stella(x) & Sterpus(x)) -> Sterpus(x)))", "(all x y z.((Stella(x) & Numpus(y)) -> -Numpus(x)) & ((Shumpus(z) & -Sterpus(z)) -> Sterpus(z)))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) & Sterpus(y)))", "all x y z.((Stella(x) & Numpus(y) & Shumpus(z)) -> (-Numpus(x) & -Sterpus(x)))", "all x y z.((Stella(x) & Shumpus(y) & Sterpus(z)) -> (-Numpus(x) | (Shumpus(y) | Sterpus(z)))))", "(all x.(Stella(x) -> -Numpus(x)) & (Shumpus(x) | Sterpus(x)))", "(all x.(Stella(x) -> -Numpus(x)) & all y.(Shumpus(y) -> -Sterpus(y)))"]}
{"id": "prontoqa_validation_232", "nl": "Stella is not a vumpus.", "fol": "-vumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Vumpus(x))", "Stella is not a Vumpus.", "(-Vumpus(Stella))", "Stella is not a vumpus.", "Stella -Vumpus(Stella))", "all x.(Stella(x) -> -Vumpus(x))", "Stella is not a Vumpus(Stella)", "-Vumpus(Stella)", "(-Vumpus(Stella))", "(Vumpus(Stella) & -Vumpus(Stella))", "Stella -Vumpus(Stella)", "all x.(Stella(x) -> -Vumpus(x))", "Stella is not a vumpus.", "(-Vumpus(Stella))", "Stella is not a Vumpus(Stella)", "-Vimpus(Stella)"]}
{"id": "prontoqa_validation_233", "nl": "Each wumpus is a grimpus.", "fol": "all x. (wumpus(x) -> grimpus(x))", "prediction": ["all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "exists x y.(Wumpus(x) & Grimpus(y))", "(all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "all x.((Wumpus(x) & Grimpus(x)) -> HasWumpus(x))", "exists x y.(Wumpus(x) & Grimpus(y))", "exists x y.(Wumpus(x) & Grimpus(y))", "all x.(Wumpus(x) -> Grimpus(x))", "all x.(Wumpus(x) -> Grumpus(x))", "all x.(Wumpus(x) -> Grimpus(x))", "exists x.(Wumpus(x) & Grimpus(x))", "all x.(Wumpus(x) -> Gruppus(x))", "all x.(Wumpus(x) -> Grumpus(x))"]}
{"id": "prontoqa_validation_234", "nl": "Polly is a lorpus and Polly is a numpus and Polly is not a grimpus.", "fol": "(lorpus(Polly) & numpus(Polly) & -grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x))))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(z) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & all y.(Polly(y) -> Numpus(y)) & all z.(Polly(z) -> -Grimpus(z))))", "(all x y z.((Polly(x) & Lorpus(y)) -> (Lorpus(x) & Numpus(y))) & ((Polly(z) & Grimpus(z)) -> -Lorpus(z)))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & -Grimpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x.(Lorpus(x) -> Polly(x)) & (Numpus(x) -> Polly(x)) & -Grimpus(x)))", "all x y.((Polly(x) & Lorpus(x) & Numpus(y)) -> (Lorpus(x) & Numpus(y) & -Grimpus(y)))", "all x.(Polly(x) -> (Lorpus(x) & Numpus(x) & -Grimpus(x)))", "exists x.(Polly(x) & Lorpus(x) & Numpus(x) & -Grimpus(x))", "all x y z.((Polly(x) & Lorpus(x) & Numpus(y) & Grimpus(z)) -> (Lorpus(x) & Numpus(y) & -Grimpus(z)))", "(all x y.(Lorpus(x) & Lorpus(y)) & (Numpus(y) | -Grimpus(y)))", "(all x y z.(Lorpus(x) -> Polly(y)) & (Numpus(z) -> Polly(z))) & (Lorpus(y) -> Polly(z)) & -Grimpus(z)))", "(all x.(Polly(x) -> Lorpus(x)) & (Polly(x) -> Numpus(x)) & (Polly(x) -> -Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Numpus(z)) -> (Lorpus(x) & Numpus(x) & -Grimpus(x)))", "(all x.(Lorpus(x) -> Polly)) & (Numpus(x) -> Polly)) & -Grimpus(x)))", "all x y.((Polly(x) & Lorpus(x) & Numpus(y)) -> (Lorpus(x) & Nompus(y) & -Grimpus(x)))"]}
{"id": "prontoqa_validation_235", "nl": "Rex is not a grimpus and Rex is a rompus and Rex is a lorpus.", "fol": "(-grimpus(Rex) & rompus(Rex) & lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(y) & Lorpus(z)))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) & -Lorpus(y))))", "all x.(Rex(x) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x y.(Rex(x) -> -Grimpus(x)) & (Rompus(y) & Lorpus(y)))", "(all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> -Grimpus(x)) & ((Rex(x) & Lorpus(x)) -> Loppus(x)))", "(-Grimpus(rex) & Rompus(rex) & Lorpus(rex))", "all x y.((Rex(x) & Grimpus(y)) -> (-Grimpus(x) & Rompus(y) & Lorpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) | Lorpus(x))))", "(all x.(Rex(x) -> -Grimpus(x)) & all y.(Rompus(y) -> -Rompus(y)) & all z.(Lorpus(z) -> -Grimpus(z))))", "all x.(Rex(x) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x y.(Rex(x) -> (-Grimpus(x) & Rompus(y))) & (Lorpus(x) -> (Rompus(y) & Lorpus(y))))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(y) & Lorpus(z)))", "all x y z.((Rex(x) & Grimpus(y) & Rompus(z)) -> (-Grimpus(x) & Rompus(x) & Lorpus(x)))", "(all x.(Rex(x) -> -Grimpus(x)) & (Rompus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_236", "nl": "Every vumpus is a lorpus.", "fol": "all x. (vumpus(x) -> lorpus(x))", "prediction": ["all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "(all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x y.(Vumpus(x) & Lorpus(y))", "all x.((Vumpus(x) & Lorpus(x)) -> -Vumpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x y.(Vumpus(x) & Lorpus(y))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "all x.(Vumpus(x) -> Lorpus(x))", "exists x.(Vumpus(x) & Lord(x))", "all x.(Vumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_237", "nl": "Polly is not a lorpus and Polly is a wumpus and Polly is a grimpus.", "fol": "(-lorpus(Polly) & wumpus(Polly) & grimpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(x) & Grimpus(x)))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y))) & all z.(Polly(z) -> Grimpus(z)))", "(all x y.(Lorpus(x) -> -Lorpus(x)) & (Wumpus(y) -> Grimpus(y)))", "(all x y z.((Polly(x) & Lorpus(y)) -> -Lorpus(x)) & ((Polly(z) & Wumpus(z))) -> Grimpus(z)))", "all x y.((Polly(x) & -Lorpus(x) & Polly(y)) -> (Wumpus(y) & Grimpus(y)))", "all x.(Polly(x) -> (-Lorpus(x) & Wumpus(x) & Gruppus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(x) & Gruppus(x)))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(y) & Gruppus(z)))", "(all x.(Lorpus(x) -> -Lorpus(x)) & (Wumpus(x) -> Grimpus(x)))", "(all x y.(Lorpus(x) -> Polly)) & (Wumpus(y) -> Polly)))", "(all x.(Polly(x) -> -Lorpus(x)) & (Polly(x) -> Wumpus(x)) & (Polly(x) -> Grimpus(x)))", "all x y.((Polly(x) & -Lorpus(x) & Polly(y)) -> (Wumpus(y) & Gruppus(y)))", "exists x.(Polly(x) & (-Lorpus(x) | (Wumpus(x) | Grimpus(x)))))", "(all x.(Polly(x) -> -Lorpus(x)) & all y.(Polly(y) -> Wumpus(y)) & all z.(Polly(z) -> Grimpus(z))))", "all x y z.((Polly(x) & Lorpus(y) & Wumpus(z)) -> (-Lorpus(x) & Wumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_validation_238", "nl": "Sally is a tumpus, Sally is not a rompus, and Sally is an impus.", "fol": "(tumpus(Sally) & -rompus(Sally) & impus(Sally))", "prediction": ["(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperator(x)))", "all x y z.((Sally(x) & Tompus(y) & Rompus(z)) -> (Tumpus(x) & -Rompus(x) & Imperator(x)))", "(all x y z.((Sally(x) & Tumpus(y)) -> Tumpus(x)) & ((Sally(z) & -Rompus(z))) -> Imperator(z)))", "all x.(Sally(x) -> (Tumpus(x) & -Rompus(x) & Is(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Imperator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & (-Rompus(x) & -Impossible(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Imperator(z))))", "all x y z.((Sally(x) & Tumpus(y) & Rompus(z)) -> (Tumpus(x) | -Rompus(x) | Imperator(x)))", "(all x.(Tumpus(x) -> Sally)) & (-rompus(x) -> Sally(x)) & (-rompus(x) -> Sally(x)))", "all x y z.((Sally(x) & Rumpus(y) & Imperator(z)) -> (Tumpus(x) & -Rompus(y) & Imperator(z)))", "exists x.(Sally(x) & Tumpus(x) & -Rompus(x) & Imperator(x))", "(all x y.(Tumpus(x) -> Sally(x)) & (Rompus(y) -> Sally(y))) & (Illegal(y) -> Sally(y)))", "all x.(Sally(x) -> (Tumpus(x) & -Rompus(x) & Imperator(x)))", "(all x.(Sally(x) -> Tumpus(x)) & all y.(Sally(y) -> -Rompus(y)) & all z.(Sally(z) -> Issue(z))))", "(all x.(Sally(x) -> Tumpus(x)) & (Sally(x) -> -Rompus(x)) & (Sally(x) -> Impossible(x)))", "all x.(Sally(x) -> (Tumpus(x) & -Rompus(x) & Impossible(x)))"]}
{"id": "prontoqa_validation_239", "nl": "Each yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "(all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "exists x.(Yumpus(x) & Yumpus(y) & Vumpus(x))", "all x.(yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))"]}
{"id": "prontoqa_validation_240", "nl": "Stella is not a vumpus, Stella is a sterpus, and Stella is a shumpus.", "fol": "(-vumpus(Stella) & sterpus(Stella) & shumpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "all x y z.((Stella(x) & Sterpus(y) & Humpus(z)) -> (-Vumpus(x) & -Sterpus(y) & -Shumpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x y z.((Stella(x) & Vumpus(y)) -> -Vumpus(x)) & ((Stella(z) & Sterpus(z)) -> Humpus(z)))", "all x y z.((Stella(x) & Vumpus(y) & Sterpus(z)) -> (-Vumpus(x) & Sterpus(x) & Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y)))", "all x.(Stella(x) -> (-Vumpus(x) & Sterpus(x) & Humpus(x)))", "(all x.(Stella(x) -> -Vumpus(x)) & all y.(Stella(y) -> Sterpus(y)) & all z.(Shumpus(z) -> -Vumpus(y)))", "exists x.(Stella(x) & -Vumpus(x) & Sterpus(x) & Humpus(x))", "all x y z.((Stella(x) & -Vumpus(x) & Sterpus(y) & Humpus(z)) -> (-Vumpus(x) & Sterpus(y) & Shumpus(z)))", "all x y z.((Stella(x) & Sterpus(y) & Humpus(z)) -> (-Vumpus(x) & Sterpus(y) & Shumpus(z)))", "(all x y z.((Stella(x) & Vumpus(y)) -> -Vumpus(x)) & ((Stella(z) & Sterpus(z)) -> Shumpus(z)))", "all x y z.(Stella(x) -> (-Vumpus(x) & Sterpus(y) & Humpus(z)))", "all x y z.(Stella(x) & (Vumpus(y) | Sterpus(y) | Humpus(z))) -> (-Vumpus(x) | Sterpus(y) | Shumpus(z)))", "(all x.(Stella(x) -> -Vumpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))", "(all x.(Stella(x) -> -Vimpus(x)) & (Stella(x) -> Sterpus(x)) & (Stella(x) -> Humpus(x)))"]}
{"id": "prontoqa_validation_241", "nl": "Stella is not a yumpus.", "fol": "-yumpus(Stella)", "prediction": ["all x.(Stella(x) -> -Yumpus(x))", "(-Yumpus(Stella))", "Stella is not yumpus.", "Stella is notYumpus(Stella)", "all x.(Stella(x) -> -Yumpus(x))", "(-Yumpus(Stella))", "Stella is not yumpus.", "Stella is notYumpus(Stella)", "Stella is not a yumpus.", "all x.(Stella(x) -> -Yumpus(x))", "(-Yumpus(Stella))", "Stella -Yumpus(Stella)", "-Yumpus(Stella)", "Stella -Yumpus(Stella)", "(-Yumpus(Stella))", "-yumpus."]}
{"id": "prontoqa_validation_242", "nl": "Lempuses are tumpuses.", "fol": "all x. (lempus(x) -> tumpus(x))", "prediction": ["all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x y.((Lempuse(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(lempuse) & -Tumpus(lempuse))", "all x.(Lempuse(x) -> Tumpus(x))", "(Tumpuse(lempuse) & Tumpus(lempuse,lempus))", "all x.(Lemme(x) -> Tumpus(x))", "all x y.((Lempuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumulus(x))", "all x.(Lumpus(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpus(x))", "all x.(Lempuse(x) -> Tumpuse(x))", "All x.(Lempus(x) -> Tumpus(x))", "all x.(Lemmes(x) -> Tumulus(x))"]}
{"id": "prontoqa_validation_243", "nl": "Alex is a lorpus and Alex is not a tumpus and Alex is an impus.", "fol": "(lorpus(Alex) & -tumpus(Alex) & impus(Alex))", "prediction": ["(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "all x y z.((Alex(x) & Lorpus(x) & Tumpus(y) & Imperator(z)) -> (Lorpus(x) & -Tumpus(y) & Imperator(z)))", "all x.(Alex(x) -> (Lorpus(x) & -Tumpus(x) & Imperator(x)))", "all x y.((Alex(x) & Lorpus(x) & -Tumpus(y)) -> Imperator(x))", "(all x y.(Lorpus(x) -> Alex(x)) & (Tumpus(y) -> -Tumpus(y)) & (Impossible(y) -> Alex(y)))", "all x y z.((Alex(x) & Lorpus(y) & Tompus(z)) -> (Lorpus(x) & -Tumpus(x) & Imperator(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "(all x.(Alex(x) -> Llorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "(all x.(Alexa(x) -> Lorpus(x)) & (Alexa(x) -> -Tumpus(x)) & (Alexa(x) -> Imperator(x)))", "all x.(Alex(x) -> (Lorpus(x) & -Tumpus(x) & Imperator(x)))", "(all x y.(Lorpus(x) -> -Tumpus(y)) & (Illegal(x) -> -Lorpus(x)))", "all x.(Alex(x) -> (Lorph(x) & -Tumpus(x) & Issue(x)))", "(all x.(Alex(x) -> Lorpus(x)) & (Alex(x) -> -Tumpus(x)) & (Alex(x) -> Imperator(x)))", "all x y.((Alex(x) & Lorpus(x)) -> (-Tumpus(x) & IsPlate(y)))", "exists x.(Lorpus(x) & -Tumpus(x) & Imperator(x))", "all x.(Alex(x) -> (Lorph(x) & -Tumpus(x) & Ilira(x)))"]}
{"id": "prontoqa_validation_244", "nl": "Alex is not a lempus.", "fol": "-lempus(Alex)", "prediction": ["all x.(Alex(x) -> -Lempus(x))", "Alex is not a lempus.", "all x.(Alex(x) -> -Lempus(x))", "(-Lempus(Alex))", "Alex is not a lempus.", "-Lempus(Alex)", "Alex is not lempus.", "all x.(Alex(x) -> -Lempus(x))", "Alex is not a lempus.", "(-lempus(Alex))", "Alex is not lempus.", "all x.(Alex(x) -> -Lempus(x))", "-Lempus(Alex)", "all x.(Alex(x) -> -Lempus(x))", "All x.(Alex(x) -> -Limpus(x))", "all x.(Alex(x) -> -Lempus(x))"]}
{"id": "prontoqa_validation_245", "nl": "Every jompus is a grimpus.", "fol": "all x. (jompus(x) -> grimpus(x))", "prediction": ["all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "(all x.(Jompus(x) -> Grimpus(x))", "all x y.((Jompus(x) & Grimpus(y)) -> Is(x,y))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Gruppus(x))", "all x y.((Jompus(x) & Grimpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Grimpus(x))", "all x.(Jimpus(x) -> Grimpus(x))", "all x.(Jompus(x) -> Gruppus(x))", "all x.(Jumpus(x) -> Grupus(x))", "exists x.(Jimpus(x) & Grimpus(x))", "exists x.(Jompus(x) & Grimpus(x))", "exists x.(Mjompus(x) & Grimpus(x))"]}
{"id": "prontoqa_validation_246", "nl": "Wren is a vumpus, Wren is not a grimpus, and Wren is a yumpus.", "fol": "(vumpus(Wren) & -grimpus(Wren) & yumpus(Wren))", "prediction": ["(all x.(Wren(x) -> Vumpus(x)) & (-Grimpus(x) & (Yumpus(x) | -Vumpus(x))))", "all x y z.((Wren(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) & -Grimpus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "(all x y z.((Wren(x) & Vumpus(y)) -> (Vumpus(z) | -Grimpus(z)) | (Yumpus(z) & Wren(x))))", "all x y z.((Wren(x) & Vumpus(x) & Wren(y) & Grimpus(z)) -> (-Vumpus(x) & -Grimpus(y) & -Yumpus(z)))", "(all x y z.((Wren(x) & Vumpus(y) & -Grimpus(z)) -> (Vumpus(x) & -Grimpus(y) & -Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (-Wren(x) -> Grimpus(x)) & (-Wren(x) -> Yumpus(x)))", "all x.(Wren(x) -> (Vumpus(x) & -Grimpus(x) & Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))", "(all x y z.((Wren(x) & Vumpus(x)) -> (Vumpus(x) & -Grimpus(y)) & ((Wren(z) & Yumpus(z)) -> (Yumpus(z))))", "all x y z.((Wren(x) & Vumpus(y) & Grimpus(z)) -> (Vumpus(x) & -Grimpus(y) & Yumpus(z)))", "all x y z.((Wren(x) & Vumpus(x) & Wren(y) & Grimpus(z)) -> (-Vumpus(x) & -Smoothpus(y) & -Yumpus(z)))", "all x y z.((Wren(x) & Vampire(y) & Grimpus(z)) -> (Vampire(x) & -Grimpus(y) & Yumpus(z)))", "all x y z.((Wren(x) & Vampus(y) & Gruppus(z)) -> (Vumpus(x) & -Grimpus(y) & Yumpus(z)))", "(all x.(Wren(x) -> Vumpus(x)) & (Wren(x) -> -Grimpus(x)) & (Wren(x) -> Yumpus(x)))", "(all x.(Wren(x) -> Vumpus(x)) & all y.(Wren(y) -> -Grimpus(y))) & all z.(Wren(z) -> Yumpus(z)))"]}
{"id": "prontoqa_validation_247", "nl": "Wren is not a jompus.", "fol": "-jompus(Wren)", "prediction": ["all x.(Wren(x) -> -Jompus(x))", "(-Jompus(Wren))", "Wren is not a Jompus.", "all x.(Wren(x) -> -Jompus(x))", "(-Jompus(Wren))", "(-jompus(Wren) & -Jompus(Wren))", "all x.(Wren(x) -> -Jompus(x))", "-Jompus(Wren)", "(Jompus(Wren) & -Jompus(Wren))", "-Jimpus(Wren)", "(-Jompus(Wren,x))", "all x.(Wren(x) -> -Jompus(x))", "all x.(Wren(x) -> -Jimpus(x))", "-jompus(Wren)", "-Jompus(Wren)", "all x.(Wren(x) -> -Jompus(x))"]}
{"id": "prontoqa_validation_248", "nl": "Yumpuses are dumpuses.", "fol": "all x. (yumpus(x) -> dumpus(x))", "prediction": ["all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "(Dumpuses(y) & Dumpuse(z))", "(Dumpuse(y) & Dumpuse(z))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpuse(y)) -> (Dumpus(x) & Dumpuse(y)))", "(Dumpuse(y) & Yumpus(z))", "all x.(Umbuse(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x y.((Yumpus(x) & Dumpus(y)) -> Dumpuse(x))", "all x.(Umbuse(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "all x.(Yumpus(x) -> Dumpus(x))", "all x.(Yumpus(x) -> Dumpuse(x))", "All x.(Yumpus(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_249", "nl": "Sam is not a dumpus and Sam is a rompus and Sam is a zumpus.", "fol": "(-dumpus(Sam) & rompus(Sam) & zumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Dumpus(x)) & (Sam(x) -> Rompus(x)) & (Sam(x) -> Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Rompus(y) & All z.(Zumpus(z))) -> -Dumpus(x)))", "(all x y.((Sam(x) & Dumpus(x)) -> -Dumpus(x)) & ((Sam(y) & Rompus(y)) -> Zumpus(y)))", "all x.(Sam(x) -> (-Dumpus(x) & Rompus(x) & Zumpus(x)))", "(all x y z.((Sam(x) & Dumpus(y)) -> -Dumpus(x)) & ((Sam(z) & Rompus(z))) -> Zumpus(z)))", "all x y.((Sam(x) & Dumpus(y)) -> (-Dumpus(x) & Rompus(y) & Zumpus(y)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(x) & Zumpus(x)))", "(-Dumpus(sam) & Rompus(sam) & Zumpus(sam))", "(all x.(Sam(x) -> -Dumpus(x)) & (Rompus(x) | Zumpus(x)))", "(all x.(Sam(x) -> -Dumpus(x)) & all y.(Sam(y) -> Rompus(y)) & all z.(Sam(z) -> Zumpus(z))))", "exists x.(Sam(x) & -Dumpus(x) & Rompus(x) & Zumpus(x))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(y) & Zumpus(z)))", "all x y.((Sam(x) & Dumpus(y)) -> (-Dumpus(x) & Rompus(y) & Zumpus(y)))", "(all x.(Sam(x) -> -Dumps(x)) & (Rompus(x) | Zumpus(x)))", "all x y z.((Sam(x) & Dumpus(y) & Rompus(z)) -> (-Dumpus(x) & Rompus(x) & Zumpus(x)))"]}
{"id": "prontoqa_validation_250", "nl": "Sam is not a yumpus.", "fol": "-yumpus(Sam)", "prediction": ["all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "Sam is notYumpus(Sam).", "all x.(Yumpus(x) -> -Yumpus(x))", "Sam is notyumpus.", "all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam))", "(yumpus)", "-Yumpus(Sam)", "all x.(Sam(x) -> -Yumpus(x))", "(-Yumpus(Sam)).", "-yumpus.", "all x.(Sam(x) -> -Yumpus(x))", "-yumpus(sam)"]}
{"id": "prontoqa_validation_251", "nl": "Grimpuses are tumpuses.", "fol": "all x. (grimpus(x) -> tumpus(x))", "prediction": ["all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x))", "(all x.(Grimpuse(x) -> Tumpus(x)))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "(all x.(Grimpus(x) -> Tumulus(x)))", "(Tumpuse(Grimpus) & Tumpus(Grimpus))", "all x y.((Grimpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "(Tumpuse(Grimpus) & Tumpus(Grimpus))", "all x.(Grimpus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumulus(x))", "all x.(Gruppus(x) -> Tumpus(x))", "all x.(Grimpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_252", "nl": "Max is not a tumpus, Max is a brimpus, and Max is a rompus.", "fol": "(-tumpus(Max) & brimpus(Max) & rompus(Max))", "prediction": ["(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & -Brimpus(y) & -Rompus(z)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x y z.((Max(x) & Tumpus(y)) -> -Tumpus(x)) & ((Max(z) & Brimpus(z))) -> Rompus(z)))", "all x.(Max(x) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "(all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> -Tumpus(x)) & ((Max(x) & Brimpus(x)) -> Rompus(x)))", "(-Tumpus(Max) & Brimpus(Max) & Rompus(Max))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) | (-Tumpus(x) & Brimpus(y) & Rompus(z))))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))", "all x y z.((Max(x) & Humpus(y) & Brimpus(z)) -> (-Tumpus(x) & -Brimpus(y) & -Rompus(z)))", "all x.(Max(x) -> (-Tumpus(x) & Brimpus(x) & Rompus(x)))", "(all x.(Max(x) -> -Tumpus(x)) & all y.(Max(y) -> Brimpus(y)) & all z.(Max(z) -> Rompus(z))))", "(all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> -Tumpus(x)) & ((Max(x) & Brimpus(x) & Rompus(x)) -> Rompus(x)))", "all x y z.((Max(x) & Tumpus(y) & Brimpus(z)) -> (-Tumpus(x) | (Brimpus(x) & Rompus(x))))", "(all x.(Max(x) -> -Tumpus(x)) & (Max(x) -> Brimpus(x)) & (Max(x) -> Rompus(x)))"]}
{"id": "prontoqa_validation_253", "nl": "Max is not a grimpus.", "fol": "-grimpus(Max)", "prediction": ["-Grimpus(Max)", "all x.(Max(x) -> -Grimpus(x))", "Max is notGrimpus(Max)", "(-Grimpus(Max))", "all x.(Max(x) -> -Grimpus(x))", "(Matthew(Max) & -Grimpus(Max))", "Max is notGrimpus.", "Max is not a Grimpus.", "-Grimpus(Max)", "-Gruppus(Max)", "all x.(Max(x) -> -Grimpus(x))", "(-Grimpus(Max))", "Max is notGrimpus.", "-Gruppus(Max)", "(-Grimpus(Max))", "-Grimpus(Max)"]}
{"id": "prontoqa_validation_254", "nl": "Fae is a grimpus, Fae is not a rompus, and Fae is a jompus.", "fol": "(grimpus(Fae) & -rompus(Fae) & jompus(Fae))", "prediction": ["(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "all x y z.((Fae(x) & Grimpus(x) & Fae(y) & Rompus(z)) -> (-Rompus(y) & Jompus(z)))", "(all x y z.(Fae(x) -> Grimpus(x)) & (Fae(y) -> -Rompus(y)) & (Fae(z) -> Jompus(z)))", "(all x y z.((Fae(x) & Grimpus(y)) -> (Grimpus(x) & -Rompus(y)) & ((Fae(z) & Jompus(z)) -> (Jompus(z)))))", "all x.(Fae(x) -> (Grimpus(x) | -Rompus(x) | Jompus(x)))", "all x y z.((Fae(x) & Grimpus(y) & -Rompus(z)) -> (Fae(x) & Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x y z.((Fae(x) & Grimpus(y)) -> Grimpus(x)) & ((Fae(z) & -Rompus(z))) -> Jompus(z)))", "all x y z.(Fae(x) & Grimpus(x) & Fae(y) & -Rompus(y) & Jompus(z))", "exists x.(Fae(x) & Grimpus(x) & -Rompus(x) & Jompus(x))", "all x y z.(Fae(x) -> (Grimpus(x) & -Rompus(y) & Jompus(z)))", "all x y z.((Fae(x) & Grimpus(y) & -Rompus(z)) -> (Fae(x) & Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grumpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))", "(all x.(Fae(x) -> Grimpus(x)) & all y.(Fae(y) -> -Rompus(y)) & all z.(Fae(z) -> Jompus(z))))", "(all x.(Fae(x) -> Grimpus(x)) & (Fae(x) -> -Rompus(x)) & (Fae(x) -> Jompus(x)))"]}
{"id": "prontoqa_validation_255", "nl": "Fae is not a gorpus.", "fol": "-gorpus(Fae)", "prediction": ["all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Fae))", "all x.(Fae(x) -> -Gorpus(x))", "-Gorpus(Fae)", "(Gorpus(Fae) & -Gorpus(Fae))", "(-Gorpus(Fae))", "all x.(Fae(x) -> -Gorpus(x))", "-Gorpus(Fae)", "(Gorpus(fae) & -Gorpus(fae))", "all x.(Fae(x) -> -Gorpus(x))", "(-Gorpus(Fae))", "-Gorpus(fae)", "all x.(Fae(x) -> -Gorpus(x))", "-Gorpus(fae,female)", "(-Gorpus(Fae))", "-Gorpus(Fae)"]}
{"id": "prontoqa_validation_256", "nl": "Gorpuses are tumpuses.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "(all x.(Gorpuse(x) -> Tumpus(x)))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpuse(x) & Tumpus(y)) -> Tumpus(x))", "(Tumpuse(gorpus) & Tumpus(gorpus))", "all x.(Gorpus(x) -> Tumulus(x))", "all x y.((Gorpuse(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "(Tumpuse(gorpus) & Tumpus(gorpus))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpuse(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_257", "nl": "Fae is a vumpus and Fae is not a tumpus and Fae is a sterpus.", "fol": "(vumpus(Fae) & -tumpus(Fae) & sterpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Sterpus(z)) -> (-Tumpus(y) & Sterpus(z)))", "(all x y.((Fae(x) & Vumpus(x)) -> (Vumpus(x) & -Tumpus(y))) & ((Fae(x) & Sterpus(x)) -> Sterpus(x)))", "all x.(Fae(x) -> (Vumpus(x) & -Tumpus(x) & Sterpus(x)))", "(all x y z.((Fae(x) & Vumpus(x) & -Tumpus(y)) -> (Vumpus(x) & -Tumpus(y)) & ((Fae(z) & Sterpus(z)) -> Sterpus(z)))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "(all x y.(Fae(x) -> Vumpus(x)) & (Fae(y) -> -Tumpus(y)) & (Fae(y) -> Sterpus(y)))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Tumpus(z)) -> (-Tumpus(y) & Sterepus(y)))", "all x y z.((Fae(x) & Fae(y) & Tumpus(z)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(z)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterpus(z))))", "all x.(Fae(x) -> (Vimpus(x) & -Tumpus(x) & Sterpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> -Tumpus(x)) & (Fae(x) -> Sterpus(x)))", "exists x.(Fae(x) & Vumpus(x) & -Tumpus(x) & Sterpus(x))", "all x y.((Fae(x) & Fae(y)) -> (Vumpus(x) & -Tumpus(y) & Sterpus(y)))", "(all x.(Fae(x) -> Vumpus(x)) & all y.(Fae(y) -> -Tumpus(y)) & all z.(Fae(z) -> Sterpus(z))))"]}
{"id": "prontoqa_validation_258", "nl": "Every yumpus is a shumpus.", "fol": "all x. (yumpus(x) -> shumpus(x))", "prediction": ["all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x y.((Yumpus(x) & Humpus(y)) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x y.((Yumpus(x) & Shumpus(y)) -> Has(x,y))", "(all x.(Yumpus(x) -> Humpus(x)))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "all x.(Yumpus(x) -> Shumpus(x))", "exists x.(Yumpus(x) & Humpus(x) & HasShumpus(x))", "all x.(Yumpus(x) -> Humpus(x))", "exists x.(Yumpus(x) & Shumpus(x))", "exists x.(yumpus(x) & Shumpus(y))"]}
{"id": "prontoqa_validation_259", "nl": "Wren is not a shumpus and Wren is a lorpus and Wren is a grimpus.", "fol": "(-shumpus(Wren) & lorpus(Wren) & grimpus(Wren))", "prediction": ["(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y)) & all z.(Wren(z) -> Grimpus(z))))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(x) & -Smokey(x)))", "(all x.(Wren(x) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x))) & ((Wren(x) & Grimpus(x))))", "(all x y.(Wren(x) -> -Shumpus(x)) & ((Wren(y) & Lorpus(y))) & ((Wren(y) & Grimpus(y))))", "(all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> -Shumpus(x)) & ((Wren(x) & Lorpus(x)) -> Grimpus(x)))", "all x y.((Wren(x) & Shumpus(y) & Lorpus(y)) -> (-Shumpus(x) & -Lorpus(x) & -Smokey(x)))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))", "all x.(Wren(x) -> (-Shumpus(x) & (Lorpus(x) | Grimpus(x))))", "(-Shumpus(Wren) & Lorpus(Wren) & Grimpus(Wren))", "exists x.(Wren(x) & -Shumpus(x) & exists y.(Lorpus(y) & exists z.(Grimpus(z) & -Shumpus(z) & -Shumpus(z))))", "(all x.(Wren(x) -> -Shumpus(x)) & all y.(Wren(y) -> Lorpus(y))) & all z.(Wren(z) -> Grimpus(z)))", "all x y z.((Wren(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))", "all x y.((Wren(x) & Shumpus(y) & Lorpus(x) & Grimpus(x)) -> -Shumpus(x) & Lorpus(y))", "(all x y.(Shumpus(x) -> -Shumpus(x)) & (Lorpus(y) -> Grimpus(y)))", "(all x.(Wren(x) -> -Shumpus(x)) & (Lorpus(x) | Grimpus(x))))", "all x y z.((Wren(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & Lorpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_validation_260", "nl": "Each dumpus is an impus.", "fol": "all x. (dumpus(x) -> impus(x))", "prediction": ["all x.(Dumpus(x) -> IsImpossible(x))", "(exists x.(Dumpus(x) & IsImpossible(x)))", "-exists x.(Dumpus(x) & IsImpossible(x))", "all x.(Dumpus(x) -> IsImpossible(x))", "all x y.((Dumpus(x) & Dumpus(y)) -> Is(x,y))", "all x.(Dumpus(x) -> Imperempt(x))", "all x.(Dumpus(x) -> Is(x))", "all x.(Dumpus(x) -> Impossible(x))", "all x.(Dumpus(x) -> Impeccable(x))", "exists x.(Dumps(x) & Is(x))", "all x.(Dumpus(x) -> IsImprovement(x))", "exists x.(Dumpus(x) & Impossible(x))", "all x.(Dumpus(x) -> Impermissible(x))", "exists x.(Dumpus(x) & Impossible(x))", "all x.(Dumpus(x) -> Isolated(x))", "exists x.(Dupus(x) & Implicator(x))"]}
{"id": "prontoqa_validation_261", "nl": "Rex is not an impus and Rex is a sterpus and Rex is a yumpus.", "fol": "(-impus(Rex) & sterpus(Rex) & yumpus(Rex))", "prediction": ["(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) -> Yumpus(x)))", "(all x y z.((Rex(x) & IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIIsIsIsIsIisIisIisiasIasIasIasIasIasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasiasias", "all x y z.((Rex(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "(all x.(Rex(x) -> -Impossible(x)) & all y.(Rex(y) -> Sterpus(y))) & all z.(Rex(z) -> Yumpus(z)))", "(all x y.(Rex(x) -> -Impossible(x)) & ((Rex(y) & Sterpus(y)) | (Yumpus(y)))))", "all x.(Rex(x) -> (-Impossible(x) & Sterpus(x) & Yumpus(x)))", "all x y z.((Rex(x) & -Impossible(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "(-Impossible(Rex) & Sterpus(Rex) & Yumpus(Rex))", "all x y.((Rex(x) & -Impossible(x) & Sterpus(y)) -> (Yumpus(x) & -Impossible(y)))", "(all x.(Rex(x) -> -Impossible(x)) & ((Rex(x) & Sterpus(x)) | (Rex(x) & Yumpus(x)))))", "all x y z.((Rex(x) & Impossible(x) & Sterpus(y) & Yumpus(z)) -> (-Impossible(x) & Sterpus(y) & Yumpus(z)))", "all x y.((Rex(x) & Rex(y)) -> (-Impossible(x) & Sterpus(y) & Yumpus(y)))", "all x.(Rex(x) -> (-Impossible(x) & Sterpus(x) & Yumpus(x)))", "(-Impossible(rex) & Sterpus(rex) & Yumpus(rex))", "(-Issue(Rex) | (Sterepus(Rex) & Yumpus(Rex))))", "(all x.(Rex(x) -> -Issue(x)) & ((Rex(x) & Sterpus(x)) | (Rex(x) & Yumpus(x)))))"]}
{"id": "prontoqa_validation_262", "nl": "Everything that is an impus, a vumpus, or a rompus is a wumpus, a lorpus, and a yumpus.", "fol": "all x. ((impus(x) | vumpus(x) | rompus(x)) -> (wumpus(x) & lorpus(x) & yumpus(x)))", "prediction": ["all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.(Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x y.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(y) | Lorpus(y) | Yumpus(y)))", "all x.((Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Issue(x) | IsVumpus(x) | IsRompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.((Improvse(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Lorpus(x) & Yumpus(x)))", "all x.(((Impos(x) | Vumpus(x) | Rompus(x))) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x y.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(y) | Lorpus(y) | Yampus(y)))", "all x.((Impos(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "(all x.((Impose(x) | Vumpus(x) | Rompus(x))) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "(all x.((Impos(x) | Vumpus(x) | Rompus(x))) -> (Wumpus(x) | Lorpus(x) | Yumpus(x)))", "all x.(Impose(x) | Vumpus(x) | Rompus(x)) -> (Wumpus(x) & Loupus(x) & Yumpus(x)))", "(all x.((Impos,y) | Voompus,y)) | Rompus(y)) -> (Wumpus(x) | Lorpus(x) | Yampus(x,y)))"]}
{"id": "prontoqa_validation_263", "nl": "Polly is a rompus.", "fol": "rompus(Polly)", "prediction": ["all x.(Rompus(x) -> Polly(x))", "Polly is a rompus.", "all x.(Polly(x) -> Rompus(x))", "all x.(Polly(x) -> Rompus(x))", "(Rompus(Polly) & Has(Polly,Polly))", "Polly is a rompus.", "(Rompus(Polly) & HasRompus(Polly))", "Polly is a Rompus.", "all x.(Rompus(x) -> Polly(x))", "All x.(Polly(x) -> Rompus(x))", "Polly is rompus.", "all x.(Polly(x) -> Rompus(x))", "(Rompus(Polly)", "(Rompus(Polly)", "All x.(Polly(x) -> Rompus(x))", "(Rompus(Polly)"]}
{"id": "prontoqa_validation_264", "nl": "Polly is a lorpus.", "fol": "lorpus(Polly)", "prediction": ["all x.(Lorpus(x) -> Polly(x))", "Polly is a lorpus.", "all x.(Polly(x) -> Lorpus(x))", "(Lorpus(Polly) & LivesIn(Polly,Lorph))", "all x.(Lorph(x) -> Polly(x))", "all x.(Lorpus(x) -> Polly(x))", "Polly is a lorpus.", "(Lorpus(Polly) & LivesIn(Polly,Lorpus))", "(Lorpus(Polly) & HasLorph(Polly))", "Polly is a lorpus.", "all x.(Lorph(x) -> Polly(x))", "All x.(Polly(x) -> Lorpus(x))", "(Lorpus(Poly) & LivesIn(Polly,Lorph))", "Polly is a lorpus.", "exists x.(Polly(x) & Lorpus(x))", "all x.(Lorph(x) -> Polly(x))"]}
{"id": "prontoqa_validation_265", "nl": "Everything that is a jompus or a gorpus or a yumpus is a grimpus and a dumpus and a rompus.", "fol": "all x. ((jompus(x) | gorpus(x) | yumpus(x)) -> (grimpus(x) & dumpus(x) & rompus(x)))", "prediction": ["all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.(((Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(y) & Dumpus(y) & Rompus(y)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(y) & Dumpus(y) & Rompus(y)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "(all x.((Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x y.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(y) & Dumpus(y) & Rompus(y)))", "all x.((Jompus(x) | Gorpus(x) | Yampus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Smoothpus(x) & Grimpus(x) & Dumpus(x) & Rompus(x)) -> (Jompus(x) | Gorpus(x) | Yumpus(x)))", "all x.((Jimpus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Morph(x) | Gorpus(x) | Yumpus(x)) -> (Smoochus(x) & Dumpus(x) & Rompus(x)))", "(all x.((Jompus(x) | Gorpus(x) | Yumpus(x))) -> (Smoochus(x) & Dumpus(x) & Rompus(x)))", "all x.((Jompus(x) | Gorpus(x) | Yumpus(x)) -> (Grimpus(x) & Dumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_266", "nl": "Polly is a yumpus.", "fol": "yumpus(Polly)", "prediction": ["all x.(Polly(x) -> Yumpus(x))", "Polly is yumpus.", "all x.(Yumpus(x) -> Polly(x))", "Polly is a yumpus.", "(Yumpus(Polly) & HasYump(Polly))", "all x.(Yumpus(x) -> Polly(x))", "Polly is yumpus.", "all x.(Polly(x) -> Yampus(x))", "(Yumpus(Polly)", "Polly is a yumpus.", "All x.(Polly(x) -> Yumpus(x))", "(Yumpus(Polly)", "all x.((Polly(x) & Yumpus(x)) -> Yampus(x))", "all x.(Yumpus(x) -> Polly(x))", "(Yumpus)", "All x.(Polly(x) -> Yampus(x))"]}
{"id": "prontoqa_validation_267", "nl": "Everything that is a lorpus, a numpus, or a wumpus is a gorpus.", "fol": "all x. ((lorpus(x) | numpus(x) | wumpus(x)) -> gorpus(x))", "prediction": ["all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x y.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(y))", "all x.((MajorLorpus(x) | MajorNumpus(x) | MajorWumpus(x)) -> Gorpus(x))", "all x.(((Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x y.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(y))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "(all x.((Lorpus(x) | Numpus(x) | Wumpus(x))) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Rose(x) | Noxus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Numpus(x) | Wumpus(x)) -> Gorpus(x))", "all x.((Lorpus(x) | Noxus(x) | Wumpus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_validation_268", "nl": "Sally is a lorpus and a dumpus and a rompus.", "fol": "(lorpus(Sally) & dumpus(Sally) & rompus(Sally))", "prediction": ["(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "Sally is a lorpus and a dumpus and a rompus.", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.((Sally(x) & Lorpus(x) & Dumpus(x) & Rompus(x)) -> Lopus(x))", "(Lorpus(s) & Dumpus(s) & Rompus(s))", "Sally is a lorpus and a dumpus and a rompus.", "(Lorpus,Dumpus,Rompus)", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "Sally is a lorpus and a dumpus and a rompus.", "exists x.(Lorpus(x) & Dumpus(x) & Rompus(x))", "(Lorpus(Sally) & Dumpus(Sally) & Rompus(Sally))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))", "all x.(Sally(x) -> (Lorpus(x) & Dumpus(x) & Rompus(x)))"]}
{"id": "prontoqa_validation_269", "nl": "Sally is a gorpus.", "fol": "gorpus(Sally)", "prediction": ["all x.(Sally(x) -> Gorpus(x))", "Sally is Gorpus.", "all x.(Sally(x) -> Gorpus(x))", "Sally is a Gorpus.", "(Gorpus(Sally) & Gorpus(Sally))", "Sally is Gorpus.", "all x.((Sally(x) & Gorpus(x)) -> Gorpus(x))", "all x.(Sally(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Sally(x))", "Sally is a Gorpus.", "all x.(Sally(x) -> Gorpus(x))", "(Gorpus(Sally) & HasGorpa(Sally))", "Sally is gorpus.", "Sally (gorpus)", "Sally is Gorpus(Sally)", "All x.(Sally(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_270", "nl": "Brimpuses are lempuses and zumpuses and grimpuses.", "fol": "all x. (brimpus(x) -> (lempus(x) & zumpus(x) & grimpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x y.((Brimpus(x) & Lempuse(y)) -> (Tompus(x) | Grimpus(x)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpus(y)))", "all x y z.((Brimpus(x) & Lempuse(y) & Zumpuse(z)) -> (Smoothpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpus(x) | Grimpuse(x)))", "all x.(Brimpuse(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "all x.(Brompus(x) -> (Lempuse(x) & Zumpuse(x) & Grimpuse(x)))", "(all x.(Brompus(x) -> Lempuse(x)) & (Zumpus(x) | Grimpus(x))))", "all x y.((Brompus(x) & Lempuse(y)) -> (Tompus(x) | Grimpus(x)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Tompus(y) & Grimpus(y)))", "(all x y.(Brimpus(x) -> Lempuse(x)) & (Zumpus(y) | Grimpus(y)))", "(all x.(Brimpus(x) -> Lempuse(x)) & all y.(Zumpus(y) & All z.(Smoothpus(z))) -> Grimpuse(z)))", "all x.(Brimpus(x) -> (Lempuse(x) | Zumpuse(x) | Grimpuse(x)))", "(all x.(Brompus(x) -> Lempus(x)) & (Tompus(x) | Grimpus(x)))", "all x.(Brompus(x) -> (Lampus(x) & Zumpuses(x) & Grimpuses(x)))"]}
{"id": "prontoqa_validation_271", "nl": "Wren is a brimpus.", "fol": "brimpus(Wren)", "prediction": ["all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus(wren) & Brimpus(wren))", "all x y.((Wren(x) & Brimpus(y)) -> CanBe(x,y))", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus(wren) & BornOf(wren,x))", "(Brumpus(wren) & HasBrimpus(wren,w))", "all x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brimpus)", "All x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))", "(Brumpus)", "all x.(Wren(x) -> Brimpus(x))", "All x.(Wren(x) -> Brimpus(x))", "all x.(Wren(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_272", "nl": "Wren is a dumpus or a vumpus or a grimpus.", "fol": "(dumpus(Wren) | vumpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "(Dumps(Wren) | Vumpus(Wren) | Grimpus(Wren)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "(Dumpus(w) | Vumpus(w) | Grimpus(w)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "(Dumpus,Vumpus,Grimpus)", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "exists x.(Wren(x) & ((Dumpus(x) | Vumpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Dumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumpus(x) | Voompus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Dumps(x) | Vumpus(x) | Grimpus(x)))", "exists x.(Wren(x) & Dumpus(x) & (Vumpus(x) | Grimpus(x)))"]}
{"id": "prontoqa_validation_273", "nl": "Each impus is a yumpus.", "fol": "all x. (impus(x) -> yumpus(x))", "prediction": ["all x.(Impossible(x) -> Yumpus(x))", "all x.(Issue(x) -> Yumpus(x))", "all x.(Impact(x) -> Yumpus(x))", "all x y.((Issue(x) & Yumpus(y)) -> IsStill(x))", "all x.(Impossible(x) -> Yumpus(x))", "all x y.((Issue(x) & Yumpus(y)) -> Issue(x))", "all x.(Issue(x) -> Yampus(x))", "(yumpus)", "all x.(Impact(x) -> Yumpus(x))", "all x.(Impossible(x) -> Yumpus(x))", "exists x.(Impact(x) & Yumpus(x))", "all x.(Issue(x) -> Yampus(x))", "exists x.(Impossible(x) & Yumpus(x))", "exists x.(Impedus(x) & Yampus(x))", "all x.(Issue(x) -> Yumpus(x))", "exists x.(Impossible(x) & Yumpus(x))"]}
{"id": "prontoqa_validation_274", "nl": "Sally is a dumpus, Sally is not a yumpus, and Sally is a brimpus.", "fol": "(dumpus(Sally) & -yumpus(Sally) & brimpus(Sally))", "prediction": ["(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Dumps(x) & Brimpus(z)))", "(all x y z.((Sally(x) & Dumpus(x)) -> (Dumpus(y) & -Yumpus(z))) & ((Sally(x) & Brimpus(x)) -> (Brimpus(x))))", "all x y z.((Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)) -> (Sally(x) & Dumpus(x) & -Yumpus(y) & Brimpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & -Yumpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x) & -Brimpus(x)))", "all x y z.((Sally(x) & Dumpus(y) & Yumpus(z)) -> (-Yumpus(x) & Brimpus(x)))", "(all x y z.((Sally(x) & Dumpus(y)) -> (Dumpus(z) | -Yumpus(z)) | (Brimpus(z) & -Yumpus(z))))", "all x.(Sally(x) -> (Dumps(x) & -Yumpus(x) & Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & all y.(Sally(y) -> -Yumpus(y)) & all z.(Sally(z) -> Brimpus(z))))", "(all x y z.((Sally(x) & Dumpus(x)) -> Dumpus(x)) & ((Sally(y) & -Yumpus(y)) -> Brimpus(z)))", "exists x.(Sally(x) & Dumpus(x) & -Yumpus(x) & Brimpus(x))", "all x y z.((Sally(x) & Dumpus(x) & Sally(y) & Brimpus(z)) -> (-Yumpus(y) & -Yumpus(z)))", "(all x.(Sally(x) -> Dumpus(x)) & (Sally(x) -> -Yumpus(x)) & (Sally(x) -> Brimpus(x)))", "(all x.(Sally(x) -> Dumpus(x)) & (-Yumpus(x)) & (Brimpus(x) -> Brimpus(x)))"]}
{"id": "prontoqa_validation_275", "nl": "Sally is a yumpus, Sally is not an impus, or Sally is an impus.", "fol": "(yumpus(Sally) | -impus(Sally) | impus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impossible(x)))", "(all x.(Sally(x) -> Yumpus(x)) & (-Impossible(x) | Impossible(x))))", "all x y.((Sally(x) & Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "(yumpus(s) | -Impossible(s) | Impossible(s)))", "(yumpus(Sally) | (-Impossible(Sally) | Impossible(Sally))))", "(all x.(Sally(x) -> Yampus(x)) | (-Sally(x) & Impossible(x))))", "all x.(Yumpus(x) | (-Impossible(x) | Impossible(x))))", "all x.(Sally(x) -> (Yumpus(x) | -Impossible(x) | Impossible(x)))", "all x y.((Sally(x) & Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "all x y.((Sally(x) & Yumpus(x)) -> (-Impossible(x) | Impossible(x)))", "exists x.(Yumpus(x) | (-Impossible(x) | Impossible(x))))", "(all x.(Sally(x) -> Yumpus(x)) | (-Impossible(x) | Impossible(x))))", "exists x.(Yumpus(x) | -Impossible(x) | Impossible(x)))", "(all x.(Sally(x) -> Yampus(x)) & (-Sally(x) | IsImpossible(x))))", "exists x.(Yumpus(x) | (-Impossible(x) | Impeccable(x))))"]}
{"id": "prontoqa_validation_276", "nl": "Everything that is a grimpus, a brimpus, or a jompus is a lempus and a dumpus and a lorpus.", "fol": "all x. ((grimpus(x) | brimpus(x) | jompus(x)) -> (lempus(x) & dumpus(x) & lorpus(x)))", "prediction": ["all x.((Smopus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grimpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x y.((Smopus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(y) & Dumpus(y) & Lorpus(y)))", "all x.((Furricolor(x) | Brimcolor(x) | Jomcolor(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x y.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(y) & Dumpus(y) & Lorpus(y)))", "(all x.((Smopus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Rumpus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smokey(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Grumps(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "(all x.((Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Gruppus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Crampus(x) | Brimpus(x) | Jompus(x)) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "(all x.((Grimpus(x) | Brimpus(x) | Jompus(x))) -> (Lempus(x) & Dumpus(x) & Lorpus(x)))", "all x.((Smoothpus(x) | Brimpus(x) | Jompus(x)) -> (Limpus(x) & Dumpus(x) & Loperus(x)))"]}
{"id": "prontoqa_validation_277", "nl": "Sally is a brimpus.", "fol": "brimpus(Sally)", "prediction": ["all x.(Sally(x) -> Brimpus(x))", "Sally is a Brimpus.", "all x.(Brimpus(x) -> Sally(x))", "Sally is a Brimpus.", "Sally is a brimpus.", "(Brimpus(Sally) & Brimpus(Sally))", "all x.(Sally(x) -> Brimpus(x))", "all x.((Sally(x) & Brimpus(x)) -> Brimpus(x))", "all x.(Brimpus(x) -> Sally(x))", "Sally is Brimpus.", "(Brimpus(Sally) & Brimpus(Sally))", "Sally is a Brimpus.", "Sally is brimpus.", "all x.(Sally(x) -> Brimpus(x))", "All x.(Sally(x) -> Brimpus(x))", "All x.(Brumpus(x) -> Sally(x))"]}
{"id": "prontoqa_validation_278", "nl": "Sally is a dumpus.", "fol": "dumpus(Sally)", "prediction": ["Sally is a dumpus.", "all x.(Sally(x) -> Dumpus(x))", "Sally is a dumpus.", "(Dumpus(Sally))", "all x.(Sally(x) -> Dumpus(x))", "all x.((Sally(x) & Dumpus(x)) -> Dumpus(x))", "Sally is a Dumpus.", "(Dumpus(Sally) & Dumpus(Sally))", "(Dumus(Sally) & HasDums(Sally,Sally))", "all x.(Sally(x) -> Dumpus(x))", "Sally is a dumpus.", "Sally is a Dumpus.", "Sally is Dumpus.", "Sally (Dumpus)", "All x.(Sally(x) -> Dumpus(x))", "Sally is a dumpus."]}
{"id": "prontoqa_validation_279", "nl": "Each dumpus is a grimpus, a sterpus, and a gorpus.", "fol": "all x. (dumpus(x) -> (grimpus(x) & sterpus(x) & gorpus(x)))", "prediction": ["all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) & all z.(Gorpus(z)) -> Grimpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterpus(y) -> Gorpus(y)))", "all x.(Dumpus(x) -> (Smooch(x) | Sterpus(x) | Gorpus(x)))", "all x y z.(Dumpus(x) -> (Grimpus(y) | Sterpus(y) | Gorpus(z)))", "(all x.(Dumpus(x) -> Grimpus(x)) & (Sterpus(x) & Gorpus(x)))", "all x.(Dumps(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Dumps(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Dumpus(x) -> (Smokey(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Dumpus(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))", "(all x.(Dumpus(x) -> Grimpus(x)) & all y.(Sterepus(y) -> Gorpus(y)))", "(all x.(Dumpus(x) -> Grimpus(x)) & (Sterpus(x) & Gorpus(x)))", "all x.(Dumpus(x) -> (Grimpus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Dumpus(x) & Grimpus(x) & Sterpus(x) & Gorpus(x))"]}
{"id": "prontoqa_validation_280", "nl": "Wren is a dumpus.", "fol": "dumpus(Wren)", "prediction": ["all x.(Wren(x) -> Dumpus(x))", "Wren is a Dumpus.", "all x.(Wren(x) -> Dumpus(x))", "(Dumpsus(Wren) & HasDumps(Wren))", "(Dumps(Wren) & Dumpus(Wren))", "(Dumpus(Wren))", "all x.(Wren(x) -> Dumpus(x))", "(Dumus(wren) & HasDumus(wren,w))", "(Dumpus(wren) -> Is(wren,w))", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "(Dumpus)", "all x.(Wren(x) -> Dumpus(x))", "all x.(Wren(x) -> Dumpus(x))", "All x.(Wren(x) -> Dumpus(x))", "exists x.(Wren(x) & Dumpus(x))"]}
{"id": "prontoqa_validation_281", "nl": "Wren is a shumpus or a sterpus or a grimpus.", "fol": "(shumpus(Wren) | sterpus(Wren) | grimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "(Shumpus) | Sterpus(Storpus) | Grimpus(Stormpus))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x y.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(y)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Grimpus(x))))", "(all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "exists x.(Wren(x) & ((Shumpus(x) & -Sterpus(x)) | (-Sterpus(x) & -Smooch(x)))))", "all x y.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Grimpus(x)))", "(all x.(Wren(x) -> (Shumpus(x) | Sterepus(x) | Grimpus(x)))", "all x.(Wren(x) -> ((Shumpus(x) | Sterpus(x) | Grimpus(x))))", "all x.(Wren(x) -> (Shumpus(x) | Sterpus(x) | Gruppus(x)))", "exists x.(Wren(x) & ((Shumpus(x) | Sterpus(x)) | Grimpus(x))))"]}
{"id": "prontoqa_validation_282", "nl": "Brimpuses are jompuses.", "fol": "all x. (brimpus(x) -> jompus(x))", "prediction": ["all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brompus(x) -> Jompuse(x))", "all x y.((Brompus(x) & Jompus(y)) -> Has(x,y))", "(Jompuse(brimpus) & Jompuse(brimpus))", "all x y.((Brimpus(x) & Jompuse(y)) -> (Brompus(x) & Jompuse(y)))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brimbus(x) -> Jompuse(x))", "(Jompuse(brimpus) -> Jompuse(brimpus))", "(all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brompus(x) -> Jompuse(x))", "all x.(Brimpuse(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brombus(x) -> Jompuse(x))", "all x.(Brimpus(x) -> Jompus(x))", "all x.(Brimpus(x) -> Jompuse(x))", "all x.(Brombus(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_283", "nl": "Rex is a rompus and a yumpus and a brimpus.", "fol": "(rompus(Rex) & yumpus(Rex) & brimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z)) -> Brimpus(z))))", "all x y z.((Rex(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) & Yumpus(z) & Brimpus(z)))", "(all x.(Rex(x) -> Rompus(x)) & (Yumpus(x) | Brimpus(x))))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "(Rompus(Rex) & Yumpus(Rex) & Brimpus(Rex))", "(all x.(Rex(x) -> Rompus(x)) & all y.(Yumpus(y) & all z.(Brimpus(z) & Y.(Yumpus(z))) -> Brimpus(z)))", "(all x.(Rompus(x) -> Rex)) & (Yumpus(x) -> Rex)) & (Brimpus(x) -> Rex)))", "(Rompus(rex) & Yumpus(y) & Brimpus(rex))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))", "all x y.((Rex(x) & Rompus(y)) -> (Yumpus(x) & Brimpus(x)))", "all x y z.((Rex(x) & Rompus(y) & Yumpus(z)) -> (Rompus(x) & Yampus(z) & Brimpus(z)))", "(all x.(Rompus(x) -> Rex)) & all y.(Yumpus(y) -> Rex(y))) & all z.(Brimpus(z) -> Rex(z)))", "all x.(Rex(x) -> (Rompus(x) | Yumpus(x) | Brimpus(x)))", "exists x.(Rompus(x) & Yampus(x) & Brimpus(x))", "all x.(Rex(x) -> (Rompus(x) & Yumpus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_284", "nl": "Rex is a brimpus or a jompus or a gorpus.", "fol": "(brimpus(Rex) | jompus(Rex) | gorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(Brimpus(rex) | Jompus(rex) | Gorpus(rex)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Rex(x) -> Brimpus(x)) | (Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(Brimpus) | Jompus(x) | Gorpus(x))", "(Brimpus(rex) | Jompus(rex) | Gorpus(rex)))", "exists x.(Rex(x) & ((Brimpus(x) & -Brimpus(x)) | (-Brimpus(x) & Jompus(x)) | (-Brompus(x) & Gorpus(x)))))", "all x y.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "(all x.(Rex(x) -> Brimpus(x)) | (Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> (Brumpus(x) | Jompus(x) | Gorpus(x)))", "all x.(Rex(x) -> ((Brimpus(x) | Jompus(x) | Gorpus(x))))", "all x.(Rex(x) -> (Brimpus(x) | Jompus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_285", "nl": "Everything that is a dumpus and a sterpus and a brimpus is a wumpus.", "fol": "all x. ((dumpus(x) & sterpus(x) & brimpus(x)) -> wumpus(x))", "prediction": ["all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y.((Dumpus(x) & Sterpus(y) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y z.((Dumpus(x) & Sterpus(y) & Brimpus(z) & Has(x,y)) -> Wumpus(x))", "(all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "(all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x y.((Dumpus(x) & Sterpus(y) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumps(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))", "all x.((Dumpus(x) & Sterpus(x) & Brimpus(x)) -> Wumpus(x))"]}
{"id": "prontoqa_validation_286", "nl": "Alex is a dumpus.", "fol": "dumpus(Alex)", "prediction": ["all x.(Alex(x) -> Dumpus(x))", "Alex is a Dumpus.", "all x.(Alex(x) -> Dumpus(x))", "Alex is a dumpus.", "(Dumpus(Alex))", "Alex is Dumpus.", "all x.(Alex(x) -> Dumpus(x))", "Alex is a Dumpus.", "Alex is Dumpus(Alex)", "(Dumpus(Alex))", "(Dumus(Alex) & HasDums(Alex))", "Alex is a dumpus.", "all x.(Alex(x) -> Dumpus(x))", "All x.(Alex(x) -> Dumpus(x))", "all x.(Alex(x) -> Dumpus(x))", "All x.(Alex(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_287", "nl": "Alex is a sterpus.", "fol": "sterpus(Alex)", "prediction": ["all x.(Alex(x) -> Sterpus(x))", "Alex is sterpus.", "all x.(Sterepus(x) -> Alex(x))", "Alex is a sterpus.", "(Sterepus(Alex) & Sterpus(Alex))", "all x.(Alex(x) -> Sterpus(x))", "Alex is Sterpus.", "all x.(Sterepus(x) -> Alex(x))", "Alex is sterpus.", "all x.(Sterepus(x) -> Sterpus(x))", "all x.(Alex(x) -> Sterpus(x))", "(Sterpus)", "Alex is Sterpus.", "All x.(Alex(x) -> Sterepus(x))", "all x.(Sterpus(x) -> Alex(x))", "All x.(Alex(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_288", "nl": "Alex is a brimpus.", "fol": "brimpus(Alex)", "prediction": ["all x.(Alex(x) -> Brimpus(x))", "Alex is a brimpus.", "all x.(Alex(x) -> Brimpus(x))", "Alex is a Brimpus.", "Alex is brimpus.", "all x.(Alex(x) -> Brimpus(x))", "(Brimpus(Alex) & HasBrimpus(Alex))", "all x.(Alex(x) -> Brimpus(x))", "Alex is a brimpus.", "(Brimpus(Alex) & Brimpus(Alex))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "All x.(Alex(x) -> Brimpus(x))", "all x.(Alex(x) -> Brimpus(x))", "all x.(Brimpus(x) -> Alex(x))", "All x.(Alex(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_289", "nl": "Alex is a zumpus, a wumpus, or a rompus.", "fol": "(zumpus(Alex) | wumpus(Alex) | rompus(Alex))", "prediction": ["all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "(Tompus(Alex) | Wumpus(Alex) | Rompus(Alex))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x y.((Alex(x) & Zumpus(y)) | (Wumpus(y) | Rompus(y))))", "(Tompus,Wumpus,Rompus)", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "(Tompus(Alex) | Wumpus(Alex) | Rompus(Alex))", "(Tompus,Wumpus,Rompus)", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "exists x.(Alex(x) & Tompus(x) | Wumpus(x) | Rompus(x))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Zumpus(x) | Wumpus(x) | Rompus(x)))", "all x.(Alex(x) -> (Tompus(x) | Wumpus(x) | Rompus(x)))", "exists x.(Alex(x) & (Zumpus(x) | Wompus(x) | Romanus(x)))"]}
{"id": "prontoqa_validation_290", "nl": "Everything that is a numpus or a jompus or a vumpus is a rompus.", "fol": "all x. ((numpus(x) | jompus(x) | vumpus(x)) -> rompus(x))", "prediction": ["all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x y.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(y))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.(((Nompus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "(all x.((Nompus(x) | Jompus(x) | Vumpus(x))) -> Rompus(x))", "all x y.((Nompus(x) | Jompus(x) | Vumpus(x)) -> Rompus(y))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voompus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vampus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vacus(x)) -> Rompus(x))", "all x.((Nompus(x) | Jompus(x) | Voluptus(x)) -> Rompus(x))", "all x.((Numpus(x) | Joompus(x) | Vampus(x)) -> Rompus(x))", "all x.((Numpus(x) | Jompus(x) | Vumpus(x)) -> Rompus(x))"]}
{"id": "prontoqa_validation_291", "nl": "Wren is a yumpus, a vumpus, and a shumpus.", "fol": "(yumpus(Wren) & vumpus(Wren) & shumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "(Yumpus(Wren) & Vumpus(Wren) & Humpus(Wren))", "(all x.(Wren(x) -> Yumpus(x)) & all y.(Wren(y) -> Vumpus(y)) & all z.(Wren(z) -> Humpus(z))))", "(yumpus) & vumpus(y) & shumpus(z))", "(Yumpus(w) | Vumpus(w) | Humpus(w)))", "all x y z.((Wren(x) & Yumpus(y) & Vumpus(z) & Humpus(z)) -> (Yumpus(x) | Vumpus(z) | Humpus(z)))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "(yumpus) | vumpus(y) | shumpus(y))", "all x y.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(y)))", "(Yumpus,Vumpus,Shumpus)", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))", "all x.(Wren(x) -> (Yumpus(x) & Vumpus(x) & Humpus(x)))", "exists x.(Wren(x) & Yumpus(x) & Vampus(x) & Humpus(x))", "exists x.(Wren(x) & Yampus(x) & Vumpus(x) & Humpus(x))", "all x.(Wren(x) -> (Yumpus(x) | Vumpus(x) | Humpus(x)))"]}
{"id": "prontoqa_validation_292", "nl": "Wren is a rompus.", "fol": "rompus(Wren)", "prediction": ["all x.(Wren(x) -> Rompus(x))", "(Rompus(Wren) & -Rompus(Wren))", "all x.(Wren(x) -> Rompus(x))", "Wren is a rompus.", "(Rompus(Wren) & -Rompus(Wren))", "all x y.((Wren(x) & Rompus(y)) -> Raccoon(x))", "all x.(Wren(x) -> Rompus(x))", "(Rompus(Wren) & Species(Wren,Rompus))", "all x.(Rompus(x) -> Wren(x))", "(Rompus(Wren) & HasRompus(Wren))", "all x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "(Rompus(Wren)", "All x.(Wren(x) -> Rompus(x))", "all x.(Wren(x) -> Rompus(x))", "All x.(Wren(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_293", "nl": "Each numpus is not a shumpus.", "fol": "all x. (numpus(x) -> -shumpus(x))", "prediction": ["all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "(all x.(Numpus(x) -> -Shumpus(x)))", "(-Shumpus(nump))", "all x.(Numpus(x) -> -Shumpus(x))", "exists x.(numpus(x) & -Shumpus(x))", "all x y.((Numpus(x) & Humpus(y)) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "(-Shumpus(nump))", "all x.(Nompus(x) -> -Shumpus(x))", "exists x.(numpus(x) & -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))", "all x.(Nompus(x) -> -Shumpus(x))", "all x.(Numpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_validation_294", "nl": "Everything that is a lempus, a yumpus, or a brimpus is a shumpus.", "fol": "all x. ((lempus(x) | yumpus(x) | brimpus(x)) -> shumpus(x))", "prediction": ["all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.(((Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x y.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(y))", "all x.((Limpus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.(Shumpus(x) -> (Lempus(x) | Yumpus(x) | Brimpus(x)))", "all x.(((Lempus(x) | Yumpus(x) | Brimpus(x))) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "(all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yampus(x) | Brimpus(x)) -> Shumpus(x))", "all x y.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(y))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lempus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Lampus(x) | Yumpus(x) | Brimpus(x)) -> Humpus(x))", "all x.((Limpus(x) | Yampus(x) | Brimpus(x)) -> Shumpus(x))"]}
{"id": "prontoqa_validation_295", "nl": "Rex is a numpus and a gorpus and a rompus.", "fol": "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & All z.(Rompus(z))) -> Nompus(x)))", "all x y.((Rex(x) & Numpus(y)) -> (Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "all x y z.((Rex(x) & Numpus(y) & Gorpus(z)) -> (Numpus(x) & Rompus(x)))", "(numpus(Rex) & gorpus(Rex) & rompus(Rex))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "(Numpus(rex) & Gorpus(rex) & Rompus(rex))", "(all x.(Rex(x) -> Numpus(x)) & all y.(Gorpus(y) & All z.(Rompus(z)) -> Rompus(z))))", "all x y.((Rex(x) & Numpus(x) & Gorpus(y)) -> (Rompus(x) & Rompus(y)))", "(numpus(Rex) & Gorpus(Rex) & Rompus(Rex))", "(all x.(Rex(x) -> Numpus(x)) & (Gorpus(x) & Rompus(x)))", "all x.(Rex(x) -> (numpus(x) & gorpus(x) & rompus(x)))", "all x.(Rex(x) -> (Numpus(x) & Gorpus(x) & Rompus(x)))", "exists x.(Rex(x) & Numpus(x) & Gorpus(x) & Rompus(x))"]}
{"id": "prontoqa_validation_296", "nl": "Everything that is a wumpus, a jompus, and a tumpus is a zumpus and a sterpus and a brimpus.", "fol": "all x. ((wumpus(x) & jompus(x) & tumpus(x)) -> (zumpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x y.((Wumpus(x) & Jompus(y) & Tumpus(x)) -> (Tompus(y) & Sterpus(y) & Brimpus(y)))", "all x y z.((Wumpus(x) & Jompus(y) & Tumpus(z) & Tompus(x) & Sterpus(x) & Brimpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.(Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x y z.((Wumpus(x) & Jompus(y) & Tumpus(z) & Toumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "(all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> Zumpus(x)) & all y.((Sterpus(y) & brimpus(y)) -> Brimpus(y)))", "(all x.((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x y.((Wumpus(x) & Jompus(y) & Tumpus(x)) -> (Tompus(y) & Sterpus(y) & Brimpus(y)))", "all x.((Wumpus(x) & Jompus(x) & Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "(all x.((Wumpus(x) | Jompus(x) | Tumpus(x))) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Tompus(x) & Sterpus(x) & Brimpus(x)))", "all x.((Wumpus(x) | Jompus(x) | Tumpus(x)) -> (Zumpus(x) & Sterepus(x) & Brimpus(x)))"]}
{"id": "prontoqa_validation_297", "nl": "Max is a wumpus.", "fol": "wumpus(Max)", "prediction": ["(Wumpus(Max) & -Wumpus(Max))", "all x.(Max(x) -> Wumpus(x))", "Max is a wumpus.", "-Wumpus(Max)", "all x.(Wumpus(x) -> Max(x))", "(Wumpus(Max))", "(Wumpus(Max) & HasWumpus(Max))", "Max is a Wumpus.", "Max is a wumpus.", "all x.(Wumpus(x) -> Max(x))", "(Wumpus(Max) & Wumpus(Max))", "all x.(Wumpus(x) -> Max(x))", "(Wumpus(Max))", "Max is a wumpus.", "All x.(Max(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Max(x))"]}
{"id": "prontoqa_validation_298", "nl": "Max is a jompus.", "fol": "jompus(Max)", "prediction": ["all x.(Max(x) -> Jompus(x))", "Max is a Jompus.", "(Jumpus(Max) & Jompus(Max))", "(Jompus(Max) & HasJimmy(Max))", "all x.(Max(x) -> Jompus(x))", "all x.(Jompus(x) -> Max(x))", "Max is a Jompus.", "Max is jompus.", "-Jompus(Max)", "(Jompus(Max) -> HasJimmy(Max))", "(Jimpus(Max) & Jompus(Max))", "all x.(Max(x) -> Jompus(x))", "all x.(Jumpus(x) -> Max(x))", "(Jumpus(Max) -> Jompus(Max))", "Max is Jompus.", "All x.(Max(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_299", "nl": "Max is a tumpus.", "fol": "tumpus(Max)", "prediction": ["all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max) & HasTump(Max))", "Max is a tumpus.", "Max isTumpus(Max)", "all x.(Max(x) -> Tumpus(x))", "-Tumpus(Max)", "Max is tumpus.", "(Tumpus(Max) & HasTump(Max))", "all x.(Matthew(x) -> Tumpus(x))", "all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max) -> Tumpus(Max))", "all x.(Tumpus(x) -> Max(x))", "all x.(Max(x) -> Tumpus(x))", "(Tumpus(Max)", "All x.(Max(x) -> Tumulus(x))", "(Tumpus(Max)"]}
{"id": "prontoqa_validation_300", "nl": "Max is a zumpus.", "fol": "zumpus(Max)", "prediction": ["all x.(Max(x) -> Zumpus(x))", "all x.(Max(x) -> Zumpus(x))", "(Zumpus(Max) & Has(Max))", "Max is zumpus.", "Max is a zumpus.", "all x.(Max(x) -> Zumpus(x))", "-Zombie.", "Max ist zumpus.", "(Zumpus(Max))", "all x.(Zumpus(x) -> Max(x))", "(Tompus(max) -> Zumpus(max))", "(Zumpus(Max) & Has(Max))", "all x.(Max(x) -> Zumpus(x))", "Max ist zumpus.", "All x.(Max(x) -> Zumpus(x))", "All x.(Max(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_301", "nl": "Every shumpus is a tumpus, a yumpus, and a lempus.", "fol": "all x. (shumpus(x) -> (tumpus(x) & yumpus(x) & lempus(x)))", "prediction": ["all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) -> Lempus(y)))", "all x y z.((Shumpus(x) & Tumpus(y) & Yumpus(z)) -> (Tumpus(x) | Lempus(z)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) & Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "(all x.(Shumpus(x) -> Tumpus(x)) & all y.(Yumpus(y) -> Lempus(y)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yampus(x) | Lempus(x)))", "(all x.(Shumpus(x) -> Tumpus(x)) & (Yumpus(x) & Lempus(x)))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))", "exists x.(Shumpus(x) & Tumpus(x) & Yumpus(x) & Lempus(x))", "all x.(Shumpus(x) -> (Tumpus(x) & Yampus(x) & Lempus(x)))", "exists x.(Shumpus(x) & Tumpus(x) & Yampus(x) & Lempus(x))", "all x.(Shumpus(x) -> (Tumpus(x) | Yumpus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_302", "nl": "Alex is a shumpus.", "fol": "shumpus(Alex)", "prediction": ["all x.(Alex(x) -> Humpus(x))", "Alex is a shumpus.", "Alex is shumpus.", "all x.(Alex(x) -> Humpus(x))", "Alex is a shumpus.", "Alex is Shumpus(Alex)", "all x.(Alex(x) -> Humpus(x))", "(Shumpus(Alex) & HasShump(Alex))", "all x.(Alex(x) -> Humptus(x))", "Alex is shumpus.", "all x.(Shumpus(x) -> Alex(x))", "(Shumpus(Alex) & HasSumpus(Alex))", "all x.(Alex(x) -> Humpus(x))", "All x.(Alex(x) -> Shumpus(x))", "all x.(Shumpus(x) -> Alex(x))", "All x.(Alex(x) -> Humptious(x))"]}
{"id": "prontoqa_validation_303", "nl": "Alex is a tumpus or a dumpus or a brimpus.", "fol": "(tumpus(Alex) | dumpus(Alex) | brimpus(Alex))", "prediction": ["all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(Tumpus(Alex) | Dumpus(Alex) | Brimpus(Alex))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(Tumpus,Tumpus(Alex) | Dumpus,Brimpus))", "all x y.((Alex(x) & Tumpus(x) & Dumpus(y)) | Brimpus(x))", "(Tumpus(Alex) | Dumpus(Alex) | Brimpus(Alex))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "(all x.(Alex(x) -> Tumpus(x)) | (Dumpus(x) | Brimpus(x))))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> ((Tumpus(x) | Dumpus(x) | Brimpus(x))))", "exists x.(Alex(x) & ((Tumpus(x) | Dumpus(x)) | Brimpus(x))))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "all x.(Alex(x) -> (Tumpus(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Alex(x) & (Tumpus(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_304", "nl": "Every sterpus is not a tumpus.", "fol": "all x. (sterpus(x) -> -tumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "(all x.(Sterpus(x) -> -Tumpus(x)))", "all x.(Steerpus(x) -> -Tumpus(x))", "-Tumpus(sterps)", "(all x.(Steerpus(x) -> -Tumpus(x)))", "all x.(Sterpus(x) -> -Tumpus(x))", "-Tumpus(sterp)", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Strohpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Sterepus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "all x.(Steerpus(x) -> -Tumpus(x))", "all x.(Sterpus(x) -> -Tumpus(x))", "exists x.(Steerpus(x) & -Tumpus(x))"]}
{"id": "prontoqa_validation_305", "nl": "Every lorpus is a tumpus.", "fol": "all x. (lorpus(x) -> tumpus(x))", "prediction": ["all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "exists x y.(Lorpus(x) & Tumpus(y))", "all x.(Lorph(x) -> Tumpus(x))", "(all x.(Lorpus(x) -> Tumpus(x)))", "all x.exists y.(Lorpus(x) & Tumpus(y))", "all x.(Lorpus(x) -> Tumpus(x))", "exists x.(lorpus(x) & Tumpus(x))", "exists x y.(Lorpus(x) & Tumpus(y))", "all x.(Lorph(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumulus(x))", "all x.(Larp(x) -> Tumpus(x))", "all x.(Lorpus(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_306", "nl": "Wren is a sterpus.", "fol": "sterpus(Wren)", "prediction": ["all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "(Sterpus(Wren) & Sterpus(Wren))", "All x y.((Wren(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wren(x) -> Sterpus(x))", "(Sterpus(wren) & Sterpus(wren))", "all x.((Wren(x) & Sterpus(x)) -> Sterpus(x))", "(Sterpus(wren) & Sterpus(wren) & Sterpus(w))", "(Stereose(Wren))", "all x.(Wren(x) -> Sterpus(x))", "all x.(Wren(x) -> Sterepus(x))", "(Sterpus)", "all x.(Wren(x) -> Sterpus(x))", "All x.(Wren(x) -> Sterpus(x))", "All x.(Wren(x) -> Sterepus(x))", "all x.(Wren(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_307", "nl": "Wren is a grimpus or Wren is not a lorpus or Wren is a lempus.", "fol": "(grimpus(Wren) | -lorpus(Wren) | lempus(Wren))", "prediction": ["all x.((Wren(x) & (Grimpus(x) | -Lorpus(x) | Lempus(x))) -> Grimpus(x))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "((Wren(w) & Grimpus(w)) | (-Lorpus(w) & Lempus(w))))", "(exists x.(Wren(x) & Grimpus(x)) | exists y.(Wren(y) & -Lorpus(y))) | exists z.(Wren(z) & Lempus(z))))", "all x y.((Wren(x) & Grimpus(x)) | (-Lorpus(x) | Lempus(y))))", "all x.(Wren(x) -> (Grimpus(x) | -Lorpus(x) | Lempus(x)))", "all x y z.((Wren(x) & Grimpus(x) & (Wren(y) -> -Lorpus(y)) | (Wren(z) -> Lempus(z))))", "((Wren(w) & Grimpus(w)) | (-Lorpus(w) | Lempus(w))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "all x.(Wren(x) -> ((Grimpus(x) | -Lorpus(x) | Lempus(x))))", "all x y.((Wren(x) & Grimpus(x)) | (-Lorpus(y) | Lempus(y))))", "(all x.(Wren(x) -> Grimpus(x)) | (-Lorpus(x) | Lempus(x))))", "(all x.(Wren(x) -> Grimpus(x)) & (-Lorpus(x) | Lempus(x))))", "all x.(Wren(x) -> (Grimpus(x) | -Lorpus(x) | Lempus(x)))", "exists x.(Wren(x) & ((Grimpus(x) | -Lorpus(x)) | (Lempus(x)))))", "all x.(Wren(x) -> (Smokey(x) | -Lorpus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_308", "nl": "Every gorpus is a tumpus.", "fol": "all x. (gorpus(x) -> tumpus(x))", "prediction": ["all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x y.((Gorpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorph(x) & Tumpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "all x.(Gorpus(x) -> Tumulus(x))", "exists x.(Gorpus(x) & Tumulus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorpus(x) & Humpus(x))", "all x.(Gorpus(x) -> Tumpus(x))", "exists x.(Gorpus(x) & Tumpus(x))"]}
{"id": "prontoqa_validation_309", "nl": "Sally is not a tumpus and Sally is a lempus and Sally is a vumpus.", "fol": "(-tumpus(Sally) & lempus(Sally) & vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "all x.(Sally(x) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) & Vumpus(x)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Lempus(y) -> Vumpus(y)))", "(-Tumpus(Sally) & Lempus(Sally) & Vumpus(Sally))", "all x y.((Sally(x) & Tumpus(y) & Lempus(y)) -> (-Tumpus(x) & Vumpus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Lempus(y) & Vumpus(y)))", "all x.(Sally(x) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x y.(Tumpus(x) -> -Tumpus(x)) & (Lempus(y) -> Vumpus(y)))", "exists x.(Sally(x) & -Tumpus(x) & Lempus(x) & Vumpus(x))", "all x y.((Sally(x) & Tumpus(y) & Lempus(y)) -> (-Tumpus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & (Lempus(x) & Vumpus(x)))", "all x y z.((Sally(x) & Tumpus(y) & Lempus(z)) -> (-Tumpus(x) & Lempus(x) & Vumpus(x)))", "(all x.(Sally(x) -> -Tumpus(x)) & all y.(Sally(y) -> Lempus(y)) & all z.(Sally(z) -> Vumpus(z))))"]}
{"id": "prontoqa_validation_310", "nl": "Sally is a tumpus or Sally is a lorpus or Sally is not a gorpus.", "fol": "(tumpus(Sally) | lorpus(Sally) | -gorpus(Sally))", "prediction": ["all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (Sally(x) -> -Gorpus(x))))", "((Sally(s) & Tumpus(s)) | (Sally(s) & Lorpus(s)) | (Sally(s) & -Gorpus(s))))", "all x y.((Sally(x) & Tumpus(x)) | (Lorpus(x) | -Gorpus(y))))", "((Sally(Sally) & Tumpus(Sally)) | (Sally(Sally) & Lorpus(Sally)) | (Sally(Sally) & -Gorpus(Sally))))", "(exists x.(Sally(x) & Tumpus(x)) | exists y.(Lorpus(y) & -Gorpus(y))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Lorpus(x) | -Gorpus(x))))", "all x.(Sally(x) -> ((Tumpus(x) | Lorpus(x) | -Gorpus(x))))", "all x.((Sally(x) & (Tumpus(x) | Lorpus(x) | -Gorpus(x))) -> (Tumpus(x) | Lorpus(x)))", "all x y.((Sally(x) & Tumpus(x)) | (Lorpus(x) | -Gorpus(y))))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))", "(all x.(Sally(x) -> Tumpus(x)) | (Sally(x) -> Lorpus(x)) | (-Sally(x) -> Gorpus(x))))", "exists x.(Sally(x) & ((Tumpus(x) & Sally(x)) | (Lorpus(x) & -Gorpus(x)))))", "exists x.(Tumpus(x) | Lorpus(x) | -Gorpus(x))", "all x.(Sally(x) -> (Tumpus(x) | Lorpus(x) | -Gorpus(x)))"]}
{"id": "prontoqa_validation_311", "nl": "Numpuses are yumpuses, vumpuses, and gorpuses.", "fol": "all x. (numpus(x) -> (yumpus(x) & vumpus(x) & gorpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "(Yumpuses(n) | Vampuses(n) | Gorpuses(n)))", "all x y z.((Numpuse(x) & Yumpus(y) & Vampus(z)) -> (Yumpus(y) | Gorpus(z)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "(all x.(Numpuse(x) -> (Yumpus(x) | Vampuse(x) | Gorpus(x)))", "all x y.((Numpuse(x) & Yumpuse(y)) -> (Vumpuse(y) | Gorpuse(y)))", "(all x.(Numpuse(x) -> Yumpuse(x)) & all y.(Vumpuse(y) -> Gorpuse(y)))", "(all x.(Numpuse(x) -> Yumpuse(x)) & all y.(Vampuse(y) & all z.(Gorpuse(z) & Yumpus(y)) -> Gorpuse(z))))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "(yumpuses(y) | vumpuses(y) | Gorpuses(y))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpus(x) | Vumpuse(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vumpus(x) | Gorpus(x)))", "all x.(Numpus(x) -> (Yumpus(x) | Vampus(x) | Gorpus(x)))", "all x.(Numpuse(x) -> (Yumpuse(x) | Vampuse(x) | Gorpuse(x)))"]}
{"id": "prontoqa_validation_312", "nl": "Rex is a grimpus, Rex is not a gorpus, and Rex is a shumpus.", "fol": "(grimpus(Rex) & -gorpus(Rex) & shumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))", "(all x y z.((Rex(x) & Grimpus(y)) -> Grimpus(x)) & ((Rex(z) & -Gorpus(z))) -> Humpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & (Shumpus(x) | Grimpus(x))))", "all x.(Rex(x) -> (Grimpus(x) | -Gorpus(x) | Humpus(x)))", "(all x y z.((Rex(x) & Grimpus(y)) -> (Grimpus(z) & -Gorpus(z)) & ((Rex(x) & Humpus(x)) -> (Shumpus(x))))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (Smoothpus(x) | Shumpus(x)))", "all x y z.((Rex(x) & Grimpus(x) & Rex(y) & Gorpus(z)) -> (Shumpus(x) & Grimpus(y) & -Gorpus(y) & Shumpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "(all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> Grimpus(x)) & ((Rex(x) & -Gorpus(x)) -> Humpus(x)))", "(all x.(Rex) -> Grimpus(x)) & (Rex(x) -> -Gorpus(x)) & (Rex(x) -> Humpus(x)))", "all x.(Rex(x) -> (Grimpus(x) | -Gorpus(x) | Humpus(x)))", "(all x.(Rex,Grimpus) -> (Grimpus)) & (-Gorpus(Rex) -> Shumpus(Rex)))", "all x y z.((Rex(x) & Grimpus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))", "(all x.(Rex(x) -> Grimpus(x)) & (-Gorpus(x) & (Shumpus(x))))", "all x y z.((Rex(x) & Grumpus(y) & Gorpus(z)) -> (Grimpus(x) & -Gorpus(y) & Humpus(z)))"]}
{"id": "prontoqa_validation_313", "nl": "Rex is not a numpus.", "fol": "-numpus(Rex)", "prediction": ["Rex is not Numpus(x)", "(-numpus(Rex))", "all x.(Rex(x) -> -Numpus(x))", "-Numpus(Rex)", "Rex is not a Numpus.", "Rex is not Numpus(x)", "(-numpus(Rex))", "all x.(Rex(x) -> -Numpus(x))", "(-Numpus(Rex))", "Rex -Numpus(Rex)", "-Numpus(Rex)", "all x.(Rex(x) -> -Numpus(x))", "Rex is not Numpus.", "-Numpus(Rex)", "all x.(Rex(x) -> -Numpus(x))", "(-numpus(Rex))"]}
{"id": "prontoqa_validation_314", "nl": "Each yumpus is not a wumpus.", "fol": "all x. (yumpus(x) -> -wumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "(-Wumpus(y))", "(-Wumpus(y) & Yampus(z))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Yumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x y.((Yumpus(x) & Wumpus(y)) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "all x.(Yumpus(x) -> -Wumpus(x))", "exists x.(Yumpus(x) & -Wumpus(x))", "exists x.(yumpus(x) & -Wumpus(y))", "exists x.(Yumpus(x) & -Wumpus(x))"]}
{"id": "prontoqa_validation_315", "nl": "Fae is a yumpus.", "fol": "yumpus(Fae)", "prediction": ["all x.(Fae(x) -> Yumpus(x))", "(Yumpus(Fae) & HasYump(Fae))", "Fae is yumpus.", "-Yumpus(Fae)", "all x.(Fae(x) -> Yampus(x))", "(Yumpus(Fae) & HasYump(Fae))", "all x.(Fae(x) -> Yumpus(x))", "(Yumpus(fee) & Yampus(fee))", "(Yumpus(Fae))", "all x.(Fae(x) -> Yampus(x))", "all x.(Yumpus(x) -> Fae(x))", "(Yumpus)", "All x.(Fae(x) -> Yumpus(x))", "all x.(Fae(x) -> Yumpus(x))", "(Yumpus)", "exists x.(Fae(x) & Yumpus(x))"]}
{"id": "prontoqa_validation_316", "nl": "Fae is a vumpus or Fae is a wumpus or Fae is not a tumpus.", "fol": "(vumpus(Fae) | wumpus(Fae) | -tumpus(Fae))", "prediction": ["(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "((Fae(f) & Vumpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))", "all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x)))", "(exists x.(Fae(x) & (Vumpus(x) | Wumpus(x) | -Tumpus(x))))", "all x y.((Fae(x) & Vumpus(x)) | (Fae(y) & Wumpus(y)) | (Fae(y) & -Tumpus(y))))", "all x y z.((Fae(x) & Vumpus(x) & Fae(y) & Wumpus(y) & -Tumpus(z)) -> (Vumpus(x) | Wumpus(y) | Fae(y)))", "all x.(Fae(x) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "((Fae(f) & Vumpus(f)) | (Fae(f) & Wumpus(f)) | (Fae(f) & -Tumpus(f))))", "all x.(Fae(x) -> ((Vumpus(x) | Wumpus(x)) | -Tumpus(x)))", "(all x.(Fae(x) -> Vumpus(x)) | (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "(all x.(Fae(x) -> Vumpus(x)) & (Fae(x) -> Wumpus(x)) | (Fae(x) -> -Tumpus(x))))", "(exists x.(Fae(x) & (Vimpus(x) | Wumpus(x) | -Tumpus(x))))", "all x.(Fae(x) -> (Vumpus(x) | Wumpus(x) | -Tumpus(x)))", "exists x.(Fae(x) & ((Vumpus(x) | Wumpus(x)) | -Tumpus(x)))", "all x.(Fae(x) -> (Vimpus(x) | Wumpus(x) | -Tumpus(x)))", "exists x.(Fae(x) & ((Vimpus(x) | Wumpus(x)) | -Tumpus(x)))"]}
{"id": "prontoqa_validation_317", "nl": "Everything that is a zumpus, a brimpus, or a numpus is a rompus, a lorpus, and a lempus.", "fol": "all x. ((zumpus(x) | brimpus(x) | numpus(x)) -> (rompus(x) & lorpus(x) & lempus(x)))", "prediction": ["all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(y) | Lorpus(y) | Lampus(y)))", "(all x.((Tompus(x) | Brimpus(x) | Numpus(x))) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "(all x.((Tompus(x) | Brimpus(x) | Numpus(x))) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(y) | Lorpus(y) | Lempus(y)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lampus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Nomus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x y.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(y) | Lorpus(y) | Lempus(y)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Zumpus(x) | Brimpus(x) | Nomus(x)) -> (Rompus(x) | Lorpus(x) | Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (Rompus(x) & Lorpus(x) & Lempus(x)))", "all x.((Tompus(x) | Brimpus(x) | Numpus(x)) -> (rompus(x) | lorpus(x) | lempus(x)))"]}
{"id": "prontoqa_validation_318", "nl": "Sam is a numpus.", "fol": "numpus(Sam)", "prediction": ["all x.(Sam(x) -> Numpus(x))", "Sam is Numpus(Sam)", "all x.(Sam(x) -> Numpus(x))", "(Numpus(Sam) & Numpus(Sam))", "Sam is Numpus(sam)", "Sam is a Numpus.", "(numpus(Sam) & HasNums(Sam))", "(Numpus(Sam) & HasNums(Sam,Sam))", "all x.(Sam(x) -> Numpus(x))", "Sam is Numpus.", "(Numpus(sam) & HasNum(sam))", "all x.(Sam(x) -> Numpus(x))", "(Numpus(sam) & Numpus(sam) & HasNums(sam))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))", "all x.(Sam(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_319", "nl": "Sam is a lempus.", "fol": "lempus(Sam)", "prediction": ["all x.(Sam(x) -> Lempus(x))", "Sam is a lempus.", "all x.(Sam(x) -> Lempus(x))", "all x.(Lempus(x) -> Sam(x))", "(Lempus(Sam) & HasLemp(Sam,Sam))", "Sam is a lempus.", "all x.(Sam(x) -> Lempus(x))", "Sam is Lempus.", "(Lempus(Sam) & Lempus(Sam))", "all x.(Lempus(x) -> Sam(x))", "(Lempus(sam) & HasLempics(sam,sam))", "all x.(Sam(x) -> Lempus(x))", "(Lempus(sam) -> Lempus(sam,sam))", "all x.(Lempus(x) -> Sam(x))", "all x.(Sam(x) -> Lempus(x))", "All x.(Sam(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_320", "nl": "Everything that is a wumpus or a zumpus or a grimpus is a jompus and a gorpus and a lempus.", "fol": "all x. ((wumpus(x) | zumpus(x) | grimpus(x)) -> (jompus(x) & gorpus(x) & lempus(x)))", "prediction": ["all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x y.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(y) & Gorpus(y) & Lempus(y)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x y.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(y) & Gorpus(y) & Lempus(y)))", "(all x.((Wumpus(x) | Zumpus(x) | Grimpus(x))) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.(Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "(all x.((Wumpus(x) | Zumpus(x) | Grimpus(x))) -> JompusAndGorpusAndLempus(x))", "all x.((Wumpus(x) | Zumpus(x) | Grappus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x y.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(y) & Gorpus(y) & Lempus(y)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zurpus(x) | Grumpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jompus(x) & Gorpus(x) & Lempus(x)))", "all x.((Wumpus(x) | Zumpus(x) | Grimpus(x)) -> (Jimpus(x) & Gorpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_321", "nl": "Alex is a grimpus.", "fol": "grimpus(Alex)", "prediction": ["all x.(Alex(x) -> Grimpus(x))", "Alex is a Grimpus.", "all x.(Alex(x) -> Grimpus(x))", "Alex is a Grimpus.", "Alex is grimpus.", "all x.(Alex(x) -> Grimpus(x))", "all x.(Alex(x) -> Grimpus(x))", "(Grimpus(Alex))", "all x.(Alex(x) -> Gruppus(x))", "(Grimpus(Alex) & Grimpus(Alex))", "Alex is Grimpus.", "Alex is a Grimpus.", "all x.(Smoothpus(x) -> Alex(x))", "all x.(Alex(x) -> Grimpus(x))", "All x.(Alex(x) -> Grimpus(x))", "All x.(Alex(x) -> Gruppus(x))"]}
{"id": "prontoqa_validation_322", "nl": "Alex is a gorpus.", "fol": "gorpus(Alex)", "prediction": ["all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "Alex is Gorpus.", "Alex is Gorpus(Alex)", "all x.(Alex(x) -> Gorpus(x))", "Alex is a Gorpus.", "Alex is gorpus.", "all x.(Alex(x) -> Gorpus(x))", "(Gorpus(Alex) & HasGorpa(Alex))", "Alex is Gorpus(Alex)", "(Gorpus(Alex) & Gorpus(Alex))", "All x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))", "All x.(Alex(x) -> Gorpus(x))", "all x.(Alex(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_323", "nl": "Every yumpus is a sterpus and a jompus and an impus.", "fol": "all x. (yumpus(x) -> (sterpus(x) & jompus(x) & impus(x)))", "prediction": ["all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))", "(all x.(Yumpus(x) -> Sterpus(x)) & all y.(Jompus(y) -> Issue(y)))", "all x y.((Yumpus(x) & Sterpus(x)) -> (Jompus(y) & Imperator(y)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Issue(x)))", "all x y.((Yumpus(x) & Sterpus(x) & Jompus(y) & Imperator(y)) -> Is(x,y))", "(all x.(Yumpus(x) -> Sterpus(x)) & (Jompus(x) -> Imperator(x)))", "all x.(Yumpus(x) -> (Sterepus(x) & Jompus(x) & Imperator(x)))", "(all x.(Yumpus(x) -> Sterpus(x)) & all y.(Jompus(y) -> Imperator(y)))", "all x y.(Yumpus(x) -> (Sterpus(x) & Jompus(y) & Imperator(y)))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Impossible(x)))", "exists x.(Yumpus(x) & Sterpus(x) & Jompus(x) & Imperator(x))", "(all x.(Yumpus(x) -> Sterpus(x)) & (Jompus(x) -> Issue(x)))", "all x.(Yumpus(x) -> (Sterpus(x) | Jompus(x) | Imperator(x)))", "all x.(Yumpus(x) -> (Stereo(x) & Jompus(x) & Issue(x)))", "exists x.(Yumpus(x) & Sterpus(x) & Jompus(x) & Issue(x))", "all x.(Yumpus(x) -> (Sterpus(x) & Jompus(x) & Imperator(x)))"]}
{"id": "prontoqa_validation_324", "nl": "Lempuses are not jompuses.", "fol": "all x. (lempus(x) -> -jompus(x))", "prediction": ["all x.(Lempuse(x) -> -Jompuse(x))", "(all x.(Lempuse(x) -> -Jompuse(x)))", "all x.(Lempuse(x) -> -Jompuse(x))", "-Jompuse(lempuse)", "(all x.(Lempuse(x) -> -Jompuse(x)))", "all x.(Lemme(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x y.((Lempuse(x) & Jompus(y)) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jumpus(x))", "-Jompuse(lempuse,y)", "(all x.(Lempuse(x) -> -Jompuse(x)))", "all x.(Lempuse(x) -> -Jombuse(x))", "all x.(Lemme(x) -> -Jompuse(x))", "all x.(Lempuse(x) -> -Jimpus(x))", "all x.(Lempuse(x) -> -Jompuse(x))", "all x.(Lampuse(x) -> -Jumpus(x))"]}
{"id": "prontoqa_validation_325", "nl": "Polly is a grimpus, an impus, and a lempus.", "fol": "(grimpus(Polly) & impus(Polly) & lempus(Polly))", "prediction": ["all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) & Lempus(y)))", "all x.(Polly(x) -> (Grimpus(x) | Imperator(x) | Lempus(x)))", "all x y z.((Polly(x) & Grimpus(y) & Impossible(z)) -> (Grimpus(x) & Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) & Lempus(y)))", "(all x.(Polly(x) -> Grimpus(x)) & (Impossible(x) | Lempus(x))))", "(All x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x))))", "(Smokey(Polly) | Impossible(Polly) | Lempus(Polly))", "all x.(Polly(x) -> (Grimpus(x) | Impossible(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Impossible(x) & Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) | Imperator(x) | Lempus(x)))", "all x.(Polly(x) -> (Grimpus(x) & Issue(x) & Lempus(x)))", "(all x.(Polly(x) -> Grimpus(x)) & all y.(Impossible(y) -> Lempus(y)))", "(All x.(Polly(x) -> Grumpus(x)) & (Impossible(x) | Lempus(x))))", "exists x.(Polly(x) & (Grimpus(x) | Imperator(x) | Lempus(x)))", "exists x.(Polly(x) & Grimpus(x) & Issue(x) & Lempus(x))"]}
{"id": "prontoqa_validation_326", "nl": "Polly is not a yumpus.", "fol": "-yumpus(Polly)", "prediction": ["all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "all x.(Polly(x) -> -Yumpus(x))", "Polly is notYumpus(Polly)", "(-Yumpus(Polly))", "Polly is notyumpus.", "all x.(Polly(x) -> -Yumpus(x))", "(Yumpus(Polly) & -Yumpus(Polly))", "all x.(Polly(x) -> -Yumpus(x))", "(-Yumpus(Polly))", "exists x.(Polly(x) & -Yumpus(x))", "Polly is notYumpus.", "-Yumpus(Polly)", "all x.(Polly(x) -> -Yumpus(x))", "-yumpus(polly)", "(-Yumpus(Polly))"]}
{"id": "prontoqa_validation_327", "nl": "Everything that is a grimpus, a rompus, or a gorpus is a numpus.", "fol": "all x. ((grimpus(x) | rompus(x) | gorpus(x)) -> numpus(x))", "prediction": ["all x.((Smopus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Grampus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x y.((Smokey(x) | Rompus(x) | Gorpus(x)) -> Numpus(y))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Element(x) & (Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Smokey(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x y.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(y))", "all x.((Grimpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Fragpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Crupid(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Rumpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "(all x.((Grimpus(x) | Rompus(x) | Gorpus(x))) -> Numpus(x))", "all x.((Smoothpus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))", "all x.((Gruppus(x) | Rompus(x) | Gorpus(x)) -> Numpus(x))"]}
{"id": "prontoqa_validation_328", "nl": "Alex is a shumpus, Alex is not a numpus, and Alex is a sterpus.", "fol": "(shumpus(Alex) & -numpus(Alex) & sterpus(Alex))", "prediction": ["(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Shumpus(y) & -Numpus(z)) -> (Shumpus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Sterpus(x)))", "(all x y z.(Alex(x) -> Shumpus(x)) & (Alex(y) -> -Numpus(y)) & (Alex(z) -> Sterpus(z)))", "(all x y z.((Alex(x) & Humpus(y)) -> Shumpus(x)) & ((Alex(z) & -Numpus(z)) -> Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x y z.((Alex(x) & Humpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "all x.(Alex(x) -> (Shumpus(x) & -Numpus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Shumpus(x) | -Numpus(x) | Sterpus(x)))", "all x y z.((Alex(x) & Shumpus(y) & Numpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "all x y z.((Alex(x) & Humpus(y) & Sterpus(z)) -> (Shumpus(x) & -Numpus(y) & Sterpus(z)))", "(all x.(Alex(x) -> Shumpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))", "(all x.(Alex(x) -> Humpus(x)) & (Alex(x) -> -Numpus(x)) & (Alex(x) -> Sterpus(x)))"]}
{"id": "prontoqa_validation_329", "nl": "Alex is not a rompus.", "fol": "-rompus(Alex)", "prediction": ["all x.(Alex(x) -> -Rompus(x))", "Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "(-Rompus(Alex))", "Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "(-Rompus(Alex))", "Alex is not a rompus.", "Alex is not a Rompus.", "(-rompus(Alex))", "-Rompus(Alex)", "all x.(Alex(x) -> -Rompus(x))", "Alex is not a rompus.", "all x.(Alex(x) -> -Rompus(x))", "-Rompus(Alex)", "All x.(Alex(x) -> -Rompus(x))"]}
{"id": "prontoqa_validation_330", "nl": "Each wumpus is a lorpus, a sterpus, and a brimpus.", "fol": "all x. (wumpus(x) -> (lorpus(x) & sterpus(x) & brimpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Wumpus(x) -> Lorpus(x)) & all y.(Sterpus(y) & -Brimpus(y)))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "all x y z.((Wumpus(x) & Lorpus(y) & Sterpus(z)) -> (Lorpus(x) | Sterpus(z) | Brimpus(z)))", "all x y z.(Wumpus(x) -> (Lorpus(y) & Sterpus(z) & Brimpus(x)))", "all x y.((Wumpus(x) & Lorpus(y)) -> (Sterpus(x) & Brimpus(x)))", "(all x.(Wumpus(x) -> Lorpus(x)) & all y.(Sterpus(y) & -Brimpus(y)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "(all x.(Wumpus(x) -> Lorpus(x)) & (Sterpus(x) & (Brimpus(x) | Lorpus(x))))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterpus(x) & Brimpus(x)))", "(all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "all x.(Wumpus(x) -> (Lorpus(x) | Sterpus(x) | Brimpus(x)))", "exists x.(Wumpus(x) & Lorpus(x) & Sterpus(x) & Brimpus(x))", "all x.(Wumpus(x) -> (Lorpus(x) & Sterepus(x) & Brimpus(x)))", "exists x.(Wumpus(x) & Lorpus(x) & Sterpus(x) & Brimpus(x))"]}
{"id": "prontoqa_validation_331", "nl": "Stella is a wumpus.", "fol": "wumpus(Stella)", "prediction": ["Stella is a wumpus.", "(Wumpus(Stella) & -Wumpus(Stella))", "all x.(Wumpus(x) -> Stella(x))", "Stella is a wumpus.", "Stella is a Wumpus.", "(Wumpus(Stella))", "all x.(Wumpus(x) -> Stella(x))", "(Wumpus(Stella) & Wumpus(Stella))", "Stella (Wumpus)", "Stella is a wumpus.", "all x.(Wumpus(x) -> Stella(x))", "Stella is a Wumpus.", "(Wumpus(Stella))", "all x.(Wumpus(x) -> Stella(x))", "Stella is a wumpus.", "Stella is a Wumpus."]}
{"id": "prontoqa_validation_332", "nl": "Stella is a jompus, a lorpus, or a shumpus.", "fol": "(jompus(Stella) | lorpus(Stella) | shumpus(Stella))", "prediction": ["all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "(Jompus(Stella) | Lorpus(Stella) | Humpus(Stella)))", "(all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x))))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "(Jompus(Stella) | Lorpus(Stella) | Humpus(Stella)))", "all x y.((Stella(x) & Jompus(y)) | Lorpus(y) | Humpus(y))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jimpus(x) | Lorpus(x) | Humpus(x)))", "(Jompus(Stella) | Lorpus(Stella)) | Humpus(Stella))", "exists x.(Stella(x) & ((Jompus(x) & -Lorpus(x) & -Shumpus(x)) | (-Jompus(x) & -Lorpus(x)))))", "(all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x))))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "exists x.(Stella(x) & (Jimpus(x) | Lorpus(x) | Humpus(x)))", "exists x.(Stella(x) & ((Jompus(x) | Lorpus(x)) | Humpus(x))))", "all x.(Stella(x) -> (Jompus(x) | Lorpus(x) | Humpus(x)))", "all x.(Stella(x) -> (Jumpus(x) | Lorpus(x) | Humpus(x)))"]}
{"id": "prontoqa_validation_333", "nl": "Each sterpus is a numpus and a yumpus and a zumpus.", "fol": "all x. (sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "prediction": ["all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "(all x.(Sterpus(x) -> Numpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z)) -> Zumpus(z))))", "all x y.((Sterpus(x) & Numpus(y)) -> (Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "all x y z.((Sterpus(x) & Numpus(y) & Yumpus(z)) -> (Numpus(x) & Yumpus(z) & Zumpus(z)))", "(all x.(Sterpus(x) -> Numpus(x)) & (Yumpus(x) & Zumpus(x)))", "all x.(Sterepus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "(all x.(Sterepus(x) -> Numpus(x)) & all y.(Yumpus(y) & all z.(Zumpus(z) & -Numpus(y))))", "all x y.((Sterpus(x) & Numpus(y) & Yumpus(y)) -> Zumpus(x))", "all x.(Steerpus(x) -> (numpus(x) & yumpus(x) & zumpus(x)))", "exists x.(Sterpus(x) & Numpus(x) & Yumpus(x) & Zumpus(x))", "(all x.(Sterpus(x) -> Numpus(x)) & (Yumpus(x) | Zumpus(x)))", "all x.(Sterpus(x) -> (Numpus(x) & Yumpus(x) & Zumpus(x)))", "exists x.(Steerpus(x) & Numpus(x) & Yumpus(x) & Zumpus(x))", "exists x.(Sterpus(x) & Numpus(x) & Yumpus(x) & Zumpus(x))"]}
{"id": "prontoqa_validation_334", "nl": "Sam is not a numpus and Sam is a jompus and Sam is a yumpus.", "fol": "(-numpus(Sam) & jompus(Sam) & yumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Sam(y) -> Jompus(y))) & all z.(Sam(z) -> Yumpus(z)))", "all x.(Sam(x) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> -Numpus(x)) & ((Sam(x) & Jompus(z)) -> Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(y) & Yumpus(z)))", "(-numpus(Sam) & Jompus(Sam) & Yumpus(Sam))", "(all x y.(Numpus(x) -> -Numpus(x)) & (Jompus(y) -> Yompus(y)))", "all x y.((Sam(x) & Numpus(y) & Jompus(y)) -> (-Numpus(x) & Yompus(y) & Yumpus(y)))", "(all x.(Sam(x) -> -Numpus(x)) & all y.(Jompus(y) & All z.(Yumpus(z))) -> -Numpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Jompus(x) | Yumpus(x))))", "all x.(Sam(x) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "exists x.(Sam(x) & -Numpus(x) & Jompus(x) & Yumpus(x))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "all x y z.((Sam(x) & Numpus(y) & Jompus(z) & Yumpus(z)) -> (-Numpus(x) & Jompus(x) & Yumpus(x)))", "(all x.(Sam(x) -> -Numpus(x)) & (Sam(x) -> Jompus(x)) & (Sam(x) -> Yumpus(x)))"]}
{"id": "prontoqa_validation_335", "nl": "Everything that is a lempus, a lorpus, or a zumpus is a wumpus, an impus, and a yumpus.", "fol": "all x. ((lempus(x) | lorpus(x) | zumpus(x)) -> (wumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperempt(x) & Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "all x y.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(y) & Imperative(y) & Yumpus(y)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperator(x) | Yumpus(x)))", "all x y.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(y) & Impossible(y) & Yumpus(y)))", "(all x.((Lempus(x) | Lorpus(x) | Zumpus(x))) -> (Wumpus(x) | Imperator(x) | Yampus(x)))", "all x.(((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yumpus(x)))", "all x.(Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Issue(x) & Yampus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "(all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))", "(all x.((Lempus(x) | Lorpus(x) | Zumpus(x))) -> (Wumpus(x) | Imperative(x) | Yumpus(x)))", "all x.((Limpus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Impossible(x) | Yumpus(x)))", "all x.((Lempus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) & Imperator(x) & Yumpus(x)))", "all x.((Limpus(x) | Lorpus(x) | Zumpus(x)) -> (Wumpus(x) | Imperator(x) | Yampus(x)))", "all x.((Lempus(x) | Lordpus(x) | Zumpus(x)) -> (Wumpus(x) & Impossible(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_336", "nl": "Wren is a lempus.", "fol": "lempus(Wren)", "prediction": ["all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "(Lempus(Wren) & Lempus(Wren))", "(Lempus(wren) & HasLempus(wren,w))", "all x.(Wren(x) -> Lempus(x))", "(Lampus) & Wren(Wren))", "all x.(Wren(x) -> Lempus(x))", "(Lempus(wren) -> Lempus(wren))", "(Lempus(wren) & LivesIn(wren,w))", "all x.(Wren(x) -> Lempus(x))", "All x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "All x.(Wren(x) -> Lempus(x))", "all x.(Wren(x) -> Lempus(x))", "exists x.(Wren(x) & Lempus(x))"]}
{"id": "prontoqa_validation_337", "nl": "Wren is an impus.", "fol": "impus(Wren)", "prediction": ["all x.(Wren(x) -> IsImpossible(x))", "(Is(Wren(w) & Is(w)) -> Is(w))", "all x.(Wren(x) -> Is(x,y))", "(Impossible(Wren))", "Wren is a impus.", "all x.(Wren(x) -> Imperative(x))", "(Impossible(Wren,x))", "Wren is a impus.", "All x.(Wren(x) -> IsImpossible(x))", "(Impossible(Wren,x))", "all x.(Wren(x) -> Imperative(x))", "All x.(Wren(x) -> IsImpossible(x))", "All x.(Wren(x) -> Is(x,y))", "all x.(Wren(x) -> Impossible(x))", "all x.(Wren(x) -> Impeccable(x))", "All x.(Wren(x) -> IsImpossible(x))"]}
{"id": "prontoqa_validation_338", "nl": "Everything that is a rompus or a vumpus or a zumpus is a lorpus, a brimpus, and a gorpus.", "fol": "all x. ((rompus(x) | vumpus(x) | zumpus(x)) -> (lorpus(x) & brimpus(x) & gorpus(x)))", "prediction": ["all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.(((Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x y.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(y) & Brimpus(y) & Gorpus(y)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "(all x.((Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x y.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(y) | Brimpus(y) | Gorpus(y)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "(all x.((Rompus(x) | Vumpus(x) | Zumpus(x))) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Voompus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x.(Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))", "all x.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) | Brimpus(x) | Gorpus(x)))", "all x y.((Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(y) & Brimpus(y) & Gorpus(y)))", "all x.(Rompus(x) | Vumpus(x) | Zumpus(x)) -> (Lorpus(x) & Brimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_339", "nl": "Sam is a rompus.", "fol": "rompus(Sam)", "prediction": ["all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "(Rompus(Sam) & Has(Sam,Sam))", "(Rompus(Sam) & -Rompus(Sam))", "Sam is a rompus.", "Sam is rompus.", "all x.(Rompus(x) -> Sam(x))", "all x.(Sam(x) -> Rompus(x))", "(rompus(Sam) & Has(Sam,Sam))", "(Rompus(Sam) & Has(Sam) & Has(Sam))", "(Rompus(Sam) & -Rompus(Sam))", "all x.(Rompus(x) -> Sam(x))", "Sam is rompus.", "all x.(Sam(x) -> Rompus(x))", "all x.(Rompus(x) -> Sam(x))", "All x.(Sam(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_340", "nl": "Sam is a gorpus.", "fol": "gorpus(Sam)", "prediction": ["all x.(Sam(x) -> Gorpus(x))", "all x.(Sam(x) -> Gorpus(x))", "Sam is Gorpus.", "Sam is Gorpus(Sam)", "all x.(Sam(x) -> Gorpus(x))", "(Gorpus(Sam) & HasGorpa(Sam))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Sam(x))", "Sam is gorpus.", "(Gorpus(Sam) & HasGorpa(Sam))", "(Gorpus(sam) & Gorpus(sam))", "all x.(Sam(x) -> Gorpus(x))", "all x.(Gorpus(x) -> Sam(x))", "(Gorpus)", "all x.(Gorpus(x) -> Sam(x))", "all x.(Sam(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_341", "nl": "Everything that is a lorpus, a sterpus, and a grimpus is a tumpus.", "fol": "all x. ((lorpus(x) & sterpus(x) & grimpus(x)) -> tumpus(x))", "prediction": ["all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x y z.((Lorpus(x) & Sterpus(y) & Grimpus(z) & Has(x,y) & Has(x,z)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x y.((Lorpus(x) & Sterpus(y) & Grimpus(y)) -> Tumpus(x))", "all x y z.((Lorpus(x) & Sterpus(y) & Grimpus(z) & Is(x,y) & Is(x,z)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) & Sterpus(x) & Grimpus(x)) -> Tumpus(x))", "(all x.((Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.(((Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.(Tumpus(x) -> (Lorpus(x) | Sterpus(x) | Grimpus(x)))", "all x.((Lorpus(x) & Sterpus(x) & Grimpus(x)) -> Tumpus(x))", "(all x.((Lorpus(x) | Sterpus(x) | Grimpus(x))) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterepus(x) | Grumpus(x)) -> Tumpus(x))", "all x.((Lorpus(x) | Sterpus(x) | Grimpus(x)) -> Tumpus(x))"]}
{"id": "prontoqa_validation_342", "nl": "Fae is not a tumpus, Fae is a dumpus, and Fae is a wumpus.", "fol": "(-tumpus(Fae) & dumpus(Fae) & wumpus(Fae))", "prediction": ["(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x y z.((Fae(x) & Tumpus(y)) -> -Tumpus(x)) & ((Fae(z) & Dumpus(z)) -> Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "all x.(Fae(x) -> (-Tumpus(x) & Dumpus(x) & Wumpus(x)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x y z.((Fae(x) & Tumpus(y) & Dumpus(z)) -> -Tumpus(x)) & ((Fae(x) & Dumpus(x)) -> Wumpus(x)))", "(all x y z.((Fae(x) & Tumpus(y)) -> -Tumpus(x)) & ((Fae(z) & Dumpus(z))) -> Wumpus(z)))", "exists x.(Fae(x) & -Tumpus(x) & Dumpus(x) & Wumpus(x))", "all x y z.(Fae(x) & (Tumpus(y) | Dumpus(y) | Wumpus(z))) -> -Tumpus(x))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z))))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "all x y z.((Fae(x) & Dumpus(y) & Wumpus(z)) -> (-Tumpus(x) & Dumpus(y) & Wumpus(z)))", "(all x.(Fae(x) -> -Tumpus(x)) & (Fae(x) -> Dumpus(x)) & (Fae(x) -> Wumpus(x)))", "(all x.(Fae(x) -> -Tumpus(x)) & all y.(Fae(y) -> Dumpus(y)) & all z.(Fae(z) -> Wumpus(z)))"]}
{"id": "prontoqa_validation_343", "nl": "Fae is a lorpus.", "fol": "lorpus(Fae)", "prediction": ["all x.(Fae(x) -> Lorpus(x))", "(Lorpus(Fae) & LivesIn(Fae,Lorpus))", "Fae is a lorpus.", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(Fae) & LivesIn(Fae,Lorpus))", "Fae is a lorpus.", "all x.(Fae(x) -> Lorpus(x))", "(Lorpus(fee) & LivesIn(fee,fee))", "(Lorpus(fee) & HasLorph(fee))", "all x.(Fae(x) -> Lorpus(x))", "all x.(Fae(x) -> Llorpus(x))", "exists x.(Fae(x) & Lompus(x))", "(Lorpus)", "all x.(Fae(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Fae(x))", "All x.(Fae(x) -> Llorpus(x))"]}
{"id": "prontoqa_validation_344", "nl": "Fae is a sterpus.", "fol": "sterpus(Fae)", "prediction": ["all x.(Fae(x) -> Sterpus(x))", "(Sterpus(Fae) & Sterpus(Fae))", "all x.(Fae(x) -> Sterpus(x))", "-Sterpus(Fae)", "Fae is sterpus.", "(Stereosis(Fae) & Sterpus(Fae))", "(Sterpus(Fae) & Sterpus(Fae))", "all x.(Fae(x) -> Sterpus(x))", "(Stereose(Fae))", "(Sterpus(fee) & Sterpus(fee))", "all x.(Fae(x) -> Sterepus(x))", "all x.(Fae(x) -> Steroid(x))", "exists x.(Fae(x) & Steroid(x) & Sterpus(x))", "all x.(Fae(x) -> Sterpus(x))", "All x.(Fae(x) -> Sterepus(x))", "all x.(Fae(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_345", "nl": "Fae is not a grimpus.", "fol": "-grimpus(Fae)", "prediction": ["all x.(Fae(x) -> -Grimpus(x))", "-Grimpus(Fae)", "(Fae isn'tGrimpus(Fae))", "(-Grimpus(Fae))", "all x.(Fae(x) -> -Grimpus(x))", "Fae is not a Grimpus.", "Fae is notGrimpus(f)", "(Fae, -Grimpus(Fae))", "-Gruppus(Fae)", "-Grimpus(Fae)", "all x.(Fae(x) -> -Grimpus(x))", "(-Grimpus(Fae))", "all x.(Fae(x) -> -Grimpus(x))", "-Grimpus(fae)", "(-Grimpus(Fae))", "-Grimpus(Fae)"]}
{"id": "prontoqa_validation_346", "nl": "Lempuses are dumpuses and sterpuses and wumpuses.", "fol": "all x. (lempus(x) -> (dumpus(x) & sterpus(x) & wumpus(x)))", "prediction": ["all x.(Lempuse(x) -> (Dumpsuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x y.((Lempuse(x) & Sterpuse(y)) -> (Dumpsuse(x) & Sterpuse(y) & Wumpuse(y)))", "all x.(Lempuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x)))", "all x y z.((Lempuse(x) & Sterpuse(y) & Wumpuse(z)) -> (Dumpuse(x) | Sterpuse(y) | Wumpuse(z)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & all y.(Sterpuse(y) -> Wumpuse(y)))", "all x y.((Lempuse(x) & Sterpuse(y)) -> (Dumpuse(x) | Sterpuse(y) | Wumpuse(y)))", "all x.(Lempuse(x) -> (Dumuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumpuse(x) & Sterpuse(x) & Wumpuse(x)))", "all x.(Lempuse(x) -> (Dumps(x) & Sterpuses(x) & Wumpuses(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x)))", "(all x.(Lempuse(x) -> Dumpus(x)) & all y.(Sterpuse(y) -> Wumpuse(y)))", "(all x.(Lampuse(x) -> Dumpuse)) & (Sterpuse(x) | Wumpuse(x)))", "all x.(Lampuse(x) -> (Dumpuse(x) | Sterpuse(x) | Wumpuse(x)))", "all x.(Lempuse(x) -> (Dupus(x) & Sterus(x) & Wumpus(x)))", "(all x.(Lempuse(x) -> Dumpuse(x)) & (Sterpuse(x) | Wumpuse(x)))"]}
{"id": "prontoqa_validation_347", "nl": "Sam is a yumpus, a zumpus, or a sterpus.", "fol": "(yumpus(Sam) | zumpus(Sam) | sterpus(Sam))", "prediction": ["all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "(Yumpus(sam) | Zumpus(sam) | Sterpus(sam))", "(yumpus) | zumpus(y) | sterpus(y)))", "(Yumpus,yumpus,zumpus,sterpus)", "all x y.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "(Yumpus,Yumpus,Zumpus,Sterpus)", "(yumpus) | zumpus(y) | sterpus(y)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterepus(x)))", "all x.(Sam(x) -> (Yumpus(x) | Zumpus(x) | Sterpus(x)))", "exists x.(Sam(x) & (Yumpus(x) | Zumpus(x) | Steroid(x)))", "exists x.(Sam(x) & (Yumpus(x) | Zumpus(x) | Sterpus(x)))"]}
{"id": "prontoqa_validation_348", "nl": "Each tumpus is a rompus and a zumpus and a wumpus.", "fol": "all x. (tumpus(x) -> (rompus(x) & zumpus(x) & wumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Wumpus(z) -> Wumpus(z))))", "all x y.((Tumpus(x) & Rompus(y)) -> (Tompus(x) & Tompus(x) & Wumpus(x)))", "all x y z.((Tumpus(x) & Rompus(y) & Zumpus(z)) -> (Rompus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & (Tompus(x) -> Zumpus(x)) & (Wumpus(x) -> Tompus(x)))", "(all x.(Tumpus(x) -> Rompus(x)) & all y.(Tompus(y) -> Tompus(y))) & all z.(Tompus(z) -> Wumpus(z)))", "all x y z.(Tumpus(x) -> (Rompus(y) & Zumpus(z) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x y.((Tumpus(x) & Rompus(y)) -> (Tompus(x) & Zumpus(x) & Wumpus(x)))", "exists x.(Tumpus(x) & Rompus(x) & Zumpus(x) & Wumpus(x))", "(all x.(Tumpus(x) -> Rompus(x)) & (Tompus(x) -> Zumpus(x)) & (Wumpus(x) -> Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))", "all x.(Tumpus(x) -> (Rompus(x) | Zumpus(x) | Wumpus(x)))", "exists x.(Tumpus(x) & Rompus(x) & Zumpus(x) & Wumpus(x))", "all x.(Tumpus(x) -> (Rompus(x) & Zumpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_349", "nl": "Rex is a tumpus.", "fol": "tumpus(Rex)", "prediction": ["all x.(Rex(x) -> Tumpus(x))", "Rex is a tumpus.", "all x.(Rex(x) -> Tumpus(x))", "(Tumpus(Rex) & HasTumpus(Rex))", "Rex is a tumpus.", "all x.(Tumpus(x) -> Rex(x))", "Rex is tumpus.", "Rex (Tumpus)", "Rex.(Tumpus(x) -> HasTumpus(x))", "(Tumpus(Rex))", "Rex is a tumpus.", "all x.(Tumpus(x) -> Rex(x))", "All x.(Rex(x) -> Tumpus(x))", "(Tumpus(rex) & HasTump(rex))", "All x.(Rex(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Rex(x))"]}
{"id": "prontoqa_validation_350", "nl": "Rex is a lempus, a jompus, or a rompus.", "fol": "(lempus(Rex) | jompus(Rex) | rompus(Rex))", "prediction": ["all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(Limpus,Jompus,Rompus)", "(all x.(Rex(x) -> Lempus(x)) | (Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x y.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(y)))", "(all x.(Rex(x) -> Lempus(x)) | (Jompus(x) | Rompus(x))))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "(all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Lempus(x) | Jompus(x) | Rompus(x)))", "all x.(Rex(x) -> (Limpus(x) | Jompus(x) | Rompus(x)))", "exists x.(Rex(x) & (Lempus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_351", "nl": "Everything that is a wumpus and a numpus and a brimpus is a lorpus, a jompus, and a rompus.", "fol": "all x. ((wumpus(x) & numpus(x) & brimpus(x)) -> (lorpus(x) & jompus(x) & rompus(x)))", "prediction": ["all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x y z.((Wumpus(x) & Numpus(y) & Brimpus(z) & Is(x,y) & Is(x,z)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x y.((Wumpus(x) & Numpus(y) & Brimpus(y)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "(all x.((Wumpus(x) & -Numpus(x) & -Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "(all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) | Numpus(x) | Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x y.((Wumpus(x) & Numpus(y) & Brimpus(y)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x y z.((Wumpus(x) & Numpus(y) & Brimpus(z) & HasWumpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "(all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.(Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) | Numpus(x) | Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) & Jompus(x) & Rompus(x)))", "all x.((Wumpus(x) & Numpus(x) & Brimpus(x)) -> (Lorpus(x) | Jompus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_352", "nl": "Stella is a numpus.", "fol": "numpus(Stella)", "prediction": ["Stella is Numpus(Stella)", "all x.(Stella(x) -> Numpus(x))", "Stella is a Numpus.", "(Numpus(Stella) & Numpus(Stella))", "all x.((Stella(x) & Numpus(x)) -> Numpus(x))", "Stella is a Numpus(Stella)", "Stella is Numpus(Stella)", "all x.(Stella(x) -> Numpus(x))", "(Numpus(Stella))", "Stella is Numpus(s)", "(Numpus(Stella) & Numpus(Stella))", "all x.(Stella(x) -> Numpus(x))", "Stella (numpus)", "Stella is a Numpus.", "Stella is Numpus.", "(Numpus(Stella))"]}
{"id": "prontoqa_validation_353", "nl": "Stella is a brimpus.", "fol": "brimpus(Stella)", "prediction": ["all x.(Stella(x) -> Brimpus(x))", "Stella is a Brimpus.", "Stella is a brimpus.", "all x.(Stella(x) -> Brimpus(x))", "(Brimpus(Stella) & Brimpus(Stella))", "Stella is a Brimpus.", "all x.(Stella(x) -> Brimpus(x))", "Stella is a brimpus.", "Stella (Brimpus)", "Stella is brimpus.", "all x.(Brimpus(x) -> Stella(x))", "(Brimpus(Stella))", "Stella is a Brimpus.", "(Brimpus(Stella) & Brimpus(Stella))", "all x.(Stella(x) -> Brimpus(x))", "All x.(Stella(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_354", "nl": "Stella is a jompus.", "fol": "jompus(Stella)", "prediction": ["all x.(Stella(x) -> Jompus(x))", "Stella is a Jompus.", "(Jompus(Stella) & Jompus(Stella))", "Stella is a Jompus.", "Stella is Jompus(Stella)", "all x.(Stella(x) -> Jompus(x))", "Stella is a jompus.", "(Jompus(Stella) & Jompus(Stella))", "(Jimpus(Stella) & Jompus(Stella))", "all x.(Stella(x) -> Jompus(x))", "Stella (Jompus)", "Stella is a Jompus.", "Stella is Jompus.", "Stella is jompus.", "all x.(Stella(x) -> Jompus(x))", "All x.(Stella(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_355", "nl": "Each shumpus is a sterpus and a vumpus and a jompus.", "fol": "all x. (shumpus(x) -> (sterpus(x) & vumpus(x) & jompus(x)))", "prediction": ["all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & all y.(Vumpus(y) & All z.(Jompus(z)) -> Jompus(z))))", "all x y.((Shumpus(x) & Sterpus(y)) -> (Vumpus(x) & Jompus(x)))", "all x y z.((Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)) -> (Shumpus(x) & Sterpus(y) & Vumpus(z) & Jompus(z)))", "all x.(Shumpus(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & all y.(Vimpus(y) & -Jimpus(y))))", "all x y.((Shumpus(x) & Sterpus(y)) -> (Vimpus(x) & Jompus(x)))", "exists x.(Shumpus(x) & Sterpus(x) & Vumpus(x) & Jompus(x))", "(all x.(Shumpus(x) -> Sterpus(x)) & (Vumpus(x) | Jompus(x)))", "all x.(Shumpus(x) -> (Stereopus(x) & Vumpus(x) & Jompus(x)))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterus(x)) & (Vumpus(x) | Jompus(x)))", "exists x.(Shumpus(x) & Sterpus(x) & Vumpus(x) & Jompus(x))", "all x.(Shumpus(x) -> (Sterpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Shumpus(x) -> Sterpus(x)) & (Vimpus(x) | Jompus(x)))"]}
{"id": "prontoqa_validation_356", "nl": "Stella is a yumpus and Stella is not a jompus and Stella is a gorpus.", "fol": "(yumpus(Stella) & -jompus(Stella) & gorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (Yumpus(x) & -Jompus(z) & Gorpus(z)))", "(all x.(Yumpus(x) -> Stella)) & (-Jompus(x) -> Stella)) & (Gorpus(x) -> Stella)))", "all x y.((Stella(x) & Yumpus(x)) -> (-Jompus(x) & Gorpus(y)))", "(all x y.(Yumpus(x) -> Stella(x)) & (-Jompus(y) -> Stella(y))) & (-Jompus(y) -> Stella(y)))", "all x.(Stella(x) -> (Yumpus(x) & -Jompus(x) & Gorpus(x)))", "(all x y z.((Stella(x) & Yumpus(y) & -Jompus(z)) -> (Yumpus(x) & -Jompus(y) & Gorpus(z)))", "all x y z.((Stella(x) & Yumpus(y) & Stella(z)) -> (-Jompus(z) & Gorpus(z)))", "(all x.(Yumpus(x) & -Jompus(x)) & all y.(Gorpus(y)) -> (Yumpus(y) & Gorpus(y))))", "(all x.(Stella(x) -> Yampus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))", "all x y z.((Stella(x) & Yumpus(x) & Stella(y) & Jompus(z)) -> (Yumpus(x) & -Jompus(y) & Gorpus(z)))", "exists x.(Yumpus(x) & -Jompus(x) & Gorpus(x))", "(all x y.(Yumpus(x) -> Stella(x)) & (-Jompus(y) -> Stella(y)) & (Gorpus(y) -> Stella(y)))", "all x.(Stella(x) -> (Yumpus(x) & -Jompus(x) & Gorpus(x)))", "all x y.((Stella(x) & Yumpus(x)) -> (-Jompus(x) & Gorpus(y)))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Jompus(x)) & (Stella(x) -> Gorpus(x)))"]}
{"id": "prontoqa_validation_357", "nl": "Stella is not a shumpus.", "fol": "-shumpus(Stella)", "prediction": ["Stella is not a shumpus.", "all x.(Stella(x) -> -Shumpus(x))", "(-Shumpus(Stella))", "Stella is not a shumpus.", "all x.(Stella(x) -> -Shumpus(x))", "(-Shumpus(Stella))", "Stella is notShumpus(Stella)", "Stella -Shumpus(Stella)", "Stella is not a shumpus.", "all x.(Stella(x) -> -Shumpus(x))", "(-Shumpus(Stella))", "-Shumpus(Stella)", "Stella -Shumpus(s)", "Stella is not a shumpus.", "(-Shumpus(Stella))", "-Shumpus(Stella)"]}
{"id": "prontoqa_validation_358", "nl": "Dumpuses are lempuses.", "fol": "all x. (dumpus(x) -> lempus(x))", "prediction": ["all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Lempuse(x))", "(all x.(Dumpuse(x) -> Lempuse(x)))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x y.((Dumpuse(x) & Lempuse(y)) -> Lempuse(x))", "(all x.(Dumpuse(x) -> Lempuse(x)))", "(Lempuse(dumpus) & Lempuse(dumpus))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpus(x) -> Lempus(x))", "all x.(Dumpuse(x) -> Lempuse(x))", "all x.(Dumpuse(x) -> Lempuse(x))"]}
{"id": "prontoqa_validation_359", "nl": "Stella is not a lempus, Stella is a tumpus, and Stella is a grimpus.", "fol": "(-lempus(Stella) & tumpus(Stella) & grimpus(Stella))", "prediction": ["(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y)) & all z.(Stella(z) -> Grimpus(z))))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Grimpus(z)))", "all x.(Stella(x) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(x) & Grimpus(x)))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Grimpus(x)))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z)) -> Grimpus(z)))", "(all x.(Stella(x) -> -Lempus(x)) & all y.(Stella(y) -> Tumpus(y))) & all z.(Stella(z) -> Grimpus(z)))", "exists x.(Stella(x) & -Lempus(x) & Tumpus(x) & Grimpus(x))", "all x y z.((Stella(x) & Tumpus(y) & Grimpus(z)) -> (-Lempus(x) & -Tumpus(y) & -Stella(z)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) & Tumpus(y) & Gruppus(z)))", "all x y z.(Stella(x) -> (-Lempus(x) & Stella(y) & Tumpus(y) & Grimpus(z)))", "(all x y z.((Stella(x) & Lempus(y)) -> -Lempus(x)) & ((Stella(z) & Tumpus(z))) -> Grimpus(z)))", "all x y z.((Stella(x) & Lempus(y) & Tumpus(z)) -> (-Lempus(x) | (Tumpus(x) | Grimpus(x))))", "(all x.(Stella(x) -> -Lempus(x)) & (Stella(x) -> Tumpus(x)) & (Stella(x) -> Gruppus(x)))"]}
{"id": "prontoqa_validation_360", "nl": "Stella is a lorpus, Stella is a shumpus, or Stella is not a dumpus.", "fol": "(lorpus(Stella) | shumpus(Stella) | -dumpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x))) | (Stella(x) -> -Dumpus(x))))", "all x y.((Stella(x) & Lorpus(x)) | (Stella(y) & Humpus(y)) | (-Stella(y) & Dumpus(y))))", "all x.((Lorpus(x) | Humpus(x) | -Dumpus(x)) -> Stella(x))", "all x y.((Lorpus(x) & Shumpus(y)) -> (Lorpus(x) | Shumpus(y) | -Dumpus(y)))", "all x.(Stella(x) -> (Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "all x y z.((Stella(x) & Lorpus(x) & Shumpus(y)) -> (Lorpus(x) | Shumpus(y) | -Dumpus(z)))", "(all x.(Stella(x) -> Lorpus(x)) | (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "exists x.(Stella(x) & ((Lorpus(x) & Stella(x)) | (Shumpus(x) & -Dumpus(x)))))", "(all x y.(Lorpus(x) -> Stella(y)) & (Shumpus(y) | -Dumpus(y))))", "exists x.(Lorpus(x) | Humpus(x) | -Dumpus(x))", "(all x.(Lorpus(x) | Shumpus(x) | -Dumpus(x)))", "(all x.(Stella(x) -> Lorpus(x)) & (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))", "all x y.((Stella(x) & Lorpus(x)) | (Stella(y) & Humpus(y)) | (Stella(y) & -Dumpus(y))))", "(all x.(Lorpus(x) | Humpus(x) | -Dumpus(x)))", "exists x.(Stella(x) & ((Lorpus(x) & Stella(x)) | (Shumpus(x) & -Dumpus(x))))", "(all x.(Stella(x) -> Loomis(x)) | (Stella(x) -> Humpus(x)) | (Stella(x) -> -Dumpus(x))))"]}
{"id": "prontoqa_validation_361", "nl": "Each lorpus is a numpus, a vumpus, and a tumpus.", "fol": "all x. (lorpus(x) -> (numpus(x) & vumpus(x) & tumpus(x)))", "prediction": ["all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & all y.(Vumpus(y) & -Tumpus(y)))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & all y.(Vumpus(y) & all z.(Tumpus(z) & -Numpus(z))) -> Tumpus(z)))", "all x y z.(Lorpus(x) -> (Numpus(y) | Vumpus(y) | Tumpus(z)))", "all x y.((Lorpus(x) & Numpus(y) & Vumpus(y)) -> Tumpus(x))", "all x.(Lorpus(x) -> (numpus(x) | vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "exists x.(lorpus(x) & (Numpus(x) | Vumpus(x) | Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & all y.(Vumpus(y) & All z.(Tumpus(z)) -> Tumpus(z))))", "all x.(Lorpus(x) -> (Numpus(x) & Vumpus(x) & Tumpus(x)))", "(all x.(Lorpus(x) -> Numpus(x)) & (Vumpus(x) & Tumpus(x)))", "all x.(Lorpus(x) -> (numpus(x) | vumpus(x) | Tumpus(x)))", "exists x.(lorpus(x) & (Numpus(x) | Vumpus(x) | Tumpus(x)))", "all x.(Lorpus(x) -> (Numpus(x) | Vumpus(x) | Tumpus(x)))", "exists x.(Lorpus(x) & Numpus(x) & Vumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_validation_362", "nl": "Everything that is a yumpus, a grimpus, and a brimpus is not a numpus.", "fol": "all x. ((yumpus(x) & grimpus(x) & brimpus(x)) -> -numpus(x))", "prediction": ["all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Numpus(x))", "all x.(Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x y.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(y))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))", "all x.((Yumpus(x) & Grimpus(x) & Brimpus(x)) -> -Numpus(x))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -Numpus(x))", "(all x.((Yumpus(x) | Grimpus(x) | Brimpus(x))) -> -numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -Numpus(x))", "all x.((Yumpus(x) | Grimpus(x) | Brimpus(x)) -> -numpus(x))"]}
{"id": "prontoqa_validation_363", "nl": "Max is a yumpus.", "fol": "yumpus(Max)", "prediction": ["all x.(Max(x) -> Yumpus(x))", "(Yumpus(Max) & HasYump(Max))", "Max is yumpus.", "Max isYumpus(x)", "all x.(Matthew(x) -> Yumpus(x))", "all x.(Max(x) -> Yumpus(x))", "(Yumpus(Max))", "-Yumpus(Max)", "Max is yumpus.", "Max is Yumpus.", "(Yumpus(Max) & HasYump(Max))", "all x.(Max(x) -> Yumpa(x))", "all x.(Yumpus(x) -> Max(x))", "All x.(Max(x) -> Yumpus(x))", "(Yumpus(Max)", "(Yumpus(Max)"]}
{"id": "prontoqa_validation_364", "nl": "Max is a grimpus.", "fol": "grimpus(Max)", "prediction": ["all x.(Max(x) -> Grimpus(x))", "Max is a Grimpus.", "(Grimpus(Max) & -Grimpus(Max))", "all x.(Max(x) -> Grimpus(x))", "all x.(Matt(x) -> Grimpus(x))", "(Scrappus(Max) & Grimpus(Max))", "Max is a Grimpus.", "all x.(Matthew(x) -> Grimpus(x))", "(Grimpus(Max))", "Max is grimpus.", "all x.(Max(x) -> Grimpus(x))", "-Smoothpus(Max)", "(Gruppus(Max) & Gruppus(Max))", "Max is a Grimpus.", "(Grampus(Max))", "All x.(Max(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_365", "nl": "Max is a brimpus.", "fol": "brimpus(Max)", "prediction": ["all x.(Max(x) -> Brimpus(x))", "Max is a Brimpus.", "(Brimpus(Max) & Brimpus(Max))", "all x.(Max(x) -> Brimpus(x))", "Max is brimpus.", "Max is a Brimpus.", "all x.(Matt(x) -> Brimpus(x))", "Max is a brimpus.", "(Brimpus(Max))", "all x.(Max(x) -> Brimpus(x))", "(Brimpus(Max) & HasBrimpus(Max))", "all x.(M Max(x) -> Brimpus(x))", "All x.((Max(x) & Brimpus(x)) -> CanBe(x))", "all x.(Max(x) -> Brimpus(x))", "(Brimpus(Max))", "All x.(Max(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_366", "nl": "Max is not a lorpus.", "fol": "-lorpus(Max)", "prediction": ["(-Lorpus(Max))", "all x.(Max(x) -> -Lorpus(x))", "(Lorpus(Max) & -Lorpus(Max))", "Max is not a lorpus.", "-Lorpus(Max)", "all x.(Max(x) -> -Lorpus(x))", "Max is notLorpus(Max)", "(-Lorpus(Max))", "(Lorpus(Max) & -Lorpus(Max))", "all x.(Max(x) -> -Lorpus(x))", "-Lorpus(Max)", "Max is notLorpus(Max)", "all x.(Max(x) -> -Lorpus(x))", "(-Lorpus(Max))", "-Lorpus(Max)", "-Lorpus(Max)"]}
{"id": "prontoqa_validation_367", "nl": "Everything that is a lorpus and a numpus and a brimpus is a vumpus.", "fol": "all x. ((lorpus(x) & numpus(x) & brimpus(x)) -> vumpus(x))", "prediction": ["all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x y.((Lorpus(x) & Numpus(y) & Brimpus(y)) -> Vumpus(x))", "(all x.((Lorpus(x) & -Lumpus(x) & -Numpus(x) & -Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x y z.((Lorpus(x) & Numpus(y) & Brimpus(z) & Is(x,y)) -> Vumpus(x))", "(all x.((Lorpus(x) & -Lumpus(x)) -> Vumpus(x)) & all y.((Numpus(y) & Brimpus(y)) -> Vumpus(y)))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Numpus(x) | Brimpus(x)) -> Vumpus(x))", "all x y.((Lorpus(x) & Numpus(y) & Brimpus(y)) -> Vumpus(x))", "all x.((Lorph(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.(((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) | Numpus(x) | Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vumpus(x))", "all x.((Lorpus(x) & Numpus(x) & Brimpus(x)) -> Vulpis(x))"]}
{"id": "prontoqa_validation_368", "nl": "Shumpuses are gorpuses.", "fol": "all x. (shumpus(x) -> gorpus(x))", "prediction": ["all x.(Shupuse(x) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "all x y.((Shupuse(x) & Gorpus(y)) -> Gorpus(x))", "(Gorpuse(shupuse,s) & -Gorpuse(shupuse))", "(Gorpuse(shm) & Gorpus(shm))", "all x.(Shampus(x) -> Gorpus(x))", "all x.(Shampoos(x) -> Gorpuse(x))", "all x y.((Shupuse(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shumpsue(x) -> Gorpuse(x))", "all x.(Shutus(x) -> Gorpuse(x))", "all x y.((Shampus(x) & Gorpus(y)) -> Gorpus(x))", "all x.(Shumpus(x) -> Gorpuse(x))", "All x.(Shumpuse(x) -> Gorpuse(x))", "all x.(Shupuse(x) -> Gorpuse(x))", "all x.(Shumpus(x) -> Gorpuse(x))"]}
{"id": "prontoqa_validation_369", "nl": "Every gorpus is not a vumpus.", "fol": "all x. (gorpus(x) -> -vumpus(x))", "prediction": ["all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x y.((Gorpus(x) & Vumpus(y)) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "(-Vumpus(gorpus)", "-Vumpus(gorpus,y)", "(all x.(Gorpus(x) -> -Vumpus(x)))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "all x.(Gorpus(x) -> -Vimpus(x))", "all x.(Gorpus(x) -> -Vumpus(x))", "exists x.(Gorpus(x) & -Vumpus(x))", "exists x.(Gorpus(x) & -Umpus(x))"]}
{"id": "prontoqa_validation_370", "nl": "Sam is a shumpus.", "fol": "shumpus(Sam)", "prediction": ["all x.(Sam(x) -> Humpus(x))", "all x.(Sam(x) -> Humptious(x))", "Sam is a shumpus.", "(Sam(sam) & Humpus(sam))", "(Sam,Shumpus)", "Sam is shumpus.", "(Shumpus(Sam) & HasShump(Sam))", "all x.(Sam(x) -> Humpus(x))", "all x.(Shumpus(x) -> Sam(x))", "Sam is a shumpus.", "all x.(Sam(x) -> Humptus(x))", "(Shumpus(sam) & HasShump(sam,sam))", "all x.(Sam(x) -> Shumpus(x))", "all x.(Shumpus(x) -> Sam(x))", "(Shumpus)", "all x.(Sam(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_371", "nl": "Sam is a lorpus.", "fol": "lorpus(Sam)", "prediction": ["all x.(Sam(x) -> Lorpus(x))", "Sam is a lorpus.", "(Lorpus(Sam) & LivesIn(Sam,Sam))", "all x.(Sam(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Sam(x))", "Sam is a lorpus.", "(Lorpus(Sam) & LivesIn(Sam,Sam))", "all x.(Sam(x) -> Lorpus(x))", "Sam is a lorpus.", "all x.(Lorpus(x) -> Sam(x))", "(Lorpus(Sam) & HasLorph(Sam))", "all x.((Sam(x) & Lorpus(x)) -> CanBeLorpedo(x))", "all x.(Lorpus(x) -> Sam(x))", "(Lorpus(Sam) & LivesIn(Sam,Sam))", "all x.(Lorpus(x) -> Sam(x))", "exists x.(Lorpus(x) & Sam(x))"]}
{"id": "prontoqa_validation_372", "nl": "Everything that is a rompus and a yumpus and a lempus is a gorpus, a sterpus, and a zumpus.", "fol": "all x. ((rompus(x) & yumpus(x) & lempus(x)) -> (gorpus(x) & sterpus(x) & zumpus(x)))", "prediction": ["all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y.((Rompus(x) & Yumpus(y) & Lempus(y)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Rompus(x) & Yumpus(y) & Lempus(z) & Gorpus(x) & Sterpus(x) & Zumpus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x y z.((Rompus(x) & Yumpus(y) & Lempus(z)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "(all x.((Rompus(x) & Yumpus(x)) -> Gorpus(x)) & all y.((Sterepus(y) & Zumpus(y)) -> Zumpus(y)))", "all x y.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(y) | Sterpus(y) | Zumpus(y)))", "(all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.(Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) | Yumpus(x) | Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yuppus(x) & Lempus(x)) -> (Gorpus(x) & Sterpus(x) & Zumpus(x)))", "(all x.((Rompus(x) & Yumpus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))", "all x.((Rompus(x) & Yampus(x) & Lempus(x)) -> (Gorpus(x) | Sterpus(x) | Zumpus(x)))"]}
{"id": "prontoqa_validation_373", "nl": "Max is a rompus.", "fol": "rompus(Max)", "prediction": ["all x.(Max(x) -> Rompus(x))", "(Rompus(Max) & -Rompus(Max))", "Max is a rompus.", "all x.(Max(x) -> Rompus(x))", "(Rompus(Max) & Has(Max))", "Max is rompus.", "all x.(Rompus(x) -> Max(x))", "Max is a rompus.", "-Rompus(Max)", "all x.(Max(x) -> Rompus(x))", "(Rompus(Max)", "all x.(Max(x) -> Rompus(x))", "Max is rompus.", "(Rompus(Max)", "All x.(Max(x) -> Rompus(x))", "(Rompus(Max)"]}
{"id": "prontoqa_validation_374", "nl": "Max is a lempus.", "fol": "lempus(Max)", "prediction": ["all x.(Max(x) -> Lempus(x))", "Max is a lempus.", "all x.(Max(x) -> Lempus(x))", "(Lempus(Max))", "Max is a Lempus.", "Max ist ein Lempus.", "(Lempus(Max) & HasLempus(Max))", "All x.(Mat Max(x) -> Lempus(x))", "Max is Lempus.", "all x.(Max(x) -> Lempus(x))", "all x.(Matthew(x) -> Lempus(x))", "(Limpus(Max) -> Lempus(Max))", "Max is a lempus.", "all x.(Max(x) -> Lempus(x))", "(Lempus(Max))", "all x.(Max(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_375", "nl": "Everything that is a sterpus, an impus, or a vumpus is a lempus.", "fol": "all x. ((sterpus(x) | impus(x) | vumpus(x)) -> lempus(x))", "prediction": ["all x.((Sterpus(x) | Imperempt(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | IsImpossed(x) | IsVumpus(x)) -> Lempus(x))", "all x.(((Sterepus(x) | Imperempt(x) | Vumpus(x))) -> Lempus(x))", "all x.((Stereosis(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterpus(x) | Imperator(x) | Vumpus(x)) -> Lempus(x))", "all x.((Sterepus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))", "all x y.((Sterpus(x) | Imperator(x) | Vumpus(x)) -> Lempus(y))", "all x.(((Sterpus(x) | Imperator(x) | Vumpus(x))) -> Lempus(x))", "all x.((Sterpus(x) | Impeccable(x) | Vumpus(x)) -> Lempus(x))", "(all x.((Sterpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(x))", "all x y.((Sterpus(x) | Imperative(x) | Vumpus(x)) -> Lempus(y))", "all x.((Sterpus(x) | Impossible(x) | Vumpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_validation_376", "nl": "Rex is a brimpus and a tumpus and an impus.", "fol": "(brimpus(Rex) & tumpus(Rex) & impus(Rex))", "prediction": ["all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Impossible(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & Imperator(y)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "all x y.((Rex(x) & Brimpus(y)) -> (Tumpus(x) & Imperator(x)))", "(Brimpus(rex) & Tumpus(rex) & Imperator(rex))", "(all x.(Rex(x) -> Brimpus(x)) & (Tumpus(x) & Issue(x)))", "all x y.(Rex(x) -> (Brimpus(x) & Tumpus(y) & Imperator(x)))", "all x.(Rex(x) -> (Brimpus(x) & Tumpus(x) & Imperator(x)))", "(all x.(Rex) -> Brimpus(x)) & all y.(Tumpus(y) & Imperator(y)))", "exists x.(Rex(x) & Brimpus(x) & Tumpus(x) & Imperator(x))", "(all x.(Rex(x) -> Brimpus)) & (Tumpus(x) -> Impossible(x)))", "(all x.(Rex(x) -> Brimpus(x)) & all y.(Tumpus(y) & -Impossible(y))))", "all x.(Rex(x) -> (Brumpus(x) & Tumpus(x) & Issue(x)))", "all x.(Rex(x) -> (Brimpus(x) | Tumpus(x) | Imperator(x)))", "all x.(Rex(x) -> (Brumpus(x) & Tumpus(x) & Imperator(x)))"]}
{"id": "prontoqa_validation_377", "nl": "Rex is a lempus.", "fol": "lempus(Rex)", "prediction": ["all x.(Rex(x) -> Lempus(x))", "Rex is a lempus.", "Rex is Lempus.", "all x.(Rex(x) -> Lempus(x))", "(Lempus(Rex) & Lempus(Rex))", "Rex is a Lempus.", "Rex.(Lempus(Rex))", "Rex is Lempus(x)", "all x.(Rex(x) -> Lempus(x))", "(Lempus(rex) & Lempus(rex))", "Rex (Lempus)", "All x.(Rex(x) -> Lempus(x))", "all x.(Rex(x) -> Lempus(x))", "All x.(Rex(x) -> Lempus(x))", "all x.(Rex(x) -> Lempus(x))", "All x.(Rex(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_378", "nl": "Tumpuses are zumpuses and impuses and yumpuses.", "fol": "all x. (tumpus(x) -> (zumpus(x) & impus(x) & yumpus(x)))", "prediction": ["all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "(all x.(Tumpus(x) -> Zumpus(x)) & all y.(Issue(y) -> Yumpus(y)))", "all x.(Tumpus(x) -> (Tompus(x) & Issue(x) & Yumpus(x)))", "(all x.(Tumpus(x) -> Tossus(x)) & all y.(Issue(y) -> Issue(y))) & all z.(Yumpus(z) -> Issue(z)))", "(all x.(Tumpus(x) -> Zumpus(x)) & all y.(Issue(y) -> Issue(y))) & all z.(Yumpus(z) -> Issue(z)))", "all x y.((Tumpus(x) & Toumpus(y)) -> (Impose(x) | Yumpus(x)))", "all x y z.((Tumpus(x) & Impossible(y) & Yumpus(z)) -> (Tompus(x) | Issue(y) | Yumpus(z)))", "all x.(Tumpus(x) -> (Tompus(x) | Issue(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Zumpuse(x) | Issue(x) | Yumpuse(x)))", "all x y.((Tumpus(x) & Zumpus(y)) -> (Impose(x) | Yumpus(y)))", "all x.(Tumpus(x) -> (Tommus(x) & Issues(x) & Yumpus(x)))", "(All x.(Tumpus(x) -> Tossus(x)) & (Issue(x) | Yumpus(x)))", "(all x.(Tumpus(x) -> Zumpus(x)) & (Impose(x) | Yumpus(x)))", "all x.(Tumpus(x) -> (Zumpuse(x) | Impermisse(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Tompuse(x) | Issue(x) | Yumpuse(x)))", "all x.(Tumpus(x) -> (Tompus(x) | Issues(x) | Yumpuses(x)))"]}
{"id": "prontoqa_validation_379", "nl": "Alex is a tumpus.", "fol": "tumpus(Alex)", "prediction": ["all x.(Alex(x) -> Tumpus(x))", "Alex is a tumpus.", "all x.(Alex(x) -> Tumpus(x))", "Alex is tumpus.", "Alex is a tumpus.", "(Tumpus(Alex) & HasTump(Alex))", "all x.(Alex(x) -> Tumpus(x))", "Alex is tumpus.", "Alex is Tumpus.", "all x.(Alex(x) -> Tumpus(x))", "(Tumpus(Alex) & HasTumpus(Alex))", "all x.(Tumpus(x) -> Alex(x))", "all x.(Alex(x) -> Tumpus(x))", "All x.(Alex(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Alex(x))", "All x.(Alex(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_380", "nl": "Alex is an impus or a wumpus or a gorpus.", "fol": "(impus(Alex) | wumpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "(Is(Alex) | Is(Alex)) | Is(Alex) | Is(Alex)) | Is(Alex) | Is(Alex)) | Is(Alex) | Is(Alex))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "(Impossible(Alex) | Wumpus(Alex) | Gorpus(Alex))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x))))", "(Is(Alex) | Is(Alex))) | (Is(Alex) | IsWumpus(Alex) | Is(Alex))))", "all x y.((Alex(x) & Is(x,y)) | (Is(x,y) | Is(x,y))))", "(Impossible(Alex) | Wumpus(Alex) | Gorpus(Alex))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Issue(x) | (Wumpus(x) | Gorpus(x))))", "all x y.((Alex(x) & Impossible(x)) | (Wumpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Issue(x) | IsWumpus(x) | IsGorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))", "exists x.(Alex(x) & IsImpossible(x) & (Wumpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Impossible(x) | Wumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_381", "nl": "Jompuses are sterpuses, dumpuses, and lempuses.", "fol": "all x. (jompus(x) -> (sterpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x y z.((Jompuse(x) & Sterpuse(y) & Dumpuse(z)) -> (Sterpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "all x y.((Jompuse(x) & Sterpuse(y)) -> (Dumpsus(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterus(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "(exists x.(Jompuse(x) & Sterpuse(x)) & exists y.(Dumpuse(y) & Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Steruse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpsuse(y) & Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jimpus(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "(all x.(Jompuse(x) -> Sterpuse(x)) & all y.(Dumpuse(y) -> Lempuse(y)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))", "all x.(Jompuse(x) -> (Sterpuse(x) | Dumpuse(x) | Lempuse(x)))"]}
{"id": "prontoqa_validation_382", "nl": "Alex is not a lempus and Alex is a numpus and Alex is a gorpus.", "fol": "(-lempus(Alex) & numpus(Alex) & gorpus(Alex))", "prediction": ["all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y)) & all z.(Alex(z) -> Gorpus(z))))", "all x.(Alex(x) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z)))", "(all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> -Lempus(x)) & ((Alex(x) & Numpus(x)) -> Gorpus(x)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "all x y.((Alex(x) & Lempus(y) & Numpus(y)) -> (-Lempus(x) & Numpus(y) & Gorpus(y)))", "(-Lempus(Alex) & Numpus(Alex) & Gorpus(Alex))", "all x.(Alex(x) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & -Numpus(x) & -Gorpus(x)))", "(all x y.(Lempus(x) -> -Lempus(x)) & (Numpus(y) -> Gorpus(y)))", "(all x.(Alex(x) -> -Lempus(x)) & all y.(Alex(y) -> Numpus(y))) & all z.(Alex(z) -> Gorpus(z)))", "(all x.(Alex(x) -> -Lempus(x)) & (Alex(x) -> Numpus(x)) & (Alex(x) -> Gorpus(x)))", "all x.(Alex(x) -> (-Lempus(x) & Numpus(x) & Gorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Numpus(z)) -> (-Lempus(x) & Numpus(y) & Gorpus(z)))"]}
{"id": "prontoqa_validation_383", "nl": "Each tumpus is not a jompus.", "fol": "all x. (tumpus(x) -> -jompus(x))", "prediction": ["all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "(-jompus(tumpus) & -Tumpus(tumpus,tumpus))", "(-Jompus(tumpus,tumpus))", "(all x.(Tumpus(x) -> -Jompus(x)))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x y.((Tumpus(x) & Jompus(y)) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jompus(x))", "all x.(Tumpus(x) -> -Jumpus(x))", "all x.(Tumpus(x) -> -Jimpus(x))", "exists x.(Tumpus(x) & -Jumpus(x))", "exists x.(Tumpus(x) & -jompus(x))"]}
{"id": "prontoqa_validation_384", "nl": "Numpuses are jompuses.", "fol": "all x. (numpus(x) -> jompus(x))", "prediction": ["all x.(Numpus(x) -> Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "(Jompuse(n) & Numpus(n))", "all x y.((Numpus(x) & Jombus(y)) -> Has(x,y))", "(Jompuse(Numpus) & -Jockuse(Numpus))", "all x.(Numpus(x) -> Jompuse(x))", "(Jumpuse(n) & Numpuse(n))", "all x.(Numptus(x) -> Jompuse(x))", "all x y.((Numpuse(x) & Jompuse(y)) -> -Jompuse(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numptus(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jombus(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jompus(x))", "all x.(Numpuse(x) -> Jompuse(x))", "all x.(Numpus(x) -> Jombus(x))"]}
{"id": "prontoqa_validation_385", "nl": "Fae is a tumpus.", "fol": "tumpus(Fae)", "prediction": ["all x.(Fae(x) -> Tumpus(x))", "-Tumpus(Fae)", "Fae is a tumpus.", "(Tumpus(Fae) & HasTumpus(Fae))", "all x.(Fae(x) -> Tumpus(x))", "Fae is a tumpus.", "(Tumpus(Fae) & Tumpus(Fae))", "all x.(Fae(x) -> Tumpus(x))", "(Tumpus(fae) & HasTump(fae,fae))", "(Tumpus(fe) & Tumpus(fe))", "all x.(Fae(x) -> Tumpus(x))", "(Tumpus(fee) & Tumpus(fee))", "exists x.(Tumpus(x) & Fae(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))", "all x.(Fae(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_386", "nl": "Fae is a lorpus, Fae is an impus, or Fae is not a numpus.", "fol": "(lorpus(Fae) | impus(Fae) | -numpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Issue(x)) | (Fae(x) -> -Numpus(x))))", "all x.(Fae(x) -> (Lorpus(x) | Impossible(x) | -Numpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Is(x,y)) | (Is(x,z) | -Numpus(z))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Issue(x)) | (Fae(x) -> -Numpus(x))))", "all x y.((Fae(x) & Lorpus(x)) | (Fae(y) & Impossible(y)) | (Fae(y) & -Numpus(y))))", "(all x y.(Fae(x) -> Lorpus(x)) & (Fae(y) -> Issue(y)) | (Fae(y) -> -Numpus(y))))", "(exists x.(Fae(x) & Lorpus(x)) | exists y.(Fae(y) & IsImpossible(y))) | exists z.(Fae(z) & -Numpus(z))))", "(all x.(Fae(x) -> Lorpus(x)) | (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "all x.(Fae(x) -> (Lorpus(x) | Imperator(x) | -Numpus(x)))", "(all x.(Fae(x) -> Loomis(x)) | (Fae(x) -> Issuel(x)) | (Fae(x) -> -Numpus(x))))", "exists x.(Fae(x) & ((Lorpus(x) & Fae(x)) | (Impossible(x) | -Numpus(x)))))", "all x.(Fae(x) -> (Lorpus(x) | IsImpossible(x) | -Numpus(x)))", "all x y z.((Fae(x) & Lorpus(y) & Impossible(z)) -> (Lorpus(x) | Imperator(x) | -Numpus(x)))", "all x y.((Fae(x) & Lops(x)) | (Fae(y) & Is(y)) | (-Numpus(y))))", "(all x.(Fae(x) -> Lorpus(x)) & (Fae(x) -> Imperator(x)) | (Fae(x) -> -Numpus(x))))", "exists x.(Fae(x) & ((Lorpus(x) & Fae(x)) | Is(x)) | -Numpus(x)))"]}
{"id": "prontoqa_validation_387", "nl": "Sterpuses are not dumpuses.", "fol": "all x. (sterpus(x) -> -dumpus(x))", "prediction": ["all x.(Sterpus(x) -> -Dumpuse(x))", "(all x.(Sterpuse(x) -> -Dumpuse(x)))", "-Dumpuse(sterpuses)", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Stupid(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpsus(x))", "-Dumpsus(sterpuses)", "(all x.(Sterpus(x) -> -Dumpsus(x)))", "(all x.(Sterpuse(x) -> -Dumpuse(x)))", "all x.(Sterpus(x) -> -Dumpuse(x))", "-Dumpuse(sterpuses)", "all x.(Stupid(x) -> -Dumpuse(x))", "all x.(Sterpus(x) -> -Dumpuse(x))", "all x.(Stupid(x) -> -Dumpsus(x))", "all x.(Sterpus(x) -> -Dumuse(x))"]}
{"id": "prontoqa_validation_388", "nl": "Everything that is a vumpus or a grimpus or a yumpus is a dumpus.", "fol": "all x. ((vumpus(x) | grimpus(x) | yumpus(x)) -> dumpus(x))", "prediction": ["all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x y.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(y))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "(all x.((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x y.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(y))", "all x.((Vimpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))", "all x.(((Vumpus(x) | Grimpus(x) | Yumpus(x))) -> Dumpus(x))", "all x.((Vumpus(x) | Grimpus(x) | Yumpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_validation_389", "nl": "Stella is a tumpus and a gorpus and a sterpus.", "fol": "(tumpus(Stella) & gorpus(Stella) & sterpus(Stella))", "prediction": ["all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) | Sterpus(x))))", "(Tumpus(Stella) & Gorpus(Stella) & Sterpus(Stella))", "all x y.((Stella(x) & Tumpus(y)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Gorpus(y) & All z.(Sterpus(z))) -> Sterpus(z)))", "all x y z.((Stella(x) & Tumpus(y) & Gorpus(z)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "all x y.((Stella(x) & Tumpus(y)) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(Tumpus(Stella) & Gorpus(Stella) & Sterpus(Stella))", "(Tumpus(Stella) | Gorpus(Stella) | Sterpus(Stella))", "exists x.(Tumpus(x) & Gorpus(x) & Sterpus(x))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & (Gorpus(x) | Sterpus(x))))", "all x.(Stella(x) -> (Tumpus(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Stella(x) -> Tumpus(x)) & all y.(Gorpus(y) & -Sterpus(y))))", "exists x.(Tumpus(x) & Gorpus(x) & Sterpus(x))"]}
{"id": "prontoqa_validation_390", "nl": "Every brimpus is a tumpus, a zumpus, and a lorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Lorpus(z))))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Lorpus(z))))", "all x y z.(Brimpus(x) -> (Tumpus(y) | Zumpus(y) | Lorpus(z)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.(Brumpus(x) -> Tumpus(x)) & (Tompus(x) | Zumpus(x) | Lorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Tompus(y) -> Zumpus(y)) & all z.(Lorpus(z) -> Lorpus(z))))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) & Zumpus(x) & Lorpus(x)))", "exists x.(Brimpus(x) & Tumpus(x) & Zumpus(x) & Lorpus(x))", "exists x.(Brimpus(x) & (Tumpus(x) | Zumpus(x) | Lorpus(x)))", "all x.(Brimpus(x) -> (Tumpus(x) | Zumpus(x) | Lorpus(x)))"]}
{"id": "prontoqa_validation_391", "nl": "Stella is a lempus, Stella is a dumpus, and Stella is not a lorpus.", "fol": "(lempus(Stella) & dumpus(Stella) & -lorpus(Stella))", "prediction": ["(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & (Stella(x) -> -Lorpus(x)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & Dumpus(y))) & ((Stella(z) & -Lorpus(z))) -> (Dumpus(z) & -Lempus(z))))", "(all x.(Lempus(x) -> Stella(x)) & (Dumpus(x) -> Stella(x)) & -Lorpus(x)))", "(all x y z.((Stella(x) & Lempus(x)) -> (Lempus(x) & Dumpus(y)) & ((Stella(z) & -Lorpus(z))) -> (Dumpus(z) & -Lempus(z))))", "exists x.(Stella(x) & Lempus(x) & Dumpus(x) & -Lorpus(x))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & (Stella(x) -> Dumpus(x)) & -Lorpus(x)))", "all x.(Stella(x) -> (Lempus(x) & Dumpus(x) & -Lorpus(x)))", "(all x y z.(Lempus(x) -> Stella(x)) & (Dumpus(y) -> Stella(z)) & (Lorpus(z) -> Stella(z)))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) & Dumpus(y) & -Lorpus(z)))", "all x y z.(Lorpus(x) -> (Lempus(x) | Dumpus(y) | -Lorpus(z)))", "(all x.(Stella(x) -> Lempus(x)) & all y.(Stella(y) -> Dumpus(y)) & all z.(Stella(z) -> -Lorpus(z))))", "all x y z.((Stella(x) & Lempus(x) & Dumpus(y) & -Lorpus(z)) -> (Lempus(x) | Dumpus(y) & -Lorpus(z)))", "(all x.(Lempus(x) & Dumpus(x)) -> -Lorpus(x))"]}
{"id": "prontoqa_validation_392", "nl": "Everything that is a tumpus or an impus or a lempus is a brimpus and a rompus and a sterpus.", "fol": "all x. ((tumpus(x) | impus(x) | lempus(x)) -> (brimpus(x) & rompus(x) & sterpus(x)))", "prediction": ["all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | IsImpos(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.(((Tumpus(x) | Impossible(x) | Lempus(x))) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x y.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(y) & Rompus(y) & Sterpus(y)))", "(all x.((Tumpus(x) | IsImpos(x) | IsLempus(x))) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "(all x.((Tumpus(x) | Impossible(x) | Lempus(x))) -> Brimpus(x)) & all y.((Rompus(y) & Sterpus(y)) -> Brimpus(y)))", "all x.((Tumpus(x) | IsIsIsIs(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x y.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(y) & Rompus(y) & Sterpus(y)))", "all x.(Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x y.((Tumpus(x) | IsImpos(x) | Lempus(x)) -> (Brimpus(y) & Rompus(y) & Sterpus(y)))", "all x.((Tumpus(x) | Impossible(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | IsImpos(x) | IsLempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))", "all x.((Tumpus(x) | Imperator(x) | Lempus(x)) -> (Brimpus(x) & Rompus(x) & Sterpus(x)))"]}
{"id": "prontoqa_validation_393", "nl": "Stella is a lempus.", "fol": "lempus(Stella)", "prediction": ["Stella is a lempus.", "all x.(Stella(x) -> Lempus(x))", "Stella is Lempus(Stella)", "all x.((Stella(x) & Lempus(x)) -> Lempus(x))", "Stella is a lempus.", "all x.(Stella(x) -> Lempus(x))", "(Lempus(Stella))", "(Lempus(Stella) & Lempus(Stella))", "Stella is a Lempus.", "all x.(Stella(x) -> Lempus(x))", "Stella is Lempus.", "Stella ist ein Lempus.", "all x.(Lempus(x) -> Stella(x))", "Stella (Lempus)", "Stella is a lempus.", "(Lempus(Stella))"]}
{"id": "prontoqa_validation_394", "nl": "Stella is a rompus.", "fol": "rompus(Stella)", "prediction": ["Stella is a rompus.", "all x.(Stella(x) -> Rompus(x))", "(Rompus(Stella) & -Rompus(Stella))", "Stella is a Rompus.", "all x.(Stella(x) -> Rompus(x))", "(Rompus(Stella) & -Rompus(Stella))", "Stella is a rompus.", "(Rompus(Stella) & HasRompus(Stella))", "all x.(Stella(x) -> Rompus(x))", "Stella is a Rompus.", "Stella (Rompus)", "(Rompus(Stella) & Rompus(Stella))", "Stella is rompus.", "all x.(Stella(x) -> Rompus(x))", "Stella ist ein Rompus.", "Stella is a rompus."]}
{"id": "prontoqa_validation_395", "nl": "Tumpuses are lempuses, dumpuses, and numpuses.", "fol": "all x. (tumpus(x) -> (lempus(x) & dumpus(x) & numpus(x)))", "prediction": ["all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x y z.((Tumpuse(x) & Lempuse(y) & Dumpuse(z)) -> (Lempuse(x) | Dumpuse(z) | Numpuse(z)))", "(all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x))))", "(all x.(Tumpuse(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x y.((Tumpuse(x) & Lempuse(y)) -> (Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpus(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpuse(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x.(Tumpus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "(all x.(Tumpus(x) -> Lempuse(x)) & all y.(Dumpuse(y) -> Numpuse(y)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumulus(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))", "all x.(Tumpuse(x) -> (Lempuse(x) | Dumpuse(x) | Numpuse(x)))"]}
{"id": "prontoqa_validation_396", "nl": "Wren is a tumpus.", "fol": "tumpus(Wren)", "prediction": ["all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(Wren) & HasTump(Wren,Tumpus))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(wren) & Tumpus(wren))", "(Tumpus(wren) & HasTumpus(wren,x))", "(Tumpus(wren) & Tumpus(wren) & HasTumpus(wren,w))", "all x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))", "(Tumpus(wren) -> Tumpus(wren))", "all x.(Wren(x) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "exists x.(Tumpus(x) & Wren(x))", "all x.(Wren(x) -> Tumpus(x))", "All x.(Wren(x) -> Tumpus(x))", "all x.(Wren(x) -> Tumpus(x))"]}
{"id": "prontoqa_validation_397", "nl": "Wren is a yumpus, a lorpus, or a dumpus.", "fol": "(yumpus(Wren) | lorpus(Wren) | dumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "(Yumpus,Lorpus,Dumpus)", "all x y.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "(yumpus) | lorpus(y) | dumpus(y))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "(Yumpus,Lorpus,Dumpus)", "all x y.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lops(x) | Dumpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Lorpus(x) | Dumpus(x)))", "exists x.(Wren(x) & (yumpus(y) | lorpus(y) | dumpus(y)))", "exists x.(Wren(x) & (Yumpus(x) | Lordpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_validation_398", "nl": "Everything that is a wumpus, a lorpus, or an impus is a rompus.", "fol": "all x. ((wumpus(x) | lorpus(x) | impus(x)) -> rompus(x))", "prediction": ["all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "(all x.((Wumpus(x) | Lorpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsI(x)))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x.(((Wumpus(x) | Lorpus(x) | Imperator(x))) -> Rompus(x))", "all x.((Wumpus(x) | Lordpus(x) | IsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsIsII(x)))", "all x y.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(y))", "all x.(((Wumpus(x) | Lorpus(x) | Imperator(x))) -> Rompus(x))", "all x.(((Wumpus(x) | Lorpus(x) | Impossible(x))) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Impossible(x)) -> Rompus(x))", "all x y.((Wumpus(x) | Lorpus(x) | Imperator(x)) -> Rompus(y))", "all x.((Wumpus(x) | Lorpus(x) | IsImpossible(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lorpus(x) | Imperative(x)) -> Rompus(x))", "all x.((Wumpus(x) | Lordpus(x) | Impossible(x)) -> Rompus(x))"]}
{"id": "prontoqa_validation_399", "nl": "Wren is a lorpus and a vumpus and a jompus.", "fol": "(lorpus(Wren) & vumpus(Wren) & jompus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(Lorpus(w) & Vumpus(w) & Jompus(w))", "all x y z.((Wren(x) & Lorpus(y) & Vumpus(z)) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "all x y.((Wren(x) & Lorpus(y)) -> (Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & all y.(Vumpus(y) & -Vumpus(y))) & all z.(Wren(z) -> Jompus(z)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & (Vumpus(x) | Jompus(x)))", "(Lorpus(w) & Vumpus(w) & Jompus(w))", "(Lorpus(w) | Vumpus(w) | Jompus(w)))", "all x y.(Wren(x) -> (Lorpus(x) & Vumpus(y) & Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "exists x.(Wren(x) & Lorpus(x) & Vumpus(x) & Jompus(x))", "all x.(Wren(x) -> (Lorpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Wren(x) -> (Lorpus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Wren(x) -> Lorpus(x)) & (Vumpus(x) | Jompus(x)))", "exists x.(Wren(x) & Lorpus(x) & Vumpus(x) & Jompus(x))"]}
{"id": "prontoqa_validation_400", "nl": "Everything that is a zumpus or a shumpus or a vumpus is a sterpus.", "fol": "all x. ((zumpus(x) | shumpus(x) | vumpus(x)) -> sterpus(x))", "prediction": ["all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x y.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(y))", "all x.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x y.((Tompus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(y))", "all x.((Zumpus(x) | Humpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Vampus(x)) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Vumpus(x)) -> Sterepus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterpus(x))", "(all x.((Tompus(x) | Humpus(x) | Vampus(x))) -> Stereoscopic(x))", "all x.(((Tompus(x) | Humpus(x) | Vampire(x))) -> Sterpus(x))", "all x.((Zumpus(x) | Humpus(x) | Voompus(x)) -> Sterpus(x))", "all x.((Tompus(x) | Shumpus(x) | Vumpus(x)) -> Sterepus(x))", "all x.((Tommus(x) | Shumpus(x) | Voompus(x)) -> Sterpus(x))"]}
{"id": "prontoqa_validation_401", "nl": "Max is a sterpus, a vumpus, and a jompus.", "fol": "(sterpus(Max) & vumpus(Max) & jompus(Max))", "prediction": ["all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) & -Jompus(y)))", "(Sterpus(Max) | Vumpus(Max) | Jompus(Max))", "(exists x.(Max(x) & Sterpus(x)) & exists y.(Vumpus(y) & Voompus(y)) & exists z.(Jompus(z) & -Sterpus(z))))", "all x y z.((Max(x) & Sterpus(y) & Vumpus(z)) -> (Sterpus(x) | Jompus(x)))", "(All x.(Max(x) -> Sterpus(x)) & (Vumpus(x) & Jompus(x)))", "(Sterpus(Max) & Vumpus(Max) & Jompus(Max))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "all x.(Max(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vumpus(y) & -Jimpus(y)))", "(All x.(Max(x) -> Sterpus(x)) & (Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "all x.(M Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))", "(all x.(Max(x) -> Sterpus(x)) & all y.(Vimpus(y) -> Jompus(y)))", "all x.(Max(x) -> (Sterepus(x) & Vumpus(x) & Jompus(x)))", "all x.(Max(x) -> (Sterpus(x) | Vumpus(x) | Jompus(x)))"]}
{"id": "prontoqa_validation_402", "nl": "Max is a sterpus.", "fol": "sterpus(Max)", "prediction": ["all x.(Max(x) -> Sterpus(x))", "(Sterpus(Max) & Sterpus(Max))", "Max is sterpus.", "all x.(Max(x) -> Sterpus(x))", "Max is a sterpus.", "all x.((Max(x) & Sterpus(x)) -> Sterpus(x))", "Max is sterpus.", "(Sterpus(Max) & Sterpus(Max))", "All x.(Matt(x) -> Sterpus(x))", "-Sterpus(Max)", "all x.(Max(x) -> Sterpus(x))", "Max is Sterpus.", "(Sterepus(Max) -> Sterpus(Max))", "(Sterpus(Max) & Sterpis(Max))", "all x.(Max(x) -> Sterpus(x))", "(Sterepus(Max))"]}
{"id": "prontoqa_validation_403", "nl": "Everything that is a lorpus or a brimpus or a grimpus is not a lempus.", "fol": "all x. ((lorpus(x) | brimpus(x) | grimpus(x)) -> -lempus(x))", "prediction": ["all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.(((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x y.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(y))", "all x.(Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "(all x.((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.(((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "(all x.((Lorpus(x) | Brimpus(x) | Grimpus(x))) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Lempus(x))", "all x.((Lorpus(x) | Brimpus(x) | Grimpus(x)) -> -Limpus(x))"]}
{"id": "prontoqa_validation_404", "nl": "Every rompus is a shumpus and a lempus and a dumpus.", "fol": "all x. (rompus(x) -> (shumpus(x) & lempus(x) & dumpus(x)))", "prediction": ["all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "all x y.((Rompus(x) & Shumpus(y)) -> (Lempus(x) & Dumpus(x)))", "(all x.(rompus(x) -> Humpus(x)) & all y.(rompus(y) -> Lempus(y) & all z.(rompus(z) -> Dumpus(z))))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Humpus(y)) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "exists x.(rompus(x) & Humpus(x) & Lempus(x) & Dumpus(x))", "(all x.(Rompus(x) -> Humpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "(all x.(Rompus(x) -> Humpus(x)) & (Lempus(x) -> Dumpus(x)))", "(all x.(Rompus(x) -> Shumpus(x)) & all y.(Lempus(y) -> Dumpus(y)))", "exists x.(rompus(x) & Humpus(x) & Lempus(x) & Dumpus(x))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) | Lempus(x) | Dumpus(x)))", "all x.(Rompus(x) -> (Shumpus(x) & Lempus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_405", "nl": "Fae is a brimpus.", "fol": "brimpus(Fae)", "prediction": ["all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "Fae is a Brimpus.", "(Brimpus(Fae) & Brimpus(Fae))", "Fae is a Brimpus.", "all x.(Fae(x) -> Brimpus(x))", "(Brimpus(fae) & Brimpus(fae))", "(Brumpus(fee) & HasBrimpus(fee,fee))", "all x.(Fae(x) -> Brimpus(x))", "(Brimpus(fee) & Brimpus(fee))", "all x.(Fae(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))", "(Brimpus)", "All x.(Famous(x) -> Brimpus(x))", "all x.(Fampus(x) -> Brimpus(x))", "all x.(Fae(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_406", "nl": "Fae is not a rompus.", "fol": "-rompus(Fae)", "prediction": ["(-Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "Fae is not a rompus.", "-Rompus(Fae)", "all x.(Fae(x) -> -Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "(-Rompus(Fae))", "-rompus(Fae)", "(Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "-Rompus(Fae)", "(Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> -Rompus(x))", "-Rompus(Fae)", "-Rompus(fae,f)"]}
{"id": "prontoqa_validation_407", "nl": "Everything that is a lorpus, a shumpus, and a vumpus is a grimpus and a lempus and a wumpus.", "fol": "all x. ((lorpus(x) & shumpus(x) & vumpus(x)) -> (grimpus(x) & lempus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Lorpus(x) & Humpus(y) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y z.((Lorpus(x) & Humpus(y) & Vumpus(z) & Lorpus(x) & Shumpus(y) & Vumpus(z)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Humpus(x)) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Lorpus(x) & Shumpus(y) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x y.((Lorpus(x) & Humpus(y) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Shumpus(x) | Vumpus(x))) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Humpus(x) | Vumpus(x)) -> (Smoochus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Shumpus(x) | Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Humpus(x)) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))", "all x.((Lorpus(x) & Humpus(x) & Vumpus(x)) -> (Grimpus(x) & Lempus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_408", "nl": "Fae is a shumpus.", "fol": "shumpus(Fae)", "prediction": ["all x.(Fae(x) -> Humpus(x))", "Fae is a shumpus.", "(Shumpus(Fae) & HasShump(Fae))", "all x.(Fae(x) -> Humpus(x))", "(Shumpus(Fae) & Shumpus(Fae))", "all x.(Fae(x) -> Humpus(x))", "all x.(Fae(x) -> Shumpus(x))", "(Shumpus(fee) & Shumpus(fee))", "(Shumpus(fee) & HasShump(fee,fee))", "all x.(Fae(x) -> Humptus(x))", "(Shumpus(fe) & HasShump(fe))", "all x.(Fae(x) -> Humptus(x))", "all x.(Fae(x) -> Shumpus(x))", "exists x.(Shumpus(x) & Fae(x))", "(Shumpus)", "All x.(Fae(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_409", "nl": "Fae is a vumpus.", "fol": "vumpus(Fae)", "prediction": ["all x.(Fae(x) -> Vumpus(x))", "(Vumpus(Fae) & -Vumpus(Fae))", "Fae is a Vumpus.", "(Vumpus(Fae) & -Vumpus(Fae))", "all x.(Fae(x) -> Vumpus(x))", "-Vumpus(Fae)", "(Vumpus(fee) & Vumpus(fee))", "all x.(Fae(x) -> Vumpus(x))", "(Vumpus(fe) & -Vumpus(fe) & -Vumpus(fe))", "(Vimpus(fae) -> Vumpus(fae))", "all x.(Fae(x) -> Vampus(x))", "all x.(Fae(x) -> Vumpus(x))", "all x.(Fae(x) -> Vampus(x))", "all x.(Fae(x) -> Vumpus(x))", "exists x.(Fae(x) & Vulmpus(x))", "exists x.(Fae(x) & Vampire(x))"]}
{"id": "prontoqa_validation_410", "nl": "Fae is a grimpus.", "fol": "grimpus(Fae)", "prediction": ["all x.(Fae(x) -> Grimpus(x))", "(Grimpus(Fae) & Grimpus(Fae))", "Fae is a Grimpus.", "-Fae(f) & Grimpus(f))", "(Gruppus(Fae) & Grimpus(Fae))", "all x.(Fae(x) -> Grimpus(x))", "(Fae isGrimpus(Fae))", "Fae is a Grimpus.", "(Grimpus(Fae))", "all x.(Fae(x) -> Grimpus(x))", "Fae is a Grimpus.", "(Grimpus(fae) & Grimpus(fae))", "all x.(Fae(x) -> Grimpus(x))", "all x.(Fae(x) -> Gruppus(x))", "(Grampus(fee) & Grimpus(fee))", "all x.(Fae(x) -> Grimpus(x))"]}
{"id": "prontoqa_validation_411", "nl": "Each zumpus is a lempus, a tumpus, and a numpus.", "fol": "all x. (zumpus(x) -> (lempus(x) & tumpus(x) & numpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & all y.(Tumpus(y) & all z.(Numpus(z)) -> Numpus(z))))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x y z.((Zumpus(x) & Lempus(y) & Tumpus(z)) -> (Tumpus(x) & Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x y.((Zumpus(x) & Lempus(y)) -> (Tumpus(x) & Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & all y.(Tumpus(y) & all z.(Numpus(z) & -Lempus(y)) & all z.(Tumpus(z) & -Tumpus(z))))", "(all x.(Tompus(x) -> Lempus(x)) & all y.(Tompus(y) -> Tumpus(y)) & all z.(Tompus(z) -> Numpus(z))))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))", "all x.(Zumpus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "(all x.(Zumpus(x) -> Lempus(x)) & (Tumpus(x) | Numpus(x))))", "exists x.(Zumpus(x) & Lempus(x) & Tumpus(x) & Numpus(x))", "all x.(Tompus(x) -> (Lempus(x) | Tumpus(x) | Numpus(x)))", "exists x.(Zumpus(x) & Lempus(x) & Tumpus(x) & Numpus(x))", "all x.(Tompus(x) -> (Lempus(x) & Tumpus(x) & Numpus(x)))"]}
{"id": "prontoqa_validation_412", "nl": "Stella is a zumpus.", "fol": "zumpus(Stella)", "prediction": ["Stella is a zumpus.", "all x.(Stella(x) -> Zumpus(x))", "Stella is zumpus.", "(Zumpus(Stella) & Has(Stella))", "Stella is a zumpus.", "(Zumpus(Stella) & HasStella(Stella))", "all x.(Stella(x) -> Zumpus(x))", "(Zombie(Stella) & Tosso(Stella))", "Stella is zumpus.", "Stella is zumpus(Stella)", "Stella is a zumpus.", "Stella ist ein Zumpus.", "all x.(Stella(x) -> Zumpus(x))", "(Tompus(Stella))", "all x.(Zumpus(x) -> Stella(x))", "Stella (zumpus)"]}
{"id": "prontoqa_validation_413", "nl": "Stella is a wumpus, a numpus, or a lempus.", "fol": "(wumpus(Stella) | numpus(Stella) | lempus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x y.((Stella(x) & (Wumpus(y) | Numpus(y) | Lempus(y))) -> (Wumpus(x) | Numpus(y) | Lempus(y)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "(Wumpus,numpus,lempus) | Nompus(Stella))", "all x.((Stella(x) & (Wumpus(x) | Numpus(x) | Lempus(x))) -> Stella(x))", "(all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x))))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "(Wumpus(Stella) | Numpus(Stella) | Lempus(Stella))", "(Wumpus,numpus,lempus) | Numpus(Limpus))", "exists x.(Wumpus(x) | Numpus(x) | Lempus(x))", "exists x.(Stella(x) & ((Wumpus(x) & -numpus(x)) | (-Wumpus(x) & Numpus(x)))))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "exists x.(Wumpus(x) | Numpus(x) | Lempus(x))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))", "all x.(Stella(x) -> (Wumpus(x) | Numpus(x) | Lempus(x)))"]}
{"id": "prontoqa_validation_414", "nl": "Every lempus is a sterpus.", "fol": "all x. (lempus(x) -> sterpus(x))", "prediction": ["all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "(all x.(Lempus(x) -> Sterpus(x))", "all x y.((Lempus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x y.((Lempus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterepus(x))", "all x.(Limpus(x) -> Sterepus(x))", "all x.(Lempus(x) -> Sterpus(x))", "exists x.(Lempus(x) & Sterus(x))", "all x.(Limpus(x) -> Sterpus(x))", "all x.(Lempus(x) -> Sterpus(x))", "exists x.(Limpus(x) & Steroid(x))", "exists x.(Lempus(x) & Sterpus(x))"]}
{"id": "prontoqa_validation_415", "nl": "Alex is a gorpus, a lempus, and a numpus.", "fol": "(gorpus(Alex) & lempus(Alex) & numpus(Alex))", "prediction": ["all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lempus(y) & -Numpus(y)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) & Lempus(z) & Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "(Gorpus(Alex) | Lempus(Alex) | Numpus(Alex))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lempus(y) & -Numpus(y)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x y z.((Alex(x) & Gorpus(y) & Lempus(z)) -> (Gorpus(x) | Numpus(x)))", "(Gorpus(Alex) | Lempus(Alex) | Numpus(Alex))", "(all x.(Alex(x) -> Gorpus(x)) & all y.(Lempus(y) & -Nompus(y)))", "(Gorpus,Lempus,Numpus)", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) & Lempus(x) & Numpus(x)))", "exists x.(Alex(x) & Gorpus(x) & Lempus(x) & Numpus(x))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))", "all x.(Alex(x) -> (Gorpus(x) | Lempus(x) | Numpus(x)))"]}
{"id": "prontoqa_validation_416", "nl": "Alex is a lorpus or a sterpus or a gorpus.", "fol": "(lorpus(Alex) | sterpus(Alex) | gorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "(Lorpus(Alex) | Sterpus(Alex) | Gorpus(Alex))", "all x y.((Alex(x) & Lorpus(y)) | (Sterpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "(Lorpus,lorpus,sterpus,gorpus)", "(Lorpus(Alex) | Sterpus(Alex) | Gorpus(Alex))", "all x y.((Alex(x) & Lorpus(y)) | (Sterpus(x) | Gorpus(x))))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "(Lorpus) | Sterpus(Alex) | Gorpus(Alex))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "exists x.(Lorpus(x) | Sterpus(x) | Gorpus(x))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterpus(x) | Gorpus(x)))", "all x.(Alex(x) -> (Lorpus(x) | Sterepus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_417", "nl": "Everything that is an impus, a rompus, and a yumpus is a gorpus and a grimpus and a tumpus.", "fol": "all x. ((impus(x) & rompus(x) & yumpus(x)) -> (gorpus(x) & grimpus(x) & tumpus(x)))", "prediction": ["all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposs(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Rompus(y) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.((Imposs,y) & -Imposs,y) & -Rompus,y)) -> Gorpus(x)) & ((Imposs,y) & Grimpus(x)) & ((Imposs,y) & -Imposs,y)) | (-Imposs,y) & -Impossible(y)))))", "all x.((Imposs,Rompus,Yumpus) & Grimpus(x) & Tumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y z.((Impos(x) & Rompus(y) & Yumpus(z) & Is(x,y)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Impose(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Issue(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Imposer(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Rompus(x) & Yumpus(y)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.((Imposs,y) & -Imposs,y) & -Rompus,y) & -Yumpus(y)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Rompus(y) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.((Improvse(x) | Rompus(x) | Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "(all x.((Imposer(x) | Rompus(x) | Yumpus(x))) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))", "all x.(Impose(x) & Rompus(x) & Yumpus(x)) -> (Gorpus(x) & Grimpus(x) & Tumpus(x)))"]}
{"id": "prontoqa_validation_418", "nl": "Fae is an impus.", "fol": "impus(Fae)", "prediction": ["all x.(Fae(x) -> IsImpossible(x))", "(IsFae(f) & IsImpossible(f))", "-Impossible(Fae)", "(Impossible(Fae))", "all x.(Fae(x) -> IsImpossible(x))", "all x.(Fae(x) -> Is(x,Is(x,Is(x)))", "(Impossible(Fae,Fae))", "all x.(Fae(x) -> Impossible(x))", "(IsFae(f) & IsImpossible(f))", "all x.(Fae(x) -> Imperative(x))", "exists x.(FeaElement(x) & IsImpossible(x))", "All x.(Fae(x) -> IsImpossible(x))", "all x.(Fae(x) -> Isolated(x))", "exists x.(Fae(x) & Impossible(x))", "all x.(Fae(x) -> Implicator(x))", "All x.(Fae(x) -> Isolated(x))"]}
{"id": "prontoqa_validation_419", "nl": "Fae is a rompus.", "fol": "rompus(Fae)", "prediction": ["all x.(Fae(x) -> Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "Fae is a rompus.", "all x.(Fae(x) -> Rompus(x))", "-Rompus(Fae)", "(Rompus(Fae) & -Rompus(Fae))", "Fae is a rompus.", "(rompus(Fae) & HasRedduck(Fae))", "all x.(Fae(x) -> Rompus(x))", "(Rompus(Fae) & HasRedHole(Fae))", "(Rompus(Fae) -> Rompus(Fae))", "all x.(Fae(x) -> Rompus(x))", "(Rompus(Fae) & -Rompus(Fae))", "all x.(Fae(x) -> Rompus(x))", "All x.(Fae(x) -> Rompus(x))", "all x.(Fae(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_420", "nl": "Fae is a gorpus.", "fol": "gorpus(Fae)", "prediction": ["all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) & HasGorpus(Fae))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(Fae) & Gorpus(Fae))", "(Gorpus(fee) & Gorpus(fee))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus(fee) -> Gorpus(fee))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus)", "all x.(Fae(x) -> Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "(Gorpus)", "exists x.(Fae(x) & Gorpus(x))", "all x.(Fae(x) -> Gorpus(x))", "All x.(Fae(x) -> Gorpus(x))"]}
{"id": "prontoqa_validation_421", "nl": "Each lempus is a grimpus and a shumpus and a wumpus.", "fol": "all x. (lempus(x) -> (grimpus(x) & shumpus(x) & wumpus(x)))", "prediction": ["all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z)) -> Grimpus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> (Shumpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Humpus(x)))", "all x y z.((Lempus(x) & Grimpus(y) & Humpus(z)) -> (Grimpus(x) & Humpus(y) & Wumpus(z)))", "all x.(Lempus(x) -> (Grimpus(x) & Shumpus(x) & Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & all y.(Shumpus(y) & all z.(Wumpus(z) & -Shumpus(y))) -> Wumpus(z)))", "(all x.(Lempus(x) -> Grimpus(x)) & (Shumpus(x) | Wumpus(x)))", "all x y.((Lempus(x) & Grimpus(y)) -> (Shumpus(x) & Wumpus(x)))", "exists x.(Lempus(x) & Grimpus(x) & Humpus(x) & Wumpus(x))", "all x.(Lempus(x) -> (Smooch(x) & Humpus(x) & Wumpus(x)))", "all x.(Lempus(x) -> (Grimpus(x) & Humpus(x) & Wumpus(x)))", "all x.(Limpus(x) -> (Grimpus(x) | Shumpus(x) | Wumpus(x)))", "(all x.(Lempus(x) -> Grimpus(x)) & (Shumpus(x) | Wumpus(x)))", "exists x.(Lempus(x) & Grimpus(x) & Humpus(x) & Wumpus(x))", "exists x.(Limpus(x) & Grimpus(x) & Shumpus(x) & Wumpus(x))"]}
{"id": "prontoqa_validation_422", "nl": "Each lorpus is a yumpus.", "fol": "all x. (lorpus(x) -> yumpus(x))", "prediction": ["all x.(Lorpus(x) -> Yumpus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x y.((Lorpus(x) & Yumpus(y)) -> HasLorpus(x,y))", "all x.(Lorpus(x) -> Yumpa(x))", "(all x.(Lorpus(x) -> Yumpus(x)))", "all x.(Lorpus(x) -> Yumpus(x))", "all x y.((Lorpus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Lorph(x) -> Yumpus(x))", "exists x.(lorpus(x) & Yumpus(x))", "all x.(Lorpus(x) -> Yampus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "exists x.(lorpus(x) & Yampus(x))", "exists x.(Lorph(x) & Yampus(x))", "all x.(Lorpus(x) -> Yumpus(x))", "all x.(Larp(x) -> Yampus(x))", "exists x.(Lorpus(x) & Yampus(x))"]}
{"id": "prontoqa_validation_423", "nl": "Yumpuses are not shumpuses.", "fol": "all x. (yumpus(x) -> -shumpus(x))", "prediction": ["all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "(-Shumpus(y) & Yumpus(z))", "(all x.(Yumpuse(x) -> -Shumpus(x)))", "(all x.(Yumpus(x) -> -Shumpus(x)))", "-Shumpuse(y)", "all x y.((Yumpuse(x) & Humpback(y)) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "(all x.(Yumpuse(x) -> -Shumpus(x)))", "all x.(Yumpuse(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Umbuse(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))", "(all x.(Yumpus(x) -> -Shumpus(x)))", "all x.(Yumpus(x) -> -Shumpus(x))", "all x.(Yumpus(x) -> -Shumpus(x))"]}
{"id": "prontoqa_validation_424", "nl": "Alex is a lorpus.", "fol": "lorpus(Alex)", "prediction": ["all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "(Lorpus(Alex) & LivesIn(Alex,Lorpus))", "all x.(Alex(x) -> Lorpus(x))", "all x.(Lorpus(x) -> Alex(x))", "Alex is a lorpus.", "all x.(Alex(x) -> Llorpus(x))", "(Lorpus(Alex) & LivesIn(Alex))", "Alex is a lorpus.", "all x.(Lorpus(x) -> Alex(x))", "all x.(Alex(x) -> Lorpus(x))", "Alex is a lorpus.", "All x.(Alex(x) -> Loomis(x))", "All x.(Alex(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_425", "nl": "Each numpus is a lorpus, a shumpus, and a rompus.", "fol": "all x. (numpus(x) -> (lorpus(x) & shumpus(x) & rompus(x)))", "prediction": ["all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Shumpus(y) & all z.(Rompus(z)) -> Nompus(x)))", "all x y z.((Numpus(x) & Lorpus(y) & Humpus(z)) -> (Lorpus(x) | Humpus(z) | Rompus(z)))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Nompus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "(all x.(Numpus(x) -> Lorpus(x)) & all y.(Shumpus(y) & all z.(Rompus(z)) -> Lopus(x)))", "all x y z.((Numpus(x) & Lorpus(y) & Humpus(z)) -> (Lorpus(x) | Humpus(z) | Rompus(z)))", "(all x.(Nompus(x) -> Loomis(x)) & all y.(Shumpus(y) & All z.(Rompus(z)) -> Roose(z))))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "all x.(Numpus(x) -> (Lorpus(x) & Humpus(x) & Rompus(x)))", "(all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))", "exists x.(Numpus(x) & Lorpus(x) & Humpus(x) & Rompus(x))", "all x.(Nompus(x) -> (Lorpus(x) | Shumpus(x) | Rompus(x)))", "exists x.(Nompus(x) & Lorpus(x) & Humpus(x) & Rompus(x))", "all x.(Numpus(x) -> (Lorpus(x) | Humpus(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_426", "nl": "Max is a numpus.", "fol": "numpus(Max)", "prediction": ["all x.(Max(x) -> Numpus(x))", "Max is Numpus(Max)", "(Numpus(Max) & Numpus(Max))", "Max.(Max) -> Numpus(x))", "all x.(Max(x) -> Numpus(x))", "Max is Numpus(Max)", "(numpus(Max) & HasNums(Max))", "(Numpus(Max) & HasNumber(Max))", "Max is a Numpus.", "Max is Numpus(Max)", "all x.(Max(x) -> Numpus(x))", "-Numpus(Max)", "(Numpus(Max) & Numpus(Max))", "all x.(Max(x) -> Numpus(x))", "All x.(Max(x) -> Numpus(x))", "(Numpus(Max)"]}
{"id": "prontoqa_validation_427", "nl": "Max is a shumpus, a lorpus, or an impus.", "fol": "(shumpus(Max) | lorpus(Max) | impus(Max))", "prediction": ["all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "(all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x))))", "(Shumpus(Max) | Lorpus(Max) | Imperator(Max))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "(Shumpus,Lorpus,Issue) | Issue(Max,Shumpus))", "(exists x.(Max(x) & Humpus(x)) | exists y.(Lorpus(y) & Issue(y))))", "(all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x))))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "exists x.(Mat Max(x) & (Shumpus(x) | Lorpus(x) | Imperator(x)))", "(all x.(Max(x) -> Shumpus(x)) | (Max(x) -> Lorpus(x) | Max(x))))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperative(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Issue(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Imperator(x)))", "all x.(Max(x) -> (Shumpus(x) | Lordpus(x) | Impossible(x)))", "all x.(Max(x) -> (Shumpus(x) | Lorpus(x) | Impeccable(x)))", "all x.(Max(x) -> (Shumpus(x) | Lops(x) | Issue(x)))"]}
{"id": "prontoqa_validation_428", "nl": "Jompuses are shumpuses.", "fol": "all x. (jompus(x) -> shumpus(x))", "prediction": ["all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpus(x))", "all x y.((Jompuse(x) & Shumpus(y)) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "(Shumpuse(jompus) & Shumpus(jompus))", "all x.(Jompuse(x) -> Shumpus(x))", "all x y.((Jompuse(x) & Shumpus(y)) -> Shumpus(x))", "(Shumpuse(jompus)", "all x.(Jompuse(x) -> Shumpus(x))", "all x.(Jumpus(x) -> Shumpus(x))", "all x.(Jompus(x) -> Humpus(x))", "(Shumpuse(jompus)", "all x.(Jimpus(x) -> Shumpus(x))", "all x.(Jompuse(x) -> Shumpuse(x))", "all x.(Jomess(x) -> Humptus(x))", "All x.(Jompus(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_429", "nl": "Polly is a sterpus and a wumpus and a jompus.", "fol": "(sterpus(Polly) & wumpus(Polly) & jompus(Polly))", "prediction": ["all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & all y.(Wumpus(y) & -Jompus(y))))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(y) & Jompus(z)))", "all x y.((Polly(x) & Sterpus(y)) -> (Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & all y.(Wumpus(y) & All z.(Jompus(z))) -> (Wumpus(y) & All z.(Wompus(z) & All w.(Wompus(w) & All w.(Wompus(w)) & All w.(Wompus(w))))))", "(Sterpus(Poly) & Wumpus(Poly) & Jompus(Poly))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "(All x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "all x y z.((Polly(x) & Sterpus(y) & Wumpus(z)) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x.(Polly(x) -> (Sterpus(x) & Wumpus(x) & Jompus(x)))", "all x y.((Polly(x) & Sterpus(y)) -> (Wumpus(x) & Jompus(x)))", "(all x.(Polly(x) -> Sterpus(x)) & (Wumpus(x) | Jompus(x))))", "exists x.(Polly(x) & Sterpus(x) & Wumpus(x) & Jompus(x))", "exists x.(Polly(x) & Sterpus(x) & Wumpus(x) & Jompus(x))"]}
{"id": "prontoqa_validation_430", "nl": "Polly is a tumpus or a lempus or a shumpus.", "fol": "(tumpus(Polly) | lempus(Polly) | shumpus(Polly))", "prediction": ["all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "(Tumpus(poly) | Lempus(poly) | Humpus(poly)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x y.((Polly(x) & Tumpus(y)) | (Lempus(x) | Humpus(x))))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "(Tumpus(poly) | Lempus(poly) | Humpus(poly)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "(all x.(Polly(x) -> Tumpus(x)) | (Lempus(x) | Humpus(x))))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x y.((Polly(x) & Tumpus(y)) | (Lempus(y) | Humpus(y))))", "(Tumpus,Tumpus,Lempus,Shumpus)", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))", "all x.(Polly(x) -> (Tumpus(x) | Lempus(x) | Humpus(x)))", "exists x.(Polly(x) & (Tumpus(x) | Lempus(x) | Humpus(x)))"]}
{"id": "prontoqa_validation_431", "nl": "Every zumpus is a rompus and a shumpus and a yumpus.", "fol": "all x. (zumpus(x) -> (rompus(x) & shumpus(x) & yumpus(x)))", "prediction": ["all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "(all x.(Tompus(x) -> Rompus(x)) & all y.(Shumpus(y) & All z.(Yumpus(z)) -> Tompus(x)))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x y.((Tompus(x) & Rompus(y)) -> (Shumpus(x) & Yumpus(x)))", "(all x.(Tompus(x) -> Rompus(x)) & all y.(Shumpus(y) & All z.(Yumpus(z) & -Rompus(y))))", "(all x.(Zumpus(x) -> Rompus(x)) & (Shumpus(x) | Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x y.((Zumpus(x) & Rompus(y)) -> (Shumpus(x) & Yumpus(x)))", "exists x.(Zumpus(x) & Rompus(x) & Humpus(x) & Yumpus(x))", "all x.(Zumpus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "all x.(Zumpus(x) -> (Rompus(x) | Humpus(x) | Yumpus(x)))", "all x.(Tompus(x) -> (Rompus(x) & Humpus(x) & Yumpus(x)))", "(all x.(Zumpus(x) -> Rompus(x)) & (Shumpus(x) | Yumpus(x)))", "exists x.(Tompus(x) & Rompus(x) & Humpus(x) & Yumpus(x))", "all x.(Zumpus(x) -> (Rompus(x) & Shumpus(x) & Yumpus(x)))"]}
{"id": "prontoqa_validation_432", "nl": "Rex is a zumpus.", "fol": "zumpus(Rex)", "prediction": ["all x.(Rex(x) -> Zumpus(x))", "Rex is a zumpus.", "Rex is zumpus.", "all x.(Rex(x) -> Zumpus(x))", "(Zombie(Rex) & HasTumpus(Rex))", "(Zombian(Rex) & -Zombian(Rex))", "Rex is a zumpus.", "Rex.(Zumpus(x) -> HasRex(x))", "All x.(Rex(x) -> Zumpus(x))", "Rex is zumpus.", "Rex (Zombian)", "Rex is a zumpus.", "all x.(Rex(x) -> Zumpus(x))", "All x.(Rex(x) -> Zumpus(x))", "all x.(Rex(x) -> Zumpus(x))", "All x.(Rex(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_433", "nl": "Rex is a rompus or a lempus or a grimpus.", "fol": "(rompus(Rex) | lempus(Rex) | grimpus(Rex))", "prediction": ["all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(Rompus(Rex) | Lempus(Rex) | Grimpus(Rex)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x))))", "(Rompus(Rex) | Lempus(Rex) | Grimpus(Rex)))", "all x.(Rompus(x) | Lempus(x) | Grimpus(x))", "(Rex(Rex) & (Rompus(Rex) | Lempus(Rex) | Grimpus(Rex)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "(Rompus(rex) | Lempus(rex) | Grimpus(rex)))", "all x y.((Rex(x) & Rompus(y)) | (Lempus(x) | Grimpus(x))))", "exists x.(Rompus(x) | Lempus(x) | Grimpus(x))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Gruppus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Grimpus(x)))", "all x.(Rex(x) -> (Rompus(x) | Lempus(x) | Gruppus(x)))"]}
{"id": "prontoqa_validation_434", "nl": "Everything that is a shumpus and a lempus and a yumpus is a tumpus and a brimpus and a zumpus.", "fol": "all x. ((shumpus(x) & lempus(x) & yumpus(x)) -> (tumpus(x) & brimpus(x) & zumpus(x)))", "prediction": ["all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(y) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(x) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "(all x.((Shumpus(x) | Lempus(x) | Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x y.((Shumpus(x) & Lempus(y) & Yumpus(y)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))", "all x.((Shumpus(x) & Lempus(x) & Yumpus(x)) -> (Tumpus(x) & Brimpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_validation_435", "nl": "Rex is a shumpus.", "fol": "shumpus(Rex)", "prediction": ["all x.(Rex(x) -> Humpus(x))", "Rex is a shumpus.", "all x.(Rex(x) -> Humpus(x))", "(Shumpus(Rex) & HasShump(Rex))", "Rex is a shumpus.", "Rex is shumpus.", "Rex.(Shumpus(Rex))", "(Shumpus(Rex) & Shumpus(Rex))", "all x.(Rex(x) -> Humpus(x))", "Rex is a shumpus.", "All x.(Rex(x) -> Humptus(x))", "all x.(Shumpus(x) -> Rex(x))", "(Shumpus(rex) & HasShump(rex))", "all x.(Rex(x) -> Shumpus(x))", "(Shumpus)", "All x.(Rex(x) -> Humpus(x))"]}
{"id": "prontoqa_validation_436", "nl": "Rex is a yumpus.", "fol": "yumpus(Rex)", "prediction": ["all x.(Rex(x) -> Yumpus(x))", "Rex is yumpus.", "(Yumpus(Rex))", "all x.(Rex(x) -> Yumpus(x))", "Rex is yumpus.", "all x.(Yumpus(x) -> Rex(x))", "Rex (Yumpus)", "All x.(Rex(x) -> Yampus(x))", "Rex is yumpus.", "(Yumpus(Rex) & HasYump(Rex))", "Rex is yumpus.", "All x.(Rex(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Rex(x))", "(Yumpus)", "Rex is yumpus.", "All x.(Rex(x) -> Yumpus(x))"]}
{"id": "prontoqa_validation_437", "nl": "Rex is a brimpus.", "fol": "brimpus(Rex)", "prediction": ["all x.(Rex(x) -> Brimpus(x))", "Rex is a Brimpus.", "Rex is a brimpus.", "all x.(Rex(x) -> Brimpus(x))", "(Brimpus(Rex) & Brimpus(Rex))", "Rex is a Brimpus.", "all x.(Rex(x) -> Brimpus(x))", "Rex is brimpus.", "Rex.(Brimpus)", "(Brimpus(rex) & HasBrimpus(rex))", "All x.(Rex(x) -> Brimpus(x))", "(Brumpus)", "all x.(Rex(x) -> Brimpus(x))", "All x.(Rex(x) -> Brimpus(x))", "all x.(Rex(x) -> Brimpus(x))", "All x.(Rex(x) -> Brimpus(x))"]}
{"id": "prontoqa_validation_438", "nl": "Everything that is an impus and a wumpus and a yumpus is a zumpus, a numpus, and a tumpus.", "fol": "all x. ((impus(x) & wumpus(x) & yumpus(x)) -> (zumpus(x) & numpus(x) & tumpus(x)))", "prediction": ["all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x y z.((Imposs(x) & Wumpus(y) & Yumpus(z) & Impossible(x) & Impossible(y) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z) & Impossible(z))", "all x.((Issue(x) & IsWumpus(x) & IsYumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Wumpus(y) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.(Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x y.((Imposs(x) & Wumpus(x) & Yumpus(y)) -> (Tompus(x) & Numpus(x) & Tumpus(x)))", "all x.((Issue(x) & IsWumpus(x) & IsYumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.(Impose(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "all x y.((Impossible(x) & Wumpus(y) & Yumpus(y)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))", "all x.((Imposer(x) & Wumpus(x) & Yumpus(x)) -> (Zumpus(x) & Numpus(x) & Tumpus(x)))", "(all x.((Impossible(x) & Wumpus(x) & Yumpus(x)) -> (Tompus(x) | Numpus(x) | Tumpus(x)))"]}
{"id": "prontoqa_validation_439", "nl": "Sam is an impus.", "fol": "impus(Sam)", "prediction": ["all x.(Sam(x) -> Is(x,y))", "(Impossible(Sam))", "all x.(Sam(x) -> IsImpossible(x))", "Sam is a impusct.", "(Is(Sam) & Is(Sam)))", "all x.((Sam(x) & IsImpossible(x)) -> IsImpossible(x))", "(Impossible(Sam))", "Sam ist ein Isolator.", "Sam is a impus.", "all x.(Sam(x) -> Is(x,y))", "all x.(Sam(x) -> Impeccable(x))", "(Impossible(Sam,Sam))", "All x.(Sam(x) -> Impossible(x))", "all x.(Sam(x) -> IsImpossible(x))", "All x.(Sam(x) -> Imperator(x))", "All x.(Sam(x) -> Impossible(x))"]}
{"id": "prontoqa_validation_440", "nl": "Sam is a wumpus.", "fol": "wumpus(Sam)", "prediction": ["all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Sam) & HasWump(Sam))", "(Wumpus(Sam) & -Wumpus(Sam))", "Sam is a wumpus.", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus(Sam) & HasWumpus(Sam,Sam))", "all x.((Sam(x) & Wumpus(x)) -> Wumpus(x))", "Sam is a wumpus.", "(Wumpus(Sam) & -Wumpus(Sam))", "all x.(Wumpus(x) -> Sam(x))", "all x.(Wumpus(x) -> Sam(x))", "Sam is a wumpus.", "all x.(Wumpus(x) -> Sam(x))", "(Wumpus)", "all x.(Wumpus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_441", "nl": "Sam is a yumpus.", "fol": "yumpus(Sam)", "prediction": ["all x.(Yumpus(x) -> Sam(x))", "Sam is yumpus.", "all x.(Sam(x) -> Yumpus(x))", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus(Sam) & HasYump(Sam))", "Sam is yumpus.", "(Yumpus(Sam) & HasYump.", "all x.(Yumpus(x) -> Sam(x))", "(Yumpus(Sam) & HasYumpty(Sam))", "all x.((Sam(x) & Yumpus(x)) -> Yampus(x))", "all x.(Yumpus(x) -> Sam(x))", "all x.(Yumpus(x) -> Sam(x))", "All x.(Sam(x) -> Yumpus(x))", "(Yumpus)", "(Yumpus)", "all x.(Yumpus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_442", "nl": "Sam is a zumpus.", "fol": "zumpus(Sam)", "prediction": ["all x.(Sam(x) -> Zumpus(x))", "all x.(Sam(x) -> Zumpus(x))", "(Zombie(Sam) & Has(Sam) & Has(Sam))", "Sam is zumpus.", "Sam is a zumpus.", "(Zumpus(Sam) & Has(Sam,Sam))", "all x.(Sam(x) -> Zumpus(x))", "Sam is zumpus.", "(Tompus(Sam) & HasTom(Sam,Sam))", "(Zumpus(sam) & Has(sam) & Has(sam))", "all x.(Zumpus(x) -> Sam(x))", "all x.(Sam(x) -> Zumpus(x))", "Sam is zumpus.", "all x.(Sam(x) -> Zumpus(x))", "all x.(Tompus(x) -> Sam(x))", "All x.(Sam(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_443", "nl": "Everything that is a shumpus and a yumpus and a tumpus is a lorpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Tumpus(y)) -> Lorpus(x))", "all x y z.((Shumpus(x) & Yumpus(y) & Tumpus(z) & Has(x,y) & Has(x,z)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "(all x.((Shumpus(x) & Yumpus(x)) -> Lorpus(x)) & all y.((Yumpus(y) & Tumpus(y)) -> Lorpus(y)))", "all x y z.((Shumpus(x) & Yumpus(y) & Tumpus(z) & Is(x,y) & Is(y,z)) -> Lorpus(x))", "(all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Tumpus(y)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.(((Shumpus(x) | Yampus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lorpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Tumpus(x)) -> Lordess(x))"]}
{"id": "prontoqa_validation_444", "nl": "Each wumpus is not a lorpus.", "fol": "all x. (wumpus(x) -> -lorpus(x))", "prediction": ["all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "(-Lorpus(wumpus) & -Lorpus(wumpus,w))", "all x.(Wumpus(x) -> -Lorpus(x))", "(-Lorpus(wumpus)", "all x y.((Wumpus(x) & Lorpus(y)) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Larpa(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Larph(x))", "all x.(Wumpus(x) -> -Lorpus(x))", "exists x.(Wumpus(x) & -Lorpus(x))"]}
{"id": "prontoqa_validation_445", "nl": "Sally is a dumpus and a numpus and a wumpus.", "fol": "(dumpus(Sally) & numpus(Sally) & wumpus(Sally))", "prediction": ["all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "(Dumps(Sally) & Numpus(Sally) & Wumpus(Sally))", "Sally is a dumpus and a numpus and a wumpus.", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "(Dumpus(s) & Numpus(s) & Wumpus(s))", "all x.(Sally(x) -> (Dumps(x) & Numpus(x) & Wumpus(x)))", "Sally is a Dumpus and NumpusAndWumpus.", "(Dumpus,numpus,wumpus)", "Sally is a dumpus and a numpus and a wumpus.", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "(Dumpus(Sally) & Numpus(Sally) & Wumpus(Sally))", "exists x.(Sally(x) & Dumpus(x) & Numpus(x) & Wumpus(x))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Numpus(x) & Wumpus(x)))"]}
{"id": "prontoqa_validation_446", "nl": "Sally is a yumpus.", "fol": "yumpus(Sally)", "prediction": ["all x.(Yumpus(x) -> Sally(x))", "Sally is yumpus.", "Sally is yumpus.", "all x.(Yumpus(x) -> Sally(x))", "(Yumpus(Sally) & HasYump(Sally))", "Sally is a yumpus.", "(Yumpus(Sally) & HasYump(Sally,Sally))", "Sally is yumpus.", "all x.(Yumpus(x) -> Sally(x))", "Sally is Yampus.", "Sally (yumpus)", "All x.(Yumpus(x) -> Sally(x))", "Sally is yumpus.", "All x.(Yumpus(x) -> Sally(x))", "all x.(Yumpus(x) -> Sally(x))", "all x.(Yumpus(x) -> Sally(x))"]}
{"id": "prontoqa_validation_447", "nl": "Sally is a tumpus.", "fol": "tumpus(Sally)", "prediction": ["all x.(Tumpus(x) -> Sally(x))", "Sally is a tumpus.", "all x.(Tumpus(x) -> Sally(x))", "Sally is a tumpus.", "(Tumpus(Sally) & HasTump(Sally,Sally))", "all x.(Sally(x) -> Tumpus(x))", "Sally is tumpus.", "(Tumpus(Sally) & Tumpus(Sally))", "Sally is a tumpus.", "all x.(Tumpus(x) -> Sally(x))", "Sally (Tumpus)", "Sally is tumpus.", "Sally is Tumpus.", "All x.(Sally(x) -> Tumpus(x))", "all x.(Tumpus(x) -> Sally(x))", "all x.(Tumpus(x) -> Sally(x))"]}
{"id": "prontoqa_validation_448", "nl": "Sally is not a shumpus.", "fol": "-shumpus(Sally)", "prediction": ["Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "(-Shumpus(Sally))", "Sally -Shumpus(Sally)", "Sally n'est pas shumpus.", "Sally is not a shumpus.", "all x.(Sally(x) -> -Shumpus(x))", "(-Shumpus(Sally))", "Sally -Shumpus(Sally)", "all x.(Sally(x) -> -Shumpus(x))", "Sally & -Shumpus(Sally)", "-Shumpus(Sally)", "Sally is not a shumpus.", "(-Shumpus(Sally))", "Sally is not a shumpus.", "-Shumpus(s)"]}
{"id": "prontoqa_validation_449", "nl": "Everything that is a vumpus, a tumpus, or a dumpus is a yumpus and a zumpus and a lorpus.", "fol": "all x. ((vumpus(x) | tumpus(x) | dumpus(x)) -> (yumpus(x) & zumpus(x) & lorpus(x)))", "prediction": ["all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.(((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(y) & Zumpus(y) & Lorpus(y)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x y.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(y) & Zumpus(y) & Lorpus(y)))", "all x.(VumpusTumpusOrDumpus(x) -> (Yumpus(x) | Zumpus(x) | Lorpus(x)))", "(all x.((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vimpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "(all x.((Vumpus(x) | Tumpus(x) | Dumpus(x))) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))", "all x.((Vumpus(x) | Tumpus(x) | Dumpus(x)) -> (Yumpus(x) & Zumpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_450", "nl": "Sam is a vumpus.", "fol": "vumpus(Sam)", "prediction": ["all x.(Sam(x) -> Vumpus(x))", "all x.(Vumpus(x) -> Sam(x))", "Sam is a Vumpus.", "all x.(Sam(x) -> Vumpus(x))", "(Vumpus(Sam) & HasVumpus(Sam))", "all x.((Sam(x) & Vumpus(x)) -> Vumpus(x))", "(Vimpus(Sam) & -Vimpus(Sam))", "all x.(Vumpus(x) -> Sam(x))", "(Vumpus(Sam) & HasVumpus(Sam))", "Sam is a Vumpus.", "Sam is a Vampus.", "(Vumpus(Sam) & HasVumpus(Sam))", "all x.(Vimpus(x) -> Sam(x))", "(Vimpus(Sam) & Vampire(Sam))", "exists x.(Sam(x) & Vampire(x))", "all x.(Vumpus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_451", "nl": "Everything that is a lorpus and a brimpus and an impus is not a jompus.", "fol": "all x. ((lorpus(x) & brimpus(x) & impus(x)) -> -jompus(x))", "prediction": ["all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "(all x.((Lorpus(x) & -Jompus(x)) -> (Brimpus(x) & -Jompus(x)))", "all x y.((Lorpus(x) & Brimpus(y) & Imperator(x)) -> -Jompus(x))", "(all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsRefrigerator(x)) -> -Jompus(x))", "all x y.((Lorpus(x) & Brimpus(y) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) | Brimpus(x) | Imperator(x)) -> -Jompus(x))", "(all x.((Lorpus(x) & Brimpus(x) & Issue(x)) -> -Jompus(x))", "all x.((Lorph(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & IsImpossible(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Imperator(x)) -> -Jompus(x))", "all x.((Larps(x) & Brimpus(x) & Issue(x)) -> -Jompus(x))", "all x.((Lorpus(x) & Brimpus(x) & Impossible(x)) -> -Jompus(x))"]}
{"id": "prontoqa_validation_452", "nl": "Grimpuses are jompuses, lempuses, and yumpuses.", "fol": "all x. (grimpus(x) -> (jompus(x) & lempus(x) & yumpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "(all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x))))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x y z.((Grimpus(x) & Jompuse(y) & Lempuse(z)) -> (Jumpus(x) | Yumpus(x)))", "(all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x))))", "(all x.(Grimpus(x) -> Jompuse(x)) & all y.(Lempuse(y) & Yumpus(y))))", "(all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x y.((Grimpus(x) & Jompuse(y) & Lempuse(y)) -> Yumpus(x,y))", "(all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "(all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))", "all x.(Grimpus(x) -> (Jompuse(x) | Lempuse(x) | Yumpus(x)))", "all x.(Grimpuse(x) -> (Jompuse(x) | Lempuse(x) | Yumpuse(x)))"]}
{"id": "prontoqa_validation_453", "nl": "Wren is a lorpus.", "fol": "lorpus(Wren)", "prediction": ["all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "(Lorpus(Wren) & LivesIn(Wren,Lorpus))", "all x.(Wren(x) -> Lorpus(x))", "(Lorpus(wren) & LivesIn(wren,x))", "all x.(Wren(x) -> Llorpus(x))", "(Lorpus(wren) & LivesIn(wren,w))", "all x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Llorpus(x))", "(Lorpus)", "(Lorpus)", "All x.(Wren(x) -> Lorpus(x))", "all x.(Wren(x) -> Lorpus(x))", "exists x.(Warn(x) & Throat(x))", "all x.(Wren(x) -> Lompus(x))", "All x.(Wren(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_454", "nl": "Every rompus is a gorpus and a dumpus and a lempus.", "fol": "all x. (rompus(x) -> (gorpus(x) & dumpus(x) & lempus(x)))", "prediction": ["all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Dumpus(y) & All z.(Lempus(z)) -> Lempus(z))))", "all x y.((Rompus(x) & Gorpus(y)) -> (Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "exists x.(rompus(x) & Gorpus(x) & Dumpus(x) & Lempus(x))", "(all x.(Rompus(x) -> Gorpus(x)) & all y.(Dumpus(y) & All z.(Lempus(z)) -> Lempus(z))))", "all x y z.(Rompus(x) -> (Gorpus(x) & Dumpus(y) & Lempus(z)))", "all x y.((Rompus(x) & Gorpus(x) & Dumpus(y)) -> Lempus(x))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "exists x.(rompus(x) & Gorpus(x) & Dumpus(x) & Lempus(x))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "(all x.(Rompus(x) -> Gorpus(x)) & (Dumpus(x) | Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "exists x.(rompus(x) & Gorpus(x) & Dumpus(x) & Lempus(x))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))", "all x.(Rompus(x) -> (Gorpus(x) & Dumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_455", "nl": "Fae is a lempus, Fae is a yumpus, and Fae is not a gorpus.", "fol": "(lempus(Fae) & yumpus(Fae) & -gorpus(Fae))", "prediction": ["(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & (Fae(x) -> -Gorpus(x)))", "all x y z.((Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z)) -> (Lempus(x) & Yampus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "(all x y z.((Fae(x) & Lempus(x)) -> (Yumpus(y) & -Gorpus(z))) -> (Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z)))", "(all x y z.(Fae(x) -> Lempus(x)) & (Fae(y) -> Yumpus(y)) & (Fae(z) -> -Gorpus(z)))", "all x y z.((Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z)) -> (Lempus(x) & Yampus(y) & -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))", "all x.(Fae(x) -> (Lempus(x) & Yumpus(x) & -Gorpus(x)))", "exists x.(Fae(x) & Lempus(x) & Yampus(x) & -Gorpus(x))", "all x y z.(Fae(x) -> (Lempus(x) | Yampus(x) | -Gorpus(y)))", "all x y z.((Fae(x) & Lempus(y) & Yumpus(z)) -> (Lempus(x) | Yampus(z) | -Gorpus(z)))", "(all x.(Fae(x) -> Lempus(x)) & all y.(Fae(y) -> Yumpus(y)) & all z.(Fae(z) -> -Gorpus(z))))", "all x y z.(Fae(x) & Lempus(x) & Yampus(y) & -Gorpus(z))", "(all x y z.((Fae(x) & Lempus(x)) -> (Yumpus(y) & -Gorpus(z))))", "all x.(Fae(x) -> (Lempus(x) & Yampus(x) & -Gorpus(x)))", "(all x.(Fae(x) -> Lempus(x)) & (Fae(x) -> Yumpus(x)) & -Gorpus(x)))"]}
{"id": "prontoqa_validation_456", "nl": "Everything that is a wumpus, a brimpus, or a tumpus is a lorpus.", "fol": "all x. ((wumpus(x) | brimpus(x) | tumpus(x)) -> lorpus(x))", "prediction": ["all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x y.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(y))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "(all x.((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lordess(x))", "all x y.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(y))", "all x.(((Wumpus(x) | Brimpus(x) | Tumpus(x))) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lordess(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Loomis(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lorpus(x))", "all x.((Wumpus(x) | Brimpus(x) | Tumpus(x)) -> Lordeus(x))"]}
{"id": "prontoqa_validation_457", "nl": "Rex is an impus, Rex is a lempus, and Rex is not a lorpus.", "fol": "(impus(Rex) & lempus(Rex) & -lorpus(Rex))", "prediction": ["(all x.(Rex(x) -> Issue(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "all x y z.((Rex(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x.(Rex(x) -> Issuel(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "(all x.(Rex(x) -> Impossible(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "all x y z.((Rex(x) & Lempus(y) & Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x y z.((Rex(x) & Impossible(x)) -> Lempus(x)) & ((Rex(y) & -Lorpus(z))) -> Lempus(y)))", "all x.(Rex(x) -> (Impossible(x) & Lempus(x) & -Lorpus(x)))", "all x y z.((Rex(x) & Is(x,y) & Lempus(y) & Rex(z)) -> (Impossible(x) & Lempus(z) & -Lorpus(z)))", "(all x.(Rex) -> Issue(x)) & (Rex(x) -> Lempus(x)) & (Rex(x) -> -Lorpus(x)))", "(all x.(Rex(x) -> Issue(x)) & all y.(Rex(y) -> Lempus(y)) & all z.(Rex(z) -> -Lorpus(z))))", "all x y z.((Rex(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) | Lempus(y) | -Lorpus(z)))", "all x.(Rex(x) -> (Impossible(x) | Lempus(x) | -Lorpus(x)))", "all x y z.((Rex(x) & Impossible(x) & Lempus(y) & -Lorpus(z)) -> (Impossible(x) & Lempus(y) & -Lorpus(z)))", "(all x y z.((Rex(x) & Is(x,y)) -> Is(x,z)) & ((Rex(y) & Lempus(z)) -> -Lorpus(y)))", "(all x.(Rex,Impossible(x) -> Lempus(x)) & all y.(Rex,Lorpus) -> -Lorpus(y)))", "(all x y z.((Rex(x) & Impossible(x)) -> Lempus(x)) & ((Rex(y) & -Lorpus(y)) -> Lempus(y)))"]}
{"id": "prontoqa_validation_458", "nl": "Jompuses are dumpuses.", "fol": "all x. (jompus(x) -> dumpus(x))", "prediction": ["all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> (Dumpsuse(x) & -Dumpsuse(y)))", "(Dumpsus(jompuse) & -Dumpsus(jompuse))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x y.((Jompuse(x) & Dumpuse(y)) -> Is(x,y))", "(Dumpuses(jompus) & Dumpuse(jompus))", "all x.(Jimpus(x) -> Dumpuse(x))", "(Dumpsuse(jompuse) & -Dumpsuse(jompuse))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jomess(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jimpus(x) -> Dumpuse(x))", "all x.(Jompuse(x) -> Dumpuse(x))", "all x.(Jompus(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_459", "nl": "Wren is a brimpus and Wren is not a dumpus and Wren is a lempus.", "fol": "(brimpus(Wren) & -dumpus(Wren) & lempus(Wren))", "prediction": ["(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x) & Lempus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(z)) -> (Brimpus(x) & Lempus(y)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (-Dumpus(y) & Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x)))", "(all x y z.((Wren(x) & Brimpus(x)) -> (Brimpus(x) & -Dumpus(y)) & ((Wren(z) & Lempus(z)) -> Lempus(z))))", "(all x y.(Brimpus(x) -> Wren(x)) & (Dumpus(y) -> Wren(y)))", "(all x.(Wren(x) -> Brimpus(x)) & all y.(Wren(y) -> -Dumpus(y))) & all z.(Wren(z) -> Lempus(z)))", "(all x.(Wren(x) -> Brimpus(x)) & (-Dumpus(x)) & (-Dumpus(x) -> Lempus(x)))", "all x.(Wren(x) -> (Brimpus(x) & -Dumpus(x) & Lempus(x)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(y)) -> (Brimpus(x) & Lempus(z)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (-Dumpus(y) & Lempus(y)))", "all x y z.((Wren(x) & Brimpus(x) & Wren(y) & Dumpus(z) & Lempus(x)) -> (Brimpus(x) & -Dumpus(y) & Lempus(z)))", "(all x y.(Brimpus(x) -> Wren(y)) & (Brimpus(y) | Dumpus(y))) & (Lempus(y) -> Wren(y)))", "all x.(Wren(x) -> (Brimpus(x) & -Dumpus(x) & Lempus(x)))", "all x y.((Wren(x) & Brimpus(x) & Wren(y)) -> (-Dumpus(y) & Lempus(y)))", "(all x.(Wren(x) -> Brimpus(x)) & (Wren(x) -> -Dumpus(x)) & (Wren(x) -> Lempus(x)))"]}
{"id": "prontoqa_validation_460", "nl": "Wren is a lorpus, Wren is not a jompus, or Wren is a brimpus.", "fol": "(lorpus(Wren) | -jompus(Wren) | brimpus(Wren))", "prediction": ["(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "all x y.((Wren(x) & Lorpus(x)) | (-Jompus(y) | Brimpus(y))))", "all x.((Wren(x) & (Lorpus(x) | -Jompus(x) | Brimpus(x))) -> (Lorpus(x) | Brimpus(x)))", "all x y z.((Wren(x) & Lorpus(y) & -Jompus(z)) | (-Jompus(x,z) | Brimpus(x))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Jompus(x) | Brimpus(x))))", "all x y.((Wren(x) & Lorpus(y)) | (-Jompus(y) | Brimpus(x))))", "all x y.((Wren(x) & Moose(y)) -> (Lorpus(x) | -Jompus(y) | Brimpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "(all x y.(Wren(x) -> Lorpus(x)) & (-Jompus(y) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) | (-Jompus(x) | Brimpus(x))))", "(all x.(Wren(x) -> Loomis(x)) | (-Wren(x) & Jompus(x)) | (-Wren(x) & Brimpus(x))))", "exists x.(Wren(x) & ((Lorph(x) & -Jompus(x)) | (Brimpus(x)))))", "exists x.(Wren(x) & ((Lorpus(x) & -Jompus(x)) | Brimpus(x))))", "all x.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(x)))", "(all x y.(Wren(x) -> (Lorpus(x) | -Jompus(x) | Brimpus(y))))", "(all x.(Wren(x) -> Lorpus(x)) & (-Jompus(x) | Brimpus(x))))"]}
{"id": "prontoqa_validation_461", "nl": "Everything that is an impus and a dumpus and a lorpus is a rompus and a numpus and a jompus.", "fol": "all x. ((impus(x) & dumpus(x) & lorpus(x)) -> (rompus(x) & numpus(x) & jompus(x)))", "prediction": ["all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Is(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y.((Impossible(x) & Dumpus(y) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y z.((Imposs(x) & Dumpus(y) & Lorpus(z) & Is(x,y) & Is(x,z)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Issue(x) & IsDumpus(x) & IsLorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y.((Imposs(x) & Dumpus(x) & Lorpus(y)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.(Impose(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Imposs(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "(all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> Rompus(x)) & ((Impossible(x) & Numpus(x) & Jompus(x)) -> Jompus(x)))", "(all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.(Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x y.((Impossible(x) & Dumpus(x) & Lorpus(y)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "(all x.((Impossible(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))", "all x.((Improved(x) & Dumpus(x) & Lorpus(x)) -> (Rompus(x) & Numpus(x) & Jompus(x)))"]}
{"id": "prontoqa_validation_462", "nl": "Rex is an impus.", "fol": "impus(Rex)", "prediction": ["all x.(Rex(x) -> IsImpossible(x))", "Rex is a impus.", "all x.(Rex(x) -> IsImpossible(x))", "(IsRex(Rex) & IsImpossible(Rex))", "Rex is a impusct.", "all x.(Rex(x) -> Is(x,y))", "(Impossible(Rex))", "All x.(Rex(x) -> Impermant(x))", "Rex is imposed.", "all x.(Rex(x) -> Impossible(x))", "(Impossible(Rex))", "All x.(Rex(x) -> IsImpossible(x))", "all x.(Rex(x) -> Imperium(x))", "all x.(Rex(x) -> IsImpossible(x))", "All x.(Rex(x) -> Impossible(x))", "All x.(Rex(x) -> Isolated(x))"]}
{"id": "prontoqa_validation_463", "nl": "Rex is a dumpus.", "fol": "dumpus(Rex)", "prediction": ["all x.(Rex(x) -> Dumpus(x))", "Rex is a Dumpus.", "(Dumpus(Rex))", "Rex is a Dumpus.", "(Dumus(Rex) & HasDumus(Rex))", "all x.(Rex(x) -> Dumpus(x))", "Rex is a Dumpus(x)", "Rex.", "All x.(Rex(x) -> Dumpus(x))", "(Dumpus(Rex))", "Rex is a dumpus.", "(Dumus(rex) & HasDums(rex))", "Rex.", "all x.(Rex(x) -> Dumpus(x))", "All x.(Rex(x) -> Dumpus(x))", "all x.(Rex(x) -> Dumpus(x))"]}
{"id": "prontoqa_validation_464", "nl": "Rex is a lorpus.", "fol": "lorpus(Rex)", "prediction": ["all x.(Rex(x) -> Lorpus(x))", "Rex is a lorpus.", "all x.(Rex(x) -> Lorpus(x))", "(Lorpus(Rex) & LivesIn(Rex))", "Rex is a lorpus.", "Rex (Lorpus)", "(Lorpus(rex) & LivesIn(rex,rex))", "Rex is a lorpus.", "all x.(Rex(x) -> Lorpus(x))", "(Lorpus(rex) & HasLorph(rex))", "Rex is a lorpus.", "all x.(Rex(x) -> Llorpus(x))", "All x.(Rex(x) -> Lorpus(x))", "all x.(Rex(x) -> Llorpus(x))", "All x.(Rex(x) -> Lorpus(x))", "All x.(Rex(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_465", "nl": "Rex is a numpus.", "fol": "numpus(Rex)", "prediction": ["all x.(Rex(x) -> Numpus(x))", "Rex is Numpus(x)", "all x.(Rex(x) -> Numpus(x))", "(Numpus(Rex) & Numpus(Rex))", "Rex is Numpus(x)", "Rex.(Numpus(x) -> HasRex(x))", "all x.(Rex(x) -> Numpus(x))", "Rex (numpus)", "Rex is Numpus.", "(Numpus(rex) & HasNumbus(rex))", "(Numpus(rex) & Numpus(rex))", "All x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numpus(x))", "All x.(Rex(x) -> Numpus(x))", "all x.(Rex(x) -> Numpus(x))", "All x.(Rex(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_466", "nl": "Everything that is a zumpus, a dumpus, and a tumpus is a jompus and a yumpus and a gorpus.", "fol": "all x. ((zumpus(x) & dumpus(x) & tumpus(x)) -> (jompus(x) & yumpus(x) & gorpus(x)))", "prediction": ["all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Dumpus(x) & Tumpus(y)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x y z.((Tompus(x) & Dumpus(y) & Tumpus(z) & Has(x,y) & Has(x,z)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Dumpus(x) & Tumpus(y)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "(all x.((Zumpus(x) | Dumpus(x)) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "(all x.((Tompus(x) | Dumpus(x) | Tumpus(x))) -> (Jompus(x) | Yompus(x) | Gorpus(x)))", "(all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jimpus(x) & Yumpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Dumpus(x) | Tumpus(x)) -> (Jompus(x) & Yampus(x) & Gorpus(x)))", "all x.((Zumpus(x) & Dumpus(x) & Tumpus(x)) -> (Jompus(x) & Yompus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_467", "nl": "Wren is a zumpus.", "fol": "zumpus(Wren)", "prediction": ["all x.(Wren(x) -> Zumpus(x))", "(Zombie(Wren) & -Zombie(Wren))", "all x.(Wren(x) -> Zumpus(x))", "all x y.((Wren(x) & Zumpus(y)) -> Has(x,y))", "all x.(Wren(x) -> Zumpus(x))", "(Tompus(wren) & HasTompus(wren,x))", "all x.(Wren(x) -> Zumpus(x))", "(Zwern)", "(Tompus(wren) & Has(wren,w))", "all x.(Wren(x) -> Zumpus(x))", "(Zumpus)", "All x.(Wren(x) -> Zumpus(x))", "All x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))", "All x.(Wren(x) -> Zumpus(x))", "all x.(Wren(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_468", "nl": "Wren is a yumpus.", "fol": "yumpus(Wren)", "prediction": ["all x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yampus(x))", "(Yumpus(Wren) & HasYump(Wren,Y))", "all x.(Wren(x) -> Yumpus(x))", "(Yumpus(wren) & HasYump(wren,y))", "all x.(Wren(x) -> Yumpus(x))", "all x y.(Yumpus(x) -> Wren(x))", "(Yumpus(wren) & BornIn(wren,y))", "all x.(Wren(x) -> Yampus(x))", "(Yumpus)", "All x.(Wren(x) -> Yumpus(x))", "(Yumpus)", "All x.(Wren(x) -> Yumpus(x))", "all x.(Wren(x) -> Yumpa(x))", "All x.(Wren(x) -> Yampus(x))", "all x.(Wren(x) -> Yampus(x))"]}
{"id": "prontoqa_validation_469", "nl": "Everything that is a jompus and a tumpus and a dumpus is a lempus, an impus, and a wumpus.", "fol": "all x. ((jompus(x) & tumpus(x) & dumpus(x)) -> (lempus(x) & impus(x) & wumpus(x)))", "prediction": ["all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x y z.((Jompus(x) & Tumpus(y) & Dumpus(z) & Is(x,y) & Is(x,z)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "(all x.((Jompus(x) & -Tumpus(x) & -Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x y.((Jompus(x) & Tumpus(y) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "(all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x.((Jimpus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x y.((Jompus(x) & Tumpus(y) & Dumpus(y)) -> (Lempus(x) & Imperator(x) & Wumpus(x)))", "all x y z.((Jompus(x) & Tumpus(y) & Dumpus(z) & Is(x,y)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Imperator(x) & Wumpus(x)))", "all x.((Jompus(x) | Tumpus(x) | Dumpus(x)) -> (Lempus(x) & Imperempt(x) & Wumpus(x)))", "all x.((Jimpus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "(all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperator(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) | Imperempt(x) | Wumpus(x)))", "all x.((Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Wumpus(x)))", "all x.(Jompus(x) & Tumpus(x) & Dumpus(x)) -> (Lempus(x) & Impossible(x) & Humpus(x)))"]}
{"id": "prontoqa_validation_470", "nl": "Alex is a jompus.", "fol": "jompus(Alex)", "prediction": ["all x.(Alex(x) -> Jompus(x))", "Alex is a jompus.", "all x.(Alex(x) -> Jompus(x))", "Alex is a Jompus.", "Alex is jompus.", "(Jompus(Alex) & Has(Alex))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "Alex is Jompus.", "(Jimpus(Alex) & Has(Alex))", "Alex is a jompus.", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "all x.(Alex(x) -> Jompus(x))", "All x.(Alex(x) -> Jompus(x))", "All x.(Alex(x) -> Jompus(x))"]}
{"id": "prontoqa_validation_471", "nl": "Alex is a lempus.", "fol": "lempus(Alex)", "prediction": ["all x.(Alex(x) -> Lempus(x))", "Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex is a lempus.", "Alex is Lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex is Lempus(Alex)", "(Lempus(Alex) & HasLempus(Alex))", "Alex is a lempus.", "all x.(Alex(x) -> Lempus(x))", "Alex is a Lempus.", "all x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))", "All x.(Alex(x) -> Lempus(x))", "All x.(Alex(x) -> Lempus(x))", "all x.(Alex(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_472", "nl": "Everything that is a brimpus or a tumpus or an impus is a vumpus and a yumpus and a dumpus.", "fol": "all x. ((brimpus(x) | tumpus(x) | impus(x)) -> (vumpus(x) & yumpus(x) & dumpus(x)))", "prediction": ["all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsImprovement(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.(((Brimpus(x) | Tumpus(x) | Imperator(x))) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x y.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(y) & Yumpus(y) & Dumpus(y)))", "all x.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperative(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x y.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(y) & Yumpus(y) & Dumpus(y)))", "(all x.((Brimpus(x) | Tumpus(x) | Impossible(x))) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | IsImpossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.(Brimpus(x) | Tumpus(x) | Impermissible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x y.((Brimpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(y) & Yumpus(y) & Dumpus(y)))", "(all x.((Brimpus(x) | Tumpus(x) | Imperator(x))) -> VumpusAndYumpusAndDumpus(x))", "all x.((Brumpus(x) | Tumpus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brimpus(x) | Tumpus(x) | Imperator(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))", "all x.((Brampus(x) | Tumulus(x) | Impossible(x)) -> (Vumpus(x) & Yumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_473", "nl": "Dumpuses are numpuses.", "fol": "all x. (dumpus(x) -> numpus(x))", "prediction": ["all x.(Dumpuse(x) -> Numpuse(x))", "(all x.(Dumpuse(x) -> Numpuse(x)))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x y.((Dumpuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "(all x.(Dumpuse(x) -> Numpuse(x)))", "all x y.((Dumpuse(x) & Numpus(y)) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpus(x))", "all x.(Dumpus(x) -> Numpus(x))", "(all x.(Dumpuse(x) -> Numpus(x))", "(Numpus)", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpus(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpuse(x) -> Numpuse(x))", "all x.(Dumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_474", "nl": "Polly is an impus and Polly is not a numpus and Polly is a yumpus.", "fol": "(impus(Polly) & -numpus(Polly) & yumpus(Polly))", "prediction": ["(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Impossible(x) & -Numpus(z) & Yumpus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y.((Polly(x) & Polly(y)) -> (Impossible(x) & -Numpus(y) & Yumpus(y)))", "(all x.(Polly(x) -> Is(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "(all x y.(Polly(x) -> Issue(x)) & (Polly(y) -> -Numpus(y))) & (Polly(y) -> Yumpus(y)))", "all x y z.((Polly(x) & Impossible(x) & Polly(y) & -Numpus(y)) -> Yumpus(z))", "all x y.((Polly(x) & Is(x,y)) -> (Impossible(x) & -Numpus(y) & Yampus(x)))", "all x y z.((Polly(x) & Is(x,y) & Polly(z)) -> (Is(x,z) & -IsNumpus(z) & -IsYumpus(z)))", "(all x.(Polly(x) -> Issue(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x.(Polly(x) -> (Impossible(x) & -Numpus(x) & Yumpus(x)))", "exists x.(Polly(x) & Impossible(x) & -Numpus(x) & Yumpus(x))", "(all x y.(Polly(x) -> Impossible(x)) & (Polly(y) -> -Numpus(y))) & (Polly(y) -> Yumpus(y)))", "(all x y z.(Polly(x) -> Is(x,y)) & (Polly(z) | Polly(z))) & (Nompus(z) | Yumpus(z)))", "(all x.(Polly(x) -> Impossible(x)) & (Polly(x) -> -Numpus(x)) & (Polly(x) -> Yumpus(x)))", "all x y.((Polly(x) & Impossible(x) & Polly(y)) -> (-Numpus(y) & Yumpus(y)))"]}
{"id": "prontoqa_validation_475", "nl": "Polly is a jompus or Polly is a rompus or Polly is not a dumpus.", "fol": "(jompus(Polly) | rompus(Polly) | -dumpus(Polly))", "prediction": ["all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "(all x.(Polly(x) -> (Jompus(x) | Rompus(x) | -Dumpus(x))))", "((Polly(Polly) & Jompus(Polly)) | (Polly(Poly) & Rompus(Poly)) | (Poly(Poly) & -Dumpus(Poly))))", "(all x.(Plompus(x) | Rompus(x) | -Dumpus(x)))", "all x y.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(y))) -> Polly(x))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x)) | -Dumpus(x)))", "(exists x.(Polly(x) & (Jompus(x) | Rompus(x)) | -Dumpus(x)))", "((Polly(Poly) & Jompus(Poly)) | (Poly(Poly) & Rompus(Poly)) | (Poly(Poly) & -Dumpus(Poly))))", "(all x.(Polly(x) -> Jompus(x)) | (Polly(x) -> Rompus(x)) | (Polly(x) -> -Dumpus(x))))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))", "all x y.((Polly(x) & Jompus(x) & Polly(y)) | (Rompus(y) | -Dumpus(y))))", "all x y.((Polly(x) & Jompus(x)) | (Polly(y) & Rompus(y)) | (Polly(y) & -Dumpus(y))))", "((Polly(poly) & Jompus(poly)) | (Poly(poly) & Rompus(poly)) | (Poly(poly) & -Dumpus(poly))))", "all x.(Polly(x) -> ((Jompus(x) | Rompus(x) | -Dumpus(x))))", "exists x.(Ploy(x) & ((Jompus(x) | Rompus(x)) | -Dumpus(x))))", "all x.((Polly(x) & (Jompus(x) | Rompus(x) | -Dumpus(x))) -> Polly(x))"]}
{"id": "prontoqa_validation_476", "nl": "Sam is not an impus, Sam is a brimpus, and Sam is a shumpus.", "fol": "(-impus(Sam) & brimpus(Sam) & shumpus(Sam))", "prediction": ["(all x.(Sam(x) -> -Impossible(x)) & (Brimpus(x) | Humpus(x))))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) & Brimpus(y) & Humpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> Brimpus(y)) & all z.(Shumpus(z) -> -Impossible(z))))", "(all x y z.((Sam(x) & IsNot(x,Is(x)) -> -Impossible(x)) & ((Sam(y) & Brimpus(y)) -> Shumpus(z)))", "(all x y z.((Sam(x) & Impossible(y)) -> -Sam(x)) & ((Sam(z) & Brimpus(z)) -> Shumpus(z)))", "all x.(Sam(x) -> (-Impossible(x) & Brimpus(x) & Humpus(x)))", "(all x.(Sam(x) -> -Impossible(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Issue(x) & -Issue(y) & -Issue(z) & -Issue(y) & -Issue(z)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) & Brimpus(y) & Shumpus(z)))", "(all x.(Sam(x) -> -Impossible(x)) & all y.(Brimpus(y) -> -Impossible(y))) & all z.(Shumpus(z) -> (Sam(z) & -Impossible(z))))", "(all x.(Sam(x) -> -Issuel(x)) & (Sam(x) -> Brimpus(x)) & (Sam(x) -> Humpus(x)))", "exists x.(Sam(x) & -Impossible(x) & Brimpus(x) & Humpus(x))", "all x y z.((Sam(x) & Impossible(y) & Brimpus(z)) -> (-Impossible(x) & Brimpus(y) & Humpus(z)))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Impossible(x) | (Brimpus(y) | Humpus(z)))))", "all x y z.((Sam(x) & Brimpus(y) & Humpus(z)) -> (-Is(x,y) & -Is(x,z)))", "(all x.(Sam(x) -> -Impossible(x)) & (Brimpus(x) | Humpus(x)))"]}
{"id": "prontoqa_validation_477", "nl": "Sam is not a tumpus or Sam is a wumpus or Sam is a grimpus.", "fol": "(-tumpus(Sam) | wumpus(Sam) | grimpus(Sam))", "prediction": ["all x.((Sam(x) & -Tumpus(x)) | (Wumpus(x) | Grimpus(x))))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x))))", "(exists x.(Sam(x) & -Tumpus(x)) | exists y.(Sam(y) & Wumpus(y))) | exists z.(Sam(z) & Grimpus(z))))", "all x y.((Sam(x) & -Tumpus(x)) | (Wumpus(y) | Grimpus(y))))", "(all x.(Sam(x) -> -Tumpus(x)) | (Sam(x) -> Wumpus(x)) | (Sam(x) -> Grimpus(x))))", "((Sam(sam) & -Tumpus(sam)) | (Sam(sam) & Wumpus(sam)) | (Sam(sam) & Grimpus(sam))))", "(all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x))))", "(-Tumpus(Sam) | Wumpus(Sam) | Grimpus(Sam)))", "all x y z.((Sam(x) & Tumpus(y) & Wumpus(z)) -> (-Tumpus(x) | Grimpus(x)))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x))))", "all x y.((Sam(x) & -Tumpus(x) & Sam(y)) | (Wumpus(y) | Grimpus(y))))", "all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x)))", "all x.(Sam(x) -> (-Tumpus(x) | (Wumpus(x) | Grimpus(x))))", "exists x.(Sam(x) & -Tumpus(x) & (Wumpus(x) | Grimpus(x)))", "(all x.(Sam(x) -> (-Tumpus(x) | Wumpus(x) | Grimpus(x))))", "exists x.(Sam(x) & -(Tumpus(x) | Wumpus(x) | Gruppus(x)))"]}
{"id": "prontoqa_validation_478", "nl": "Everything that is a lorpus, a jompus, or a yumpus is a zumpus.", "fol": "all x. ((lorpus(x) | jompus(x) | yumpus(x)) -> zumpus(x))", "prediction": ["all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x y.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(y))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x y.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(y))", "all x.(((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "(all x.((Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Menu(x) & (Lorpus(x) | Jompus(x) | Yumpus(x))) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Lorpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))", "all x.((Larpus(x) | Jompus(x) | Yumpus(x)) -> Zumpus(x))"]}
{"id": "prontoqa_validation_479", "nl": "Sally is a dumpus and a yumpus and a grimpus.", "fol": "(dumpus(Sally) & yumpus(Sally) & grimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "Sally is a dumpus and yumpus and grimpus.", "(Dumps(Sally) & Yumpus(Sally) & Grimpus(Sally))", "(all x.(Sally(x) -> Dumpus(x)) & (Yumpus(x) | Grimpus(x))))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "Sally is a dumpus and yumpus and grimpus.", "all x.(Sally(x) -> (Dumps(x) & Yumpus(x) & Grimpus(x)))", "(Dumpus(Sally) & Yampus(Sally) & Grimpus(Sally))", "(Dumpus,Yumpus,Grimpus)", "all x.(Sally(x) -> (Dumpus(x) & Yampus(x) & Grimpus(x)))", "(Dumpus(Sally) & Yumpus(Sally) & Grimpus(Sally))", "exists x.(Sally(x) & Dumpus(x) & Yumpus(x) & Grimpus(x))", "all x.(Sally(x) -> (Dumpus(x) & Yumpus(x) & Grimpus(x)))", "all x.(Sally(x) -> (Dumpus(x) & Yampus(x) & Gruppus(x)))"]}
{"id": "prontoqa_validation_480", "nl": "Sally is a zumpus.", "fol": "zumpus(Sally)", "prediction": ["all x.(Sally(x) -> Zumpus(x))", "Sally is zumpus.", "Sally is a zumpus.", "all x.(Sally(x) -> Zumpus(x))", "(Zumpus(Sally) & Has(Sally,Sally))", "Sally is zumpus.", "Sally is a zumpus.", "(Zumpus(Sally) & Has(Sally) & Has(Sally))", "all x.(Zumpus(x) -> Sally(x))", "All x.(Sally(x) -> Zumpus(x))", "Sally ist zumpus(Sally)", "Sally is zumpus.", "Sally ist ein Zumpus.", "all x.(Sally(x) -> Zumpus(x))", "Sally is a zumpus.", "All x.(Sally(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_481", "nl": "Yumpuses are numpuses.", "fol": "all x. (yumpus(x) -> numpus(x))", "prediction": ["all x.(Yumpus(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x))", "(Numpus(y) & Numpus(z))", "all x.(Yumpus(x) -> Numpuse(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpus(x))", "all x.(Umpuse(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpus(x))", "all x y.((Yumpus(x) & Numpus(y)) -> Numpuse(x))", "all x.(Umpuse(x) -> Numpus(x))", "all x.(Yumpus(x) -> Numpuse(x))", "(Numpus)", "all x.(Yumpus(x) -> Numpus(x))", "All x.(Umpuse(x) -> Numpuse(x))", "all x.(Yumpus(x) -> Numpuse(x))", "All x.(Yumpus(x) -> Numpus(x))"]}
{"id": "prontoqa_validation_482", "nl": "Alex is a lempus and a yumpus and a lorpus.", "fol": "(lempus(Alex) & yumpus(Alex) & lorpus(Alex))", "prediction": ["all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x y z.((Alex(x) & Lempus(y) & Yumpus(z)) -> (Lorpus(x) & Lempus(y) & Yumpus(z)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z) & Y.(Yumpus(z) & Y.(Yumpus(z)))))", "all x y.((Alex(x) & Lempus(x) & Yumpus(y) & Lorpus(y)) -> (Lempus(x) & Yumpus(y) & Lorpus(y)))", "(Lempus(Alex) & Yumpus(Alex) & Lorpus(Alex))", "all x y z.((Alex(x) & Lempus(y) & Yumpus(z)) -> (Lempus(x) & Yumpus(z) & Lorpus(z)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "all x y.((Alex(x) & Lempus(y)) -> (Yumpus(x) & Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & all y.(Yumpus(y) & all z.(Lorpus(z)) -> Lempus(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) & Lorpus(x)))", "all x.(Alex(x) -> (Lempus(x) & Yumpus(x) & Lorpus(x)))", "exists x.(Alex(x) & Lempus(x) & Yumpus(x) & Lorpus(x))", "all x.(Alex(x) -> (Lempus(x) | Yumpus(x) | Lorpus(x)))", "(all x.(Alex(x) -> Lempus(x)) & (Yumpus(x) | Lorpus(x))))"]}
{"id": "prontoqa_validation_483", "nl": "Alex is a yumpus, a numpus, or an impus.", "fol": "(yumpus(Alex) | numpus(Alex) | impus(Alex))", "prediction": ["all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "(Yumpus(Alex) | Numpus(Alex) | Imperator(Alex))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "(yumpus) | numpus(x) | impus(x))", "(Yumpus,yumpus,numpus,isolator)", "all x y.((Alex(x) & (Yumpus(x) | Numpus(x) | Imperator(x))) -> Alex(x))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "(Yumpus,Yumpus(Alex) | Numpus,Alex,Issue))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Issue(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Imperator(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impermissible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Numpus(x) | Impossible(x)))", "all x.(Alex(x) -> (Yumpus(x) | Noxus(x) | Issue(x)))", "exists x.(Alex(x) & (yumpus(y) | numpus(y) | impus(y)))", "exists x.(Alex(x) & (Yumpus(x) | Numpus(x) | Impossible(x)))"]}
{"id": "prontoqa_validation_484", "nl": "Everything that is a lorpus, a grimpus, or a yumpus is a lempus and a rompus and a wumpus.", "fol": "all x. ((lorpus(x) | grimpus(x) | yumpus(x)) -> (lempus(x) & rompus(x) & wumpus(x)))", "prediction": ["all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(y) & Rompus(y) & Wumpus(y)))", "(all x.((Lorpus(x) | Grimpus(x) | Yumpus(x))) -> Lempus(x)) & all y.((Rompus(y) & wumpus(y)) -> Lempus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(y) & Wumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.(Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "(all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> LempusAndRompusAndWumpus(x)))", "(all x.((Lorpus(x) | Grimpus(x) | Yumpus(x))) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(x) & Rompus(x) & Wumpus(x)))", "all x y.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Lempus(y) & Rompus(y) & Wumpus(y)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yumpus(x)) -> (Limpus(x) & Rompus(x) & Wumpus(x)))", "all x.((Lorpus(x) | Grimpus(x) | Yampus(x)) -> (Lempus(x) | Rompus(x) | Wumpus(x)))"]}
{"id": "prontoqa_validation_485", "nl": "Polly is a grimpus.", "fol": "grimpus(Polly)", "prediction": ["all x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "(Grimpus(Polly))", "all x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "all x.(Polly(x) -> Grimpus(x))", "(Gruppus(Polly) & Grimpus(Polly))", "(Grimpus(Polly))", "Polly is a Grimpus.", "(Grimpus(Polly) & Grimpus(Polly))", "all x.(Polly(x) -> Grimpus(x))", "Polly is a Grumpus.", "all x.(Polly(x) -> Grimpus(x))", "All x.(Polly(x) -> Grimpus(x))", "Polly is a Grimpus.", "(Grimpus)"]}
{"id": "prontoqa_validation_486", "nl": "Dumpuses are lorpuses.", "fol": "all x. (dumpus(x) -> lorpus(x))", "prediction": ["all x.(Dumpuse(x) -> Lorpus(x))", "all x.(Dumpuse(x) -> Lorpuse(x))", "(Lorpuse(dumpuse) & -Lorpuse(dumpuse))", "all x y.((Dumpuse(x) & Lorpus(y)) -> Is(x,y))", "all x.(Dumpuse(x) -> Lorpus(x))", "(Lumpuse(dumpuse) & Thrombosis(dumpuse))", "all x.(Dumpuse(x) -> Loomis(x))", "all x y.((Dumpuse(x) & Lorpus(y)) -> Loomis(x))", "(Lorpuse(dumpuse) -> LocatedIn(dumpuse,lorpuse))", "all x.(Dumpuse(x) -> Lorpuse(x))", "all x.(Dumpus(x) -> Loomis(x))", "all x.(Dumpus(x) -> Lorpus(x))", "all x.(Dumpus(x) -> Lorpuse(x))", "all x.(Dumpuse(x) -> Loomise(x))", "all x.(Dumpus(x) -> Lompus(x))", "All x.(Dumpus(x) -> Lorpus(x))"]}
{"id": "prontoqa_validation_487", "nl": "Rex is a shumpus and a vumpus and a dumpus.", "fol": "(shumpus(Rex) & vumpus(Rex) & dumpus(Rex))", "prediction": ["(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) & Dumpus(x)))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x y.((Rex(x) & Humpus(y)) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) & Dumpus(y)))", "all x.(Rex(x) -> (Shumpus(x) | Vumpus(x) | Dumpus(x)))", "(Shumpus(rex) & Vumpus(rex) & Dumpus(rex))", "(all x.(Rex(x) -> Shumpus(x)) & all y.(Vumpus(y) & Dumpus(y)))", "all x.(Rex(x) -> (Shumpus(x) & Vumpus(x) & Dumpus(x)))", "all x y.((Rex(x) & Humpus(y)) -> (Vumpus(x) & Dumpus(x)))", "(all x.(Rex(x) -> Humpus(x)) & (Vumpus(x) -> Dumpus(x)))", "exists x.(Rex(x) & Humpus(x) & Vumpus(x) & Dumpus(x))", "all x.(Rex(x) -> (Shumpus(x) | Vumpus(x) | Dumpus(x)))", "(Shumpus(rex) & Vumpus(rex) & Dumpus(rex))", "(all x.(Rex(x) -> Humpus(x)) & all y.(Vumpus(y) -> Dumpus(y)))", "all x.(Rex(x) -> (Shumpus(x) | Vampus(x) | Dumpus(x)))", "(all x.(Rex(x) -> Shumpus(x)) & (Vumpus(x) & Dumpus(x)))"]}
{"id": "prontoqa_validation_488", "nl": "Rex is a yumpus, a tumpus, or a lorpus.", "fol": "(yumpus(Rex) | tumpus(Rex) | lorpus(Rex))", "prediction": ["all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "(Yumpus(rex) | Tumpus(rex) | Lorpus(rex)))", "(yumpus) | tumpus(y) | lorpus(y))", "(Yumpus,Yumpus(y) | Tumpus(y) | Lorpus(y))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x y.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "(Yumpus,yumpus,tumpus,lorpus)", "(yumpus) | tumpus(x) | lorpus(x))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "all x.(Rex(x) -> (Yumpus(x) | Tumpus(x) | Lorpus(x)))", "exists x.(Rex(x) & (Yumpus(x) | Tumpus(x) | Lordpus(x)))", "exists x.(Rex(x) & (Yumpus(x) | Tumulus(x) | Lorpus(x)))"]}
{"id": "prontoqa_validation_489", "nl": "Everything that is a wumpus or a grimpus or a brimpus is a vumpus, an impus, and a sterpus.", "fol": "all x. ((wumpus(x) | grimpus(x) | brimpus(x)) -> (vumpus(x) & impus(x) & sterpus(x)))", "prediction": ["all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.(((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "all x y.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(y) & Impossible(y) & Sterpus(y)))", "all x.(((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "(all x.((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))", "all x.(Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperator(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x y.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(y) & Impossible(y) & Sterpus(y)))", "(all x.((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Vumpus(x) & Imperempt(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Impossible(x) & Sterpus(x)))", "(all x.((Wumpus(x) | Grimpus(x) | Brimpus(x))) -> (Umpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Umpus(x) & Impossible(x) & Sterpus(x)))", "all x.((Wumpus(x) | Grimpus(x) | Brimpus(x)) -> (Vumpus(x) & Issue(x) & Sterpus(x)))"]}
{"id": "prontoqa_validation_490", "nl": "Rex is a wumpus.", "fol": "wumpus(Rex)", "prediction": ["all x.(Rex(x) -> Wumpus(x))", "Rex is a wumpus.", "(Wumpus(Rex))", "Rex is a wumpus.", "all x.(Rex(x) -> Wumpus(x))", "Rex is a Wumpus.", "all x.(Wumpus(x) -> Rex(x))", "(Wumpus(Rex) & HasWumpus(Rex))", "Rex (Wumpus)", "Rex is a wumpus.", "All x.(Rex(x) -> Wumpus(x))", "all x.(Wumpus(x) -> Rex(x))", "(Wumpus(Rex))", "Rex is a Wumpus.", "(Wumpus(rex) & HasWumpus(rex))", "All x.(Rex(x) -> Wumpus(x))"]}
{"id": "prontoqa_validation_491", "nl": "Rex is a vumpus.", "fol": "vumpus(Rex)", "prediction": ["all x.(Rex(x) -> Vumpus(x))", "Rex is a Vumpus.", "(Vumpus(Rex))", "(Vumpus(Rex) & -Vumpus(Rex))", "Rex.(Vumpus(x) -> Is(x,y))", "Rex is a Vumpus.", "all x.(Rex(x) -> Vumpus(x))", "Rex.(Vumpus(x) -> HasVumpus(x))", "(Vumpus(Rex) & HasVumpus(Rex))", "Rex is a Vampus.", "Rex is a vumpus.", "all x.(Rex(x) -> Vumpus(x))", "All x.(Rex(x) -> Vampire(x))", "Rex is a Vumpus.", "all x.(Rex(x) -> Vumpus(x))", "All x.(Rex(x) -> Vampus(x))"]}
{"id": "prontoqa_validation_492", "nl": "Grimpuses are yumpuses, rompuses, and lorpuses.", "fol": "all x. (grimpus(x) -> (yumpus(x) & rompus(x) & lorpus(x)))", "prediction": ["all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "(all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "(yumpuses(x) | rompuses(x) | lorpuses(x)))", "(all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x y z.((Grimpuse(x) & Yumpus(y) & Rompus(z) & Lorpus(z)) -> (Yumpus(y) | Rompus(z) | Lorpus(z)))", "(all x.(Grimpus(x) -> Yumpes(x)) & all y.(Rompus(y) -> Lorpus(y)))", "all x y z.((Grimpus(x) & Yumpus(y) & Rompus(z) & Lorpus(z)) -> (Yumpus(y) | Rompus(z) | Lorpus(z)))", "(Yumpuses(Grimpus) | Rompuses(Grimpus) | Lorpuses(Grimpus))", "(all x.(Grimpuse(x) -> (Yumpuse(x) | Rompuse(x) | Lorpuse(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpuses(x) | Rompuses(x) | Lorpuses(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpuse(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))", "all x.(Grimpus(x) -> (Yumpus(x) | Rompus(x) | Lorpus(x)))"]}
{"id": "prontoqa_validation_493", "nl": "Numpuses are not yumpuses.", "fol": "all x. (numpus(x) -> -yumpus(x))", "prediction": ["all x.(Numpus(x) -> -Yumpus(x))", "(all x.(Numpus(x) -> -Yumpus(x)))", "all x.(Numpus(x) -> -Yumpus(x))", "-Yumpus(n)", "(all x.(Numpus(x) -> -Yumpus(x)))", "all x.(Numpus(x) -> -Yumpus(x))", "-Yumpus(n)", "-Yumpus(nupuse)", "all x.(Numpuse(x) -> -Yumpus(x))", "(yumpus)", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpuse(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))", "all x.(Numpus(x) -> -Yumpus(x))"]}
{"id": "prontoqa_validation_494", "nl": "Alex is a numpus and a rompus and a sterpus.", "fol": "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "prediction": ["all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & All z.(Sterepus(z))) -> Sterpus(z)))", "(numpus(Alex) | Rompus(Alex) | Sterpus(Alex)))", "all x y.((Alex(x) & Numpus(x) & Rompus(y) & Sterpus(x)) -> (Numpus(x) & Sterpus(y)))", "(Numpus(Alex) & Rompus(Alex) & Sterpus(Alex))", "all x y z.((Alex(x) & Numpus(y) & Rompus(z)) -> (Numpus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "(all x.(Alex(x) -> Numpus(x)) & (Rompus(x) & Sterpus(x)))", "(numpus(Alex) & rompus(Alex) & sterpus(Alex))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))", "(Numpus(Alex) | Rompus(Alex) | Sterpus(Alex))", "all x y.((Alex(x) & Numpus(x) & Rompus(y)) -> Sterpus(x))", "(all x.(Alex(x) -> Numpus(x)) & all y.(Rompus(y) & all z.(Sterpus(z) & -Numpus(y))))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Sterpus(x)))", "all x.(Alex(x) -> (Numpus(x) & Rompus(x) & Steroid(x)))", "all x.(Alex(x) -> (numpus(x) & rompus(x) & sterpus(x)))"]}
{"id": "prontoqa_validation_495", "nl": "Alex is not a grimpus.", "fol": "-grimpus(Alex)", "prediction": ["all x.(Alex(x) -> -Grimpus(x))", "Alex is notGrimpus(Alex)", "Alex is not a Grimpus.", "(-Grimpus(Alex))", "all x.(Alex(x) -> -Grimpus(x))", "-Grimpus(Alex)", "Alex is notGrimpus.", "all x.(Alex(x) -> -Grimpus(x))", "Alex is not a Grimpus.", "(-Grimpus(Alex))", "all x.(Alex(x) -> -Grimpus(x))", "-Gruppus(Alex)", "Alex is notGrimpus.", "(-Grimpus(Alex)).", "all x.(Alex(x) -> -Grimpus(x))", "All x.(Alex(x) -> -Grimpus(x))"]}
{"id": "prontoqa_validation_496", "nl": "Everything that is a dumpus or a wumpus or a numpus is a jompus, a tumpus, and a zumpus.", "fol": "all x. ((dumpus(x) | wumpus(x) | numpus(x)) -> (jompus(x) & tumpus(x) & zumpus(x)))", "prediction": ["all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumps(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x y.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(y) | Tumpus(y) | Zumpus(y)))", "(all x.((Dumpus(x) | Wumpus(x) | Numpus(x))) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x y.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(y) & Tumpus(y) & Zumpus(y)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumps(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "(all x.((Dumpus(x) | Wumpus(x) | Numpus(x))) -> (Jimpus(x) | Tumpus(x) | Zumpus(x)))", "all x.(DumpusOrWumpusOrNumbus(x) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "(all x.((Dumpsus(x) | Wumpus(x) | Numpus(x))) -> (Jompus(x) | Tumpus(x) | Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jumpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jimpus(x) & Tumpus(x) & Zumpus(x)))", "all x.((Dumpus(x) | Wumpus(x) | Numpus(x)) -> (Jompus(x) & Tumpus(x) & Zumpus(x)))"]}
{"id": "prontoqa_validation_497", "nl": "Alex is a zumpus.", "fol": "zumpus(Alex)", "prediction": ["all x.(Alex(x) -> Zumpus(x))", "Alex is zumpus.", "Alex is a zumpus.", "all x.(Alex(x) -> Zumpus(x))", "Alex is zumpus.", "all x.(Alex(x) -> Zumpus(x))", "Alex is a zumpus.", "all x.(Alex(x) -> Zumpus(x))", "(Tompus(Alex) & HasTom(Alex))", "all x.(Alex(x) -> Zumpus(x))", "Alex ist zumpus.", "all x.(Alex(x) -> Zumpus(x))", "Alex is Zumpus.", "(Zumpus(Alex))", "All x.(Alex(x) -> Zumpus(x))", "All x.(Alex(x) -> Zumpus(x))"]}
{"id": "prontoqa_validation_498", "nl": "Everything that is a grimpus, a zumpus, and a numpus is a wumpus.", "fol": "all x. ((grimpus(x) & zumpus(x) & numpus(x)) -> wumpus(x))", "prediction": ["all x.((Smokey(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Fragpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x y z.((Smooch(x) & Zumpus(y) & Numpus(z) & Grimpus(x) & Zumpus(y) & Numpus(z)) -> Wumpus(x))", "all x.((Gruppus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Crupid(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x y.((Smooch(x) & Zumpus(y) & Numpus(x)) -> Wumpus(x))", "all x.((Smoothpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Grimpus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Element(x) & Grimpus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Smooch(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Fragus(x) & Zumpus(x) & Numpus(x)) -> Wumpus(x))", "all x.((Grampus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "all x.((Gruppus(x) | Zumpus(x) | Numpus(x)) -> Wumpus(x))", "(all x.((Grimpus(x) | Zumpus(x) | Numpus(x))) -> Wumpus(x))", "(all x.((Grimpus(x) | Zumpus(x) | Numpus(x))) -> Wumpus(x))", "(all x.((Grimpus(x) | Zumpus(x) | Numpus(x))) -> Wumpus(x))"]}
{"id": "prontoqa_validation_499", "nl": "Stella is a grimpus.", "fol": "grimpus(Stella)", "prediction": ["Stella is a Grimpus.", "all x.(Stella(x) -> Grimpus(x))", "(Grimpus(Stella))", "Stella is a Grimpus.", "(Grimpus(Stella) & Grimpus(Stella))", "(Gruppus(Stella) & Grimpus(Stella))", "all x.(Stella(x) -> Grimpus(x))", "(Stella,Grimpus)", "Stella is a Grimpus.", "Stella is a Gruppus.", "all x.(Stella(x) -> Grimpus(x))", "(Grimpus(Stella))", "Stella is Grimpus.", "all x.(Stella(x) -> Gruppus(x))", "Stella is a Grimpus.", "Stella is a Grumpus."]}
{"id": "prontoqa_validation_500", "nl": "Stella is a wumpus or a jompus or a rompus.", "fol": "(wumpus(Stella) | jompus(Stella) | rompus(Stella))", "prediction": ["all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x y.((Stella(x) & Wumpus(y)) | (Jompus(x) | Rompus(x))))", "all x.((Stella(x) & (Wumpus(x) | Jompus(x) | Rompus(x))) -> Wumpus(x))", "(all x.(Stella(x) -> Wumpus(x)) | (Jompus(x) | Rompus(x))))", "(Wumpus(Stella) | Jompus(Stella) | Rompus(Stella)))", "(Wumpus(s) | Jompus(s) | Rompus(s)))", "(Wumpus,Wumpus,Jompus,Rompus)", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "exists x.(Wumpus(x) | Jompus(x) | Rompus(x))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "all x.(Stella(x) -> ((Wumpus(x) | Jompus(x) | Rompus(x))))", "exists x.(Wumpus(x) | Jompus(x) | Rompus(x))", "all x.(Stella(x) -> (Wumpus(x) | Jompus(x) | Rompus(x)))", "exists x.(Wumpus(x) | Jompus(x) | Rompus(x))"]}
{"id": "prontoqa_validation_501", "nl": "Everything that is a brimpus and a lempus and a shumpus is a wumpus, a vumpus, and a grimpus.", "fol": "all x. ((brimpus(x) & lempus(x) & shumpus(x)) -> (wumpus(x) & vumpus(x) & grimpus(x)))", "prediction": ["all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y z.((Brimpus(x) & Lempus(y) & Humpus(z) & Is(x,y) & Is(x,z)) -> (Wumpus(x) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,z)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(y)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "(all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(y)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brumpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "(all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brumpus(x) | Lempus(x) | Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "(all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x y.((Brimpus(x) & Lempus(y) & Humpus(y)) -> (Wumpus(x) | Vumpus(x) | Grimpus(x)))", "all x.((Brimpus(x) & Lempus(x) & Humpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))", "all x.((Brampus(x) & Lempus(x) & Shumpus(x)) -> (Wumpus(x) & Vumpus(x) & Grimpus(x)))"]}
{"id": "prontoqa_validation_502", "nl": "Fae is a lempus.", "fol": "lempus(Fae)", "prediction": ["all x.(Fae(x) -> Lempus(x))", "Fae is a lempus.", "all x.(Fae(x) -> Lempus(x))", "(Lempus(Fae) & Lempus(Fae))", "Fae is a lempus.", "all x.(Fae(x) -> Lempus(x))", "(Lempus(fae) & Lempus(fae))", "all x.(Fae(x) -> Lempus(x))", "(Limpus(fae) -> Lempus(fae,fae))", "(Lempus(fee) & Lempus(fee))", "all x.(Fae(x) -> Lempus(x))", "all x.(Fae(x) -> Lempus(x))", "(Lempus)", "all x.(Fae(x) -> Lempus(x))", "exists x.(Fae(x) & Lempus(x))", "All x.(Fae(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_503", "nl": "Each gorpus is not a rompus.", "fol": "all x. (gorpus(x) -> -rompus(x))", "prediction": ["all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> -Rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Rompus(x) -> -Rompus(x))", "all x y.((Gorpus(x) & Rompus(y)) -> -Rompus(x))", "(-rompus)", "all x.(Gorpus(x) -> -Rompus(x))", "all x.(Gorpus(x) -> -rompus(x))", "(-rompus)", "all x.(Gorpus(x) -> -rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "exists x.(Gorpus(x) & -rompus(x))", "exists x.(Gorpus(x) & -rompus(x))", "all x.(Gorpus(x) -> -Rompus(x))", "exists x.(Gorpus(x) & -Rompus(x))"]}
{"id": "prontoqa_validation_504", "nl": "Every yumpus is a vumpus.", "fol": "all x. (yumpus(x) -> vumpus(x))", "prediction": ["all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "(all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x y.(Yumpus(x) & Vumpus(y))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "exists x.(Yumpus(x) & -Vumpus(x))", "all x.(yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vumpus(x))", "all x.(Yumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_validation_505", "nl": "Sam is a gorpus and a wumpus and a brimpus.", "fol": "(gorpus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Gorpus(y) & Wumpus(z)) -> (Gorpus(x) & Wumpus(z) & Brimpus(z)))", "all x y.((Sam(x) & Gorpus(x) & Wumpus(y) & Brimpus(x)) -> (Gorpus(x) & Wumpus(y)))", "(all x.(Sam(x) -> Gorpus(x)) & all y.(Wumpus(y) & -Brimpus(y))))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(Gorpus(Sam) & Wumpus(Sam) & Brimpus(Sam))", "all x y.((Sam(x) & Gorpus(y)) -> (Wumpus(x) & Brimpus(x)))", "(Gorpus,Wumpus,Brimpus)", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) | Brimpus(x))))", "all x.(Sam(x) -> (Gorpus(x) | Wumpus(x) | Brimpus(x)))", "exists x.(Sam(x) & Gorpus(x) & Wumpus(x) & Brimpus(x))", "all x.(Sam(x) -> (Gorpus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Gorpus(x)) & (Wumpus(x) | Brimpus(x)))", "all x.(Sam(x) -> (Gorpus(x) | Wumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_506", "nl": "Everything that is a rompus, a grimpus, and a lorpus is an impus and a sterpus and a dumpus.", "fol": "all x. ((rompus(x) & grimpus(x) & lorpus(x)) -> (impus(x) & sterpus(x) & dumpus(x)))", "prediction": ["all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Grimpus(x) & Lorpus(y)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "all x y z.((Rompus(x) & Grimpus(y) & Lorpus(z) & Is(x,y) & Is(x,z)) -> (Impossible(x) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,z) & Is(x,y) & Is(x,y) & Is(x,y) & Is(x,y) & Is(x,y)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x) & Impossible(x)))", "(all x.((Rompus(x) | Grimpus(x) | Lorpus(x))) -> Is(x,Impossible)) & all y.((Impossible(y) & Sterpus(y) & Dumpus(y)) -> Is(y,Dumpus)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x y.((Rompus(x) & Grimpus(y) & Lorpus(x)) -> (Impossible(x) & Impossible(y) & Sterpus(y) & Dumpus(y)))", "(all x.((Rompus(x) | Grimpus(x) | Lorpus(x))) -> Is(x,Is(x,IsSterpus) & Is(x,Is(x,Is(x,Is(x,Is(x,Is(x))) & all y.((Is(y,Is(y,Is(y)) & all z.((Is(z) & Is(z))) & All(z)))))", "all x.((Rompus(x) & Grimpus(x) & Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "(all x.((Rompus(x) | Grimpus(x) | Lorpus(x))) -> Impossible(x)) & all y.((Sterpus(y) & Dumpus(y)) -> Impossible(y)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Issue(x) & IsSterpus(x) & IsDumpus(x)))", "all x.((Rompus(x) & Grimpus(x) & Lorpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.(Rompus(x) & Gruppus(x) & Lorpus(x) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lowerpus(x)) -> (Impossible(x) & Sterpus(x) & Dumpus(x)))", "all x.((Rompus(x) | Grimpus(x) | Lorpus(x)) -> (Impossible(x) | Sterpus(x) | Dumpus(x)))"]}
{"id": "prontoqa_validation_507", "nl": "Polly is a sterpus.", "fol": "sterpus(Polly)", "prediction": ["all x.(Polly(x) -> Sterpus(x))", "Polly is a Sterpus.", "(Sterpus(Polly) & Sterpus(Poly))", "all x.(Polly(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Polly(x))", "all x.((Polly(x) & Sterpus(x)) -> Sterpus(x))", "Polly is a Sterpus.", "Polly is sterpus.", "Polly is Sterpus.", "(Sterpus(Polly))", "all x.(Sterpus(x) -> Polly(x))", "(Sterpus(Poly) & Sterpus(Poly))", "All x.(Polly(x) -> Sterpus(x))", "(Sterepus(Poly) & Sterpus(Poly))", "All x.(Polly(x) -> Sterpus(x))", "all x.(Sterpus(x) -> Polly(x))"]}
{"id": "prontoqa_validation_508", "nl": "Each grimpus is a shumpus.", "fol": "all x. (grimpus(x) -> shumpus(x))", "prediction": ["all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "(all x.(Grimpus(x) -> Humpus(x))", "all x y.((Grimpus(x) & Grimpus(y)) -> Shumpus(x))", "all x.(Grimpus(x) -> Shumpus(x))", "all x.(Slumpus(x) -> Grimpus(x))", "all x.(Grimpus(x) -> Humpus(x))", "exists x.(Gravity(x) & Grimpus(x) & Shumpus(x))", "all x.(Grampus(x) -> Shumpus(x))", "exists x.(Grimpus(x) & Humpus(x))", "all x.(Shumpus(x) -> Grimpus(x))", "exists x.(Grimpus(x) & Humpus(x))", "exists x.(Grimpus(x) & Shumpus(x))"]}
{"id": "prontoqa_validation_509", "nl": "Impuses are sterpuses, yumpuses, and lorpuses.", "fol": "all x. (impus(x) -> (sterpus(x) & yumpus(x) & lorpus(x)))", "prediction": ["all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impus(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Yumpuse(y) -> Yumpuse(y)) & all z.(Lorpuse(z) -> Yumpuse(z))))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Yumpuse(y) & all z.(Lorpuse(z)) -> Sterpuse(y)))", "all x y z.((Impuse(x) & Sterpuse(y) & Yumpuse(z)) -> (Sterpuse(x) | Yampuse(z) | Lorpuse(z)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impus(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "(all x.(Impuse(x) -> Sterpuse(x)) & all y.(Impuse(y) -> Yumpe(y)) & all z.(Impuse(z) -> Lorpuse(z))))", "(all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x y z.(Impuse(x) -> (Sterpuse(y) | Yumpuse(y) | Lorpuse(z)))", "(all x.(Impuse(x) -> (Sterpuse(x) | Yumpuse(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))", "all x.(Impuse(x) -> (Sterpuses(x) | Yampuses(x) | Lorpuses(x)))", "exists x.(Impuse(x) & ((Sterus(x) & Yumpus(x)) | (Yumpus(x) & Lorpus(x))))", "all x.(Impue(x) -> (Sterpuse(x) | Yumpe(x) | Lorpuse(x)))"]}
{"id": "prontoqa_validation_510", "nl": "Shumpuses are not sterpuses.", "fol": "all x. (shumpus(x) -> -sterpus(x))", "prediction": ["all x.(Shumpus(x) -> -Sterpuse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "(all x.(Shupuse(x) -> -Sterpuse(x)))", "(-Shampoos(shmuckuse))", "-Shumpus(s)", "all x.(Shampoo(x) -> -Sterpuse(x))", "all x.(Shampoos(x) -> -Sterpuse(x))", "-(Shampoose(s) & Sterpuse(s))", "all x.(Shumpus(x) -> -Sterpus(x))", "-Shampoos(sh)", "all x.(Shumpsue(x) -> -Sterpuse(x))", "(all x.(Shampus(x) -> -Sterpuse(x)))", "all x.(Shutus(x) -> -Steruse(x))", "all x.(Shupuse(x) -> -Sterpuse(x))", "all x.(Shumpus(x) -> -Stereose(x))", "all x.(Shuppe(x) -> -Sterpuse(x))"]}
{"id": "prontoqa_validation_511", "nl": "Every wumpus is a sterpus.", "fol": "all x. (wumpus(x) -> sterpus(x))", "prediction": ["all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "(all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x y.((Wumpus(x) & Sterpus(y)) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "all x.(Wumpus(x) -> Sterepus(x))", "all x.(Wumpus(x) -> Sterpus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "exists x.(Wumpus(x) & Sterpus(x))", "exists x.(Wumpus(x) & sterpus(x))"]}
{"id": "prontoqa_validation_512", "nl": "Every tumpus is a wumpus.", "fol": "all x. (tumpus(x) -> wumpus(x))", "prediction": ["all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "(all x.(Tumpus(x) -> Wumpus(x)))", "all x y.((Tumpus(x) & Wumpus(y)) -> Has(x,y))", "all x.(Tumpus(x) -> Wumpus(x))", "all x y.((Tumpus(x) & Wumpus(y)) -> Is(x,y))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wampus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "all x.(Tumpus(x) -> Wumpus(x))", "exists x.(Tompus(x) & Tumpus(y) & Wumpus(z))", "all x.(Tumpus(x) -> Wampus(x))", "exists x.(Tumpus(x) & Humpus(x))", "exists x.(Tumpus(x) & Wumpus(x))", "all x.(Tumpus(x) -> Wompus(x))"]}
{"id": "prontoqa_validation_513", "nl": "Sam is a shumpus, Sam is not a sterpus, and Sam is an impus.", "fol": "(shumpus(Sam) & -sterpus(Sam) & impus(Sam))", "prediction": ["(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Impossible(x) -> Sam(x)))", "all x y z.((Sam(x) & Shumpus(y) & Sterpus(z)) -> (Sam(x) & -Sterpus(x) & Impossible(x)))", "(all x.(Shumpus(x) -> Sam(x)) & (-Sterpus(x) -> Sam(x)) & (Illegal(x) -> Sam(x)))", "(all x.(Shumpus(x) -> -Sterpus(x)) & all y.(Illegal(y) -> -Shumpus(y)))", "all x.(Shumpus(x) & -Sterpus(x) & Imperator(x))", "all x y z.((Shumpus(x) & Sterpus(y) & Imperator(z)) -> (Shumpus(x) & -Sterpus(y) & Imperator(z)))", "(all x y z.((Shumpus(x) & Sterpus(y) & Impossible(z)) -> (Shumpus(x) & -Sterpus(y)))", "all x y z.((Sam(x) & Sterpus(y) & Imperator(z)) -> (Shumpus(x) & -Sterpus(y) & Imperator(z)))", "all x.(Sam(x) -> (Shumpus(x) | -Sterpus(x) | Imperator(x)))", "(all x.(Sam(x) -> Humpus(x)) & (Sam(x) -> -Sterpus(x)) & (Sam(x) -> Imperator(x)))", "(all x.(Shumpus(x) -> Sam(x)) & all y.(Sterpus(y) -> Sam(y))) & all z.(Illegal(z) -> Sam(z)))", "all x y z.(Sam(x) -> (Shumpus(x) & -Sterpus(y) & Imperator(z)))", "(all x.(Shumpus(x) -> Shumpus(x)) & (-Sterpus(x) -> Sterpus(x)) & (-Shumpus(x) -> Impermissible(x)))", "(all x y z.((Shumpus(x) & Sam(y) & Sterpus(z)) -> Shumpus(x)) & ((Shumpus(y) & -Sterpus(y)) -> Imperator(y)))", "(all x.(Sam(x) -> Shumpus(x)) & (-Sterpus(x) & (Illegal(x) | Isolator(x))))", "exists x.(Shumpus(x) & -Sterpus(x) & Imperator(x))"]}
{"id": "prontoqa_validation_514", "nl": "Zumpuses are gorpuses, yumpuses, and brimpuses.", "fol": "all x. (zumpus(x) -> (gorpus(x) & yumpus(x) & brimpus(x)))", "prediction": ["all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "(all x.(Zumpus(x) -> Gorpuse(x)) & all y.(Yumpuse(y) -> Brimpuse(y)))", "(all x.(Zumpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x))))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "all x y z.((Zumpuse(x) & Gorpus(y) & Yumpus(z)) -> (Gorpus(y) | Brimpuse(z)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "(all x.(Zumpus(x) -> Gorpus(x)) & all y.(Yumpus(y) -> Brimpuse(y)))", "all x y z.((Zumpuse(x) & Gorpus(y) & Yumpus(z)) -> (Gorpus(x) | Brimpuse(x)))", "all x.(Zimpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "(all x.(Zumpuse(x) -> Gorpus(x)) & all y.(Yumpus(y) -> Brimpuse(y)))", "all x.(Zumpus(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yumpus(x) | Brimpuse(x)))", "(all x.(Zimpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))", "all x.(Zumpus(x) -> (Gorpus(x) | Yampus(x) | Brimpuse(x)))", "all x.(Zimpuse(x) -> (Gorpuse(x) | Yumpuse(x) | Brimpuse(x)))"]}
{"id": "prontoqa_validation_515", "nl": "Wren is a yumpus, an impus, or a brimpus.", "fol": "(yumpus(Wren) | impus(Wren) | brimpus(Wren))", "prediction": ["all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "(Yumpus,Impossible(Wren) | Brimpus(Wren))", "all x y.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "(Yumpus,Impossible(w) | Brimpus(w))", "all x.(Wren(x) -> (Yumpus(x) | Imperator(x) | Brimpus(x)))", "(yumpus) | impus(y) | Brimpus(y))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Issue(x) | Brimpus(x)))", "all x y.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Imperative(x) | Brimpus(x)))", "all x.(Wren(x) -> (Yumpus(x) | Impossible(x) | Brimpus(x)))", "exists x.(Wren(x) & (Yumpus(x) | Issue(x) | Brimpus(x)))", "exists x.(Wren(x) & (yumpus(y) | impus(y) | Brimpus(y)))", "exists x.(Wren(x) & (Yumpus(x) | Imperator(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_516", "nl": "Every impus is a lempus and a rompus and a gorpus.", "fol": "all x. (impus(x) -> (lempus(x) & rompus(x) & gorpus(x)))", "prediction": ["all x.(Impossible(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "(all x.(Impact(x) -> Lempus(x)) & all y.(Rompus(y) & all z.(Gorpus(z)) -> Gorpus(z))))", "all x y.((Issue(x) & Lempus(x) & Rompus(y) & Gorpus(y)) -> Issue(x,y))", "(all x.(Impossible(x) -> Lempus(x)) & all y.(Impossible(y) -> Rompus(y)) & all z.(Impossible(z) -> Gorpus(z))))", "all x y z.((Issue(x) & Lempus(y) & Rompus(z) & Gorpus(z)) -> (Issue(x,y) & Issue(x,z)))", "all x.(Impose(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Issue(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "(all x.(Impact(x) -> Lempus(x)) & (Impact(x) -> Rompus(x)) & Impact(x) & Impact(x)))", "all x.(Impact(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "exists x.(Impact(x) & Lempus(x) & Rompus(x) & Gorpus(x))", "(all x.(Impossible(x) -> Lempus(x)) & all y.(Rompus(y) & all z.(Gorpus(z)) -> Gorpus(z))))", "all x y.((Impos(x) & Lempus(y)) -> (Rompus(x) & Gorpus(x)))", "all x.(Issue(x) -> (Lempus(x) & Rompus(x) & Gorpus(x)))", "all x.(Impossible(x) -> (Lempus(x) | Rompus(x) | Gorpus(x)))", "exists x.(Implementation(x) & Lempus(x) & Rompus(x) & Gorpus(x))"]}
{"id": "prontoqa_validation_517", "nl": "Sally is a yumpus and Sally is a sterpus and Sally is not a lempus.", "fol": "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "prediction": ["(all x.(Sally(x) -> Yumpus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Lempus(x)))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) & Sterpus(y) & -Lempus(z)))", "all x y.((Sally(x) & Yumpus(x) & Sterpus(y)) -> (Yumpus(x) & Sterpus(y) & -Lempus(y)))", "(all x.(Sally(x) -> Yumpus(x)) & all y.(Sally(y) -> Sterpus(y)) & all z.(Sally(z) -> -Lempus(z))))", "(yumpus(Sally) & sterpus(Sally) & -lempus(Sally))", "(all x.(Yumpus(x) -> Sally)) & (Sterpus(x) -> Sally)) & (Sally(x) -> -Lempus(x)))", "all x.(Sally(x) -> (Yumpus(x) & Sterpus(x) & -Lempus(x)))", "(all x y.(Yumpus(x) -> Sally(x)) & (Sterpus(y) -> Sally(y)) & (Lempus(y) -> Sally(y)))", "all x y z.((Sally(x) & Yumpus(y) & Sterpus(z)) -> (Yumpus(x) & Sterpus(x) & -Lempus(x)))", "(all x.(Sally(x) -> Yampus(x)) & (Sally(x) -> Sterpus(x)) & (Sally(x) -> -Lempus(x)))", "(yumpus(Sally) & Sterpus(Sally) & -Lempus(Sally))", "all x y.((Sally(x) & Yumpus(x) & Sterpus(y)) -> (Yumpus(x) & Sterpus(y) & -Lempus(y)))", "all x y z.((Sally(x) & Yumpus(x) & Sterpus(y) & -Lempus(z)) -> (Yumpus(x) & Sterpus(y) & -Lempus(z)))", "all x.(Yumpus(x) & Sterpus(x) & -Lempus(x))", "(Yumpus(Sally) & Sterpus(Sally) & -Lempus(Sally))", "exists x.(Yumpus(x) & Sterepus(x) & -Lempus(x))"]}
{"id": "prontoqa_validation_518", "nl": "Sally is not an impus.", "fol": "-impus(Sally)", "prediction": ["Sally -Impossible(Sally)", "all x.(Sally(x) -> -Impossible(x))", "-Impossible(Sally)", "Sally n'est pas impus.", "Sally is not a impus.", "-Impossible(Sally)", "Sally -Is(Sally)", "(-Issue(Sally))", "-Illegal(Sally)", "Sally n'est pas impuse.", "Sally is not impus.", "Sally -Impossible(Sally)", "Sally is not a impus.", "-Impossible(Sally)", "(-Issue(Sally))", "Sally is not impused."]}
{"id": "prontoqa_validation_519", "nl": "Each sterpus is a dumpus and a tumpus and a lempus.", "fol": "all x. (sterpus(x) -> (dumpus(x) & tumpus(x) & lempus(x)))", "prediction": ["all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z)) -> Lempus(z))))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "all x y.((Sterpus(x) & Dumpus(y)) -> (Tumpus(x) & Lempus(x)))", "all x y z.((Sterpus(x) & Dumpus(y) & Tumpus(z)) -> (Tumpus(x) & Lempus(x)))", "all x y.((Sterpus(x) & Dumpus(x) & Tumpus(y) & Lempus(y)) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & (Tumpus(x) | Lempus(x)))", "(all x.(Sterpus(x) -> Dumpus(x)) & all y.(Tumpus(y) & all z.(Lempus(z) & -Dumpus(y))))", "all x.(Sterpus(x) -> (Dumps(x) & Tumpus(x) & Lempus(x)))", "all x.(Sterepus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "exists x.(Sterpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))", "(all x.(Steerpus(x) -> Dumpus(x)) & (Tumpus(x) | Lempus(x)))", "all x.(Steerpus(x) -> (Dumpus(x) & Tumpus(x) & Lempus(x)))", "exists x.(Sterpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))", "exists x.(Steerpus(x) & Dumpus(x) & Tumpus(x) & Lempus(x))"]}
{"id": "prontoqa_validation_520", "nl": "Sally is a sterpus.", "fol": "sterpus(Sally)", "prediction": ["all x.(Sally(x) -> Sterpus(x))", "Sally is a Sterpus.", "(Sterpus(Sally) & Sterpus(Sally))", "all x.(Sally(x) -> Sterpus(x))", "Sally is Sterpus.", "Sally is a Sterpus.", "(Sally,Sterpus)", "all x.(Sally(x) -> Sterpus(x))", "Sally is sterpus.", "(Sterpus(Sally) & Sterpus(Sally))", "Sally (Sterpus)", "Sally is Sterpus.", "all x.(Sally(x) -> Sterpus(x))", "Sally is a sterpus.", "All x.(Sally(x) -> Sterepus(x))", "all x.(Sally(x) -> Sterpus(x))"]}
{"id": "prontoqa_validation_521", "nl": "Sally is an impus, a dumpus, or a brimpus.", "fol": "(impus(Sally) | dumpus(Sally) | brimpus(Sally))", "prediction": ["all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "(Impossible(Sally) | Dumpus(Sally) | Brimpus(Sally))", "all x.(Sally(x) -> (Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x) | Issue(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Issue(x) | IsDumpus(x) | IsBrimpus(x)))", "all x y.((Sally(x) & (Impossible(x) | Dumpus(x) | Brimpus(x))) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "(Issue(Sally,Sally) | IsDumpus(Sally) | IsBrimpus(Sally,Sally))", "(Impossible(Sally) | Dumpus(Sally) | Brimpus(Sally))", "exists x.(Sally(x) & ((Impossible(x) | Dumpus(x) | Brimpus(x))) -> (Impossible(x) | Dumpus(x) | Brimpus(x))))", "all x y.((Sally(x) & Is(y) & (Dumpus(y) | Brimpus(y))) -> Is(x,y))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "(Impossible(Sally) | Dumpus(Sally) | Brimpus(Sally))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Sally(x) & (Issue(x) | Dumpus(x) | Brimpus(x)))", "all x.(Sally(x) -> (Impossible(x) | Dumpus(x) | Brimpus(x)))", "exists x.(Sally(x) & (Issue(x) | Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_522", "nl": "Everything that is a dumpus, a sterpus, or a brimpus is a lempus.", "fol": "all x. ((dumpus(x) | sterpus(x) | brimpus(x)) -> lempus(x))", "prediction": ["all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.(((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x y.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(y))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "(all x.((Dumpus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.(((Dumpsus(x) | Sterpus(x) | Brimpus(x))) -> Lempus(x))", "all x.((Dumpus(x) | Sterus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumps(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x y.((Dumps(x) | Sterus(y) | Brimpus(y)) -> Lempus(x,y))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))", "all x.((Dumpus(x) | Sterpus(x) | Brimpus(x)) -> Lempus(x))"]}
{"id": "prontoqa_validation_523", "nl": "Sam is a lempus, a wumpus, and a brimpus.", "fol": "(lempus(Sam) & wumpus(Sam) & brimpus(Sam))", "prediction": ["all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Lempus(y) & Wumpus(z)) -> (Lempus(x) | Wumpus(z) | Brimpus(z)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Brimpus(y)))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "all x y z.((Sam(x) & Lempus(y) & Wumpus(z)) -> (Lempus(x) & Wumpus(y) & Brimpus(z)))", "(Lempus(sam) | Wumpus(sam) | Brimpus(sam))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & all y.(Wumpus(y) & -Brimpus(y)))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))", "exists x.(Sam(x) & Lempus(x) & Wumpus(x) & Brimpus(x))", "all x.(Sam(x) -> (Lempus(x) & Wumpus(x) & Brimpus(x)))", "(all x.(Sam(x) -> Lempus(x)) & (Wumpus(x) | Brimpus(x)))", "exists x.(Sam(x) & Lempus(x) & Wumpus(x) & Brimpus(x))", "all x.(Sam(x) -> (Lempus(x) | Wumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_524", "nl": "Everything that is a zumpus, a vumpus, and a lorpus is a numpus, a grimpus, and a gorpus.", "fol": "all x. ((zumpus(x) & vumpus(x) & lorpus(x)) -> (numpus(x) & grimpus(x) & gorpus(x)))", "prediction": ["all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Vumpus(y) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x y z.((Tompus(x) & Vumpus(y) & Lorpus(z) & Tompus(x) & Tompus(y) & Tompus(z)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "(all x.((Tompus(x) | Voompus(x) | Lorpus(x))) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x y.((Tompus(x) & Vumpus(x) & Lorpus(y)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "(all x.((Zumpus(x) | Voompus(x) | Lorpus(x))) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Zumpus(x) | Voompus(x) | Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "(all x.((Tompus(x) | Vumpus(x) | Lorpus(x))) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))", "all x.((Tompus(x) & Vumpus(x) & Lorpus(x)) -> (Numpus(x) | Grimpus(x) | Gorpus(x)))", "all x.((Zumpus(x) | Vumpus(x) | Lorpus(x)) -> (Numpus(x) & Grimpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_525", "nl": "Stella is a vumpus.", "fol": "vumpus(Stella)", "prediction": ["all x.(Stella(x) -> Vumpus(x))", "Stella is a Vumpus.", "(Vumpus(Stella))", "(Vumpus(Stella) & -Vumpus(Stella))", "Stella is a Vumpus.", "all x.(Stella(x) -> Vumpus(x))", "Stella is a vumpus.", "(Vumpus(Stella) & Vumpus(Stella))", "all x.(Vumpus(x) -> Stella(x))", "Stella is a Vampus(Stella)", "(Vumpus(Stella) & HasVumpus(Stella))", "Stella is a Vumpus(Stella)", "Stella ist ein Vumpus.", "Stella is a vumpus.", "all x.(Stella(x) -> Vumpus(x))", "Stella is vumpus."]}
{"id": "prontoqa_validation_526", "nl": "Stella is a lorpus.", "fol": "lorpus(Stella)", "prediction": ["Stella is a lorpus.", "all x.(Lorph(x) -> Stella(x))", "(Lorpus(Stella) & LivesIn(Stella,Lorpus))", "Stella is a lorpus.", "(Lorpus(Stella) & Throat(Stella))", "all x.(Lorph(x) -> Stella(x))", "all x.(Lorpus(x) -> Stella(x))", "Stella is a lorpus.", "(Lorpus(Stella) & LivesIn(Stella,Lorpus))", "Stella is a Larke(Stella)", "Stella (Lorpus)", "Stella is a lorpus.", "all x.(Lorph(x) -> Stella(x))", "(Lorpus(Stella) & LivesIn(Stella,Lorpus))", "Stella is a lorpus.", "Stella is a Loomis."]}
{"id": "prontoqa_validation_527", "nl": "Everything that is a zumpus and a shumpus and a sterpus is a jompus and a gorpus and a lorpus.", "fol": "all x. ((zumpus(x) & shumpus(x) & sterpus(x)) -> (jompus(x) & gorpus(x) & lorpus(x)))", "prediction": ["all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y.((Tompus(x) & Shumpus(y) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y z.((Tompus(x) & Shumpus(y) & Sterpus(z) & Has(x,y)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y.((Tompus(x) & Shumpus(x) & Sterpus(y)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) | Humpus(x) | Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x y.((Tompus(x) & Humpus(y) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "(all x.((Tompus(x) & Humpus(x)) -> (Stompus(x) & Jompus(x)) & (Gorpus(x) | Lorpus(x))))", "(all x.((Zumpus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Zumpus(x) | Shumpus(x) | Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Shumpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jompus(x) & Gorpus(x) & Lorpus(x)))", "all x.((Tompus(x) & Humpus(x) & Sterpus(x)) -> (Jimpus(x) & Gorpus(x) & Lorpus(x)))"]}
{"id": "prontoqa_validation_528", "nl": "Sam is a sterpus.", "fol": "sterpus(Sam)", "prediction": ["all x.(Sam(x) -> Sterpus(x))", "(Sam(sam) & Sterpus(sam))", "(Sam,Sterpus)", "all x.(Sam(x) -> Sterpus(x))", "Sam is sterpus.", "(Sterepus(Sam) & Sterpus(Sam))", "all x.(Sam(x) -> Sterpus(x))", "Sam is sterpus.", "(Sam,sterpus)", "all x.(Sam(x) -> Sterpus(x))", "(Sterepus(sam) & Sterpus(sam))", "all x.(Sterepus(x) -> Sam(x))", "all x.(Sam(x) -> Sterepus(x))", "all x.(Sam(x) -> Sterpus(x))", "All x.(Sam(x) -> Sterosene(x))", "all x.(Sam(x) -> Sterepus(x))"]}
{"id": "prontoqa_validation_529", "nl": "Sam is a jompus.", "fol": "jompus(Sam)", "prediction": ["all x.(Jompus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "Sam is a Jompus.", "(Jompus(Sam) & HasJimmy(Sam))", "Sam is a jompus.", "(Jompus(Sam) & HasSam(Sam,Sam))", "all x.(Jompus(x) -> Sam(x))", "all x.(Jimpus(x) -> Sam(x))", "(Jimpus(Sam) & Jompus(Sam))", "Sam is jompus.", "all x.(Sam(x) -> Jompus(x))", "(Jumpus(Sam) & HasJimmy(Sam,Sam))", "(Jompus(Sam) & Jompus(Sam))", "all x.(Jumpus(x) -> Sam(x))", "all x.(Sam(x) -> Jompus(x))", "all x.(Jompus(x) -> Sam(x))"]}
{"id": "prontoqa_validation_530", "nl": "Everything that is a zumpus, a yumpus, and a jompus is an impus and a lorpus and a numpus.", "fol": "all x. ((zumpus(x) & yumpus(x) & jompus(x)) -> (impus(x) & lorpus(x) & numpus(x)))", "prediction": ["all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x y.((Tompus(x) & Yumpus(y) & Jompus(y)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Zumpus(x) & Yumpus(x) & Jompus(x)) -> (Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x) & -Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x y z.((Tompus(x) & Yumpus(y) & Jompus(z) & Tompus(y) & Tompus(z)) -> (Impos(x) & Lopus(x) & Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x.((Zumpus(x) & Yumpus(x) & Jompus(x)) -> (Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x) & Impos(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x y z.((Tompus(x) & Yumpus(y) & Jompus(z) & Tompus(x) & Tompus(y) & Tompus(z) & Tompus(y)) -> (Impos(x) & Lopus(x) & Numpus(x)))", "(all x.((Zumpus(x) | Yumpus(x) | Jompus(x))) -> IsImpos(x)) & all y.((Lorpus(y) & Numpus(y)) -> IsImpos(y)))", "(all x.((Tompus(x) | Yumpus(x) | Jompus(x))) -> Is(x,Is(x,IsLorpus) & Is(x,IsNumpus)))", "(all x.((Tompus(x) | Yumpus(x) | Jompus(x))) -> Impossible(x)) & all y.((Lorpus(y) & Numpus(y)) -> Impossible(y)))", "all x y.((Tompus(x) & Yumpus(x) & Jompus(y)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & -Lorpus(x) & -Numpus(x)))", "all x.((Tompus(x) | Yumpus(x) | Jompus(x)) -> (Impos(x) & Lopus(x) & Numpus(x)))", "all x.((Zumpus(x) & Yumpus(x) & Jompus(x)) -> (Impos(x) & Lower(x) & Numpus(x)))"]}
{"id": "prontoqa_validation_531", "nl": "Max is a lorpus.", "fol": "lorpus(Max)", "prediction": ["all x.(Max(x) -> Lorpus(x))", "Max is a lorpus.", "(Lorpus(Max) & LivesIn(Max))", "-Lorpus(Max)", "all x.(Max(x) -> Lorpus(x))", "Max is a lorpus.", "(Lorpus(Max) & HasLorph(Max))", "all x.(Lorpus(x) -> Max(x))", "All x.(Matthew(x) -> Lorpus(x))", "Max is a lorpus.", "all x.(Max(x) -> Lorpus(x))", "(Lorpus(Max) & LivesIn(Max))", "(Lorpus(Max) -> -Lorpus(Max))", "Max is lorpus.", "all x.(Lorpus(x) -> Max(x))", "(Lorpus(Max))"]}
{"id": "prontoqa_validation_532", "nl": "Every brimpus is a tumpus and an impus and a gorpus.", "fol": "all x. (brimpus(x) -> (tumpus(x) & impus(x) & gorpus(x)))", "prediction": ["all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x y.((Brimpus(x) & Tumpus(y)) -> (Impossible(x) & Gorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Impossible(y) & Gorpus(y))))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "all x y.((Brimpus(x) & Tompus(y)) -> (Impossible(x) & Gorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & all y.(Impossible(y) & Gorpus(y))))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))", "all x.(Brumpus(x) -> (Tumpus(x) & Imperator(x) & Gorpus(x)))", "(all x.(Brimpus(x) -> Tumpus(x)) & (Impossible(x) | Gorpus(x))))", "exists x.(Brimpus(x) & Tumpus(x) & Issue(x) & Gorpus(x))", "all x.(Brimpus(x) -> (Tumpus(x) & Impossible(x) & Gorpus(x)))", "(all x.(Brumpus(x) -> Tumpus(x)) & (Impossible(x) | Gorpus(x)))", "exists x.(Brimpus(x) & Tumpus(x) & Imperator(x) & Gorpus(x))", "all x.(Brimpus(x) -> (Tumpus(x) & Issue(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_533", "nl": "Wren is a lorpus, an impus, or a yumpus.", "fol": "(lorpus(Wren) | impus(Wren) | yumpus(Wren))", "prediction": ["all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "(Lorpus,Impossible(Wren) | Yumpus(Wren))", "(all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x))))", "all x.(Wren(x) -> (Lorpus(x) | Imperative(x) | Yumpus(x)))", "all x y.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "(Lorpus,Impossible(wren) | Yumpus(wren))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "exists x.(Wren(x) & ((Lorpus(x) & -Impossible(x)) | (-Lorpus(x) & Impossible(x)))))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))", "all x y.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Imperator(x) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Impossible(x) | Yumpus(x)))", "exists x.(Wren(x) & ((Lorpus(x) & -Impossible(x)) | Yumpus(x)))", "all x.(Wren(x) -> (Lorpus(x) | Issue(x) | Yumpus(x)))"]}
{"id": "prontoqa_validation_534", "nl": "Numpuses are sterpuses, gorpuses, and vumpuses.", "fol": "all x. (numpus(x) -> (sterpus(x) & gorpus(x) & vumpus(x)))", "prediction": ["all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x y.((Numpuse(x) & Sterpuse(y)) -> (Gorpuse(y) | Vampuse(y)))", "(all x.(Numpuse(x) -> Sterpuse(x)) & all y.(Gorpuse(y) & Vampuse(y)))", "all x y z.((Numpuse(x) & Sterpuse(y) & Gorpuse(z)) -> (Sterpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "(all x.(Numpuse(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vampuse(x)))", "(all x.(Numpuse(x) -> Sterpuse(x)) & all y.(Gorpuse(y) & Vampuse(y)))", "all x.(Numpuse(x) -> (Steruse(x) | Gorpuse(x) | Vampuse(x)))", "(All x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vumpuse(x)))", "(all x.(Numpuse(x) -> Sterpuse(x)) & all y.(Gorpuse(y) -> Vampuse(y)))", "all x.(Numpus(x) -> (Sterpuse(x) | Gorpuse(x) | Vampuse(x)))", "all x.(Numpus(x) -> (Sterpuses(x) | Gorpuses(x) | Vumpuses(x)))"]}
{"id": "prontoqa_validation_535", "nl": "Sally is an impus, Sally is a jompus, and Sally is not a vumpus.", "fol": "(impus(Sally) & jompus(Sally) & -vumpus(Sally))", "prediction": ["(all x.(Sally(x) -> Is(x)) & (Jompus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & IsImpossible(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Impossible(x)) & (Sally(x) -> Jompus(x)) & (Sally(x) -> -Vumpus(x)))", "(all x y z.((Sally(x) & IsImpossible(x)) -> Jompus(x)) & ((Sally(y) & -Vumpus(z)) -> IsImpossible(y)))", "all x y z.((Sally(x) & IsImpos(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Impossible(z)))", "(all x.(Sally(x) -> Is(x)) & (Jompus(x) | -Vumpus(x))))", "exists x.(Sally(x) & IsImpossible(x) & exists y.(Jompus(y) & IsImpossible(y)) & exists z.(Vumpus(z) & IsImpossible(z))))", "(all x.(Sally(x) -> Is(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "all x y z.((Sally(x) & IsImpossible(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Impossible(z)))", "all x.(Sally(x) -> (Impossible(x) & Jompus(x) & -Vumpus(x)))", "all x y z.((Sally(x) & Impossible(x) & Jompus(y) & -Vumpus(z)) -> (Impossible(x) & Jompus(y) & -Vumpus(z)))", "(all x y z.((Sally(x) & Impossible(x)) -> Jompus(x)) & ((Sally(y) & -Vumpus(z)) -> Jompus(y)))", "all x.(Sally(x) -> (Impossible(x) | Jompus(x) | -Vumpus(x)))", "(all x.(Sally(x) -> Impossible(x)) & all y.(Sally(y) -> Jompus(y)) & all z.(Sally(z) -> -Vumpus(z))))", "(all x.(Sally(x) -> Imperium(x)) & (Jompus(x) & -Vumpus(x)))", "(all x y.(Sally(x) -> Is(x,Is(x)) & (Jompus(y) | -Vumpus(y)))"]}
{"id": "prontoqa_validation_536", "nl": "Sally is not a numpus.", "fol": "-numpus(Sally)", "prediction": ["Sally is not a Numpus.", "all x.(Sally(x) -> -Numpus(x))", "(-numpus(Sally))", "Sally -Numpus(Sally)", "Sally nm.((Sally(n) & Numpus(n))", "Sally is not a Numpus.", "-Numpus(Sally)", "all x.(Sally(x) -> -Numpus(x))", "(-numpus(Sally))", "Sally is not Numpus.", "(-Numpus(Sally))", "Sally is not a Numpus(Sally)", "all x.(Sally(x) -> -Numpus(x))", "-Numpus(Sally)", "Sally -Numpus(Sally)", "Sally is not Numpus."]}
{"id": "prontoqa_validation_537", "nl": "Everything that is a vumpus, a rompus, or a yumpus is a lempus, a zumpus, and a gorpus.", "fol": "all x. ((vumpus(x) | rompus(x) | yumpus(x)) -> (lempus(x) & zumpus(x) & gorpus(x)))", "prediction": ["all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x y.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(y) & Zumpus(y) & Gorpus(y)))", "all x.(((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x.(((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "(all x.((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "all x y.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(y) | Zumpus(y) | Gorpus(y)))", "all x.(Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vimpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yumpus(x)) -> (Lempus(x) | Zumpus(x) | Gorpus(x)))", "all x.((Vumpus(x) | Rompus(x) | Yampus(x)) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))", "(all x.((Vumpus(x) | Rompus(x) | Yumpus(x))) -> (Lempus(x) & Zumpus(x) & Gorpus(x)))"]}
{"id": "prontoqa_validation_538", "nl": "Sally is a lempus.", "fol": "lempus(Sally)", "prediction": ["all x.(Sally(x) -> Lempus(x))", "Sally is a lempus.", "all x.(Sally(x) -> Lempus(x))", "Sally is a lempus.", "Sally is Lempus.", "(Lempus(Sally) & Lempus(Sally))", "all x.(Sally(x) -> Lempus(x))", "Sally is a Lempus.", "Sally is Lempus.", "(Lempus(Sally) & Lempus(Sally))", "all x.(Sally(x) -> Lempus(x))", "Sally (Lempus)", "all x.(Lempus(x) -> Sally(x))", "Sally is a lempus.", "Sally is Lempus(Sally)", "All x.(Sally(x) -> Lempus(x))"]}
{"id": "prontoqa_validation_539", "nl": "Everything that is a grimpus or a jompus or a lempus is a tumpus, an impus, and a rompus.", "fol": "all x. ((grimpus(x) | jompus(x) | lempus(x)) -> (tumpus(x) & impus(x) & rompus(x)))", "prediction": ["all x.((Smopus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Tumpus(x) | Impossible(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Smompus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "all x.((Grimpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x y.((Smopus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(y) & Imperator(y) & Rompus(y)))", "all x.((Tumpus(x) | Imperator(x) | Rompus(x)) -> (Grimpus(x) | Jompus(x) | Lempus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x y.((Smoothpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(y) & Impossible(y) & Rompus(y)))", "(all x.((Smompus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Rumpus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Impossible(x) & Rompus(x)))", "(all x.((Grimpus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "all x.((Crupid(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) | Imperator(x) | Rompus(x)))", "all x.(Smokey(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Issue(x) & Rompus(x)))", "all x.((Gruppus(x) | Jompus(x) | Lempus(x)) -> (Tumpus(x) & Imperator(x) & Rompus(x)))", "(all x.((Grimpus(x) | Jompus(x) | Lempus(x))) -> (Tumpus(x) | Impossible(x) | Rompus(x)))"]}
{"id": "prontoqa_validation_540", "nl": "Each dumpus is a tumpus.", "fol": "all x. (dumpus(x) -> tumpus(x))", "prediction": ["all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "(all x.(Dumpus(x) -> Tumpus(x)))", "all x y.((Dumpus(x) & Tumpus(y)) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumps(x) -> Tumpus(x))", "all x y.((Dumpus(x) & Tumpus(y)) -> Has(x,y))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dumps(x) & Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dumpus(x) & Tumpus(x))", "all x.(Dumpus(x) -> Tumpus(x))", "exists x.(Dupus(x) & Tumulus(x))", "exists x.(Dumpus(x) & Tumpus(x))"]}
{"id": "prontoqa_validation_541", "nl": "Stella is a wumpus, Stella is not a tumpus, and Stella is a rompus.", "fol": "(wumpus(Stella) & -tumpus(Stella) & rompus(Stella))", "prediction": ["(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)))", "all x y z.((Stella(x) & Wumpus(x) & Stella(y) & Rompus(z)) -> (-Tumpus(y) & -Wumpus(y) & Rompus(z)))", "(all x.(Wumpus(x) -> Stella)) & (-Tumpus(x) -> Stella)) & (Rompus(x) -> Stella)))", "(all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> Wumpus(x)) & ((Wumpus(y) & -Tumpus(y)) -> Rompus(y)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))", "all x y z.((Wumpus(x) & Stella(y) & Tomb(z)) -> (Wumpus(x) & -Tumpus(y) & Rompus(z)))", "(all x y z.((Stella(x) & Wumpus(y)) -> Wumpus(x)) & ((Stella(z) & -Tumpus(z)) -> Rompus(z)))", "all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> (Wumpus(x) & -Tumpus(y) & Rompus(z)))", "all x y z.((Stella(x) & Wumpus(x) & Stella(y) & Tompus(z)) -> (-Tumpus(y) & Rompus(z)))", "all x.(Wumpus(x) & -Tumpus(x) & Rompus(x))", "(all x.(Wumpus(x) -> Stella(x)) & (-Tumpus(x) -> Stella(x)) & (Rompus(x) -> Stella(x)))", "all x.(Stella(x) -> (Wumpus(x) & -Tumpus(x) & Rompus(x)))", "(all x y z.((Wumpus(x) & Stella(y) & Tumpus(z)) -> Wumpus(x)) & ((Wumpus(y) & -Tumpus(y)) -> Rompus(y)))", "all x y z.(Wumpus(x) & Wumpus(y) & -Tumpus(z) & Rompus(z))", "(all x.(Wumpus(x) & -Tumpus(x)) & all y.(Rompus(y) & -Wumpus(y)))", "(all x.(Stella(x) -> Wumpus(x)) & (Stella(x) -> -Tumpus(x)) & (Stella(x) -> Rompus(x)))"]}
{"id": "prontoqa_validation_542", "nl": "Stella is a yumpus, Stella is not a dumpus, or Stella is a brimpus.", "fol": "(yumpus(Stella) | -dumpus(Stella) | brimpus(Stella))", "prediction": ["(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "all x y.((Stella(x) & Yumpus(x)) | (-Dumpus(y) | Brimpus(y))))", "(all x.(Stella(x) -> Yumpus(x)) & (Stella(x) -> -Dumpus(x)) | (Stella(x) -> Brimpus(x))))", "all x y z.((Stella(x) & Yumpus(y) & (Stella(z) | -Dumpus(z))) -> (Yumpus(x) | Brimpus(z))))", "all x y.((Stella(x) & (Yumpus(x) | -Dumpus(x) | Brimpus(y))) -> (Yumpus(x) | -Dumpus(x) | -Dumpus(y)))", "(all x.(Stella(x) -> Yampus(x)) | (-Stella(x) & Dumpus(x)) | (-Stella(x) & Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "(yumpus) | (-dumpus(y) | Brimpus(y))))", "(all x.(Yumpus(x) | -Dumpus(x)) | Brimpus(x)))", "exists x.(Yumpus(x) | (-Dumpus(x) | Brimpus(x)))", "(all x.(Stella(x) -> Yumpus(x)) | (-Stella(x) & Dumpus(x))) | (-Stella(x) & Brimpus(x))))", "all x.(Stella(x) -> (Yumpus(x) | -Dumpus(x) | Brimpus(x)))", "exists x.(Yumpus(x) | (-Dumpus(x) | Brimpus(x)))", "(all x.(Stella(x) -> Yampus(x)) | (-Dumpus(x) | Brimpus(x))))", "exists x.(Yumpus(x) | (-Dumpus(x) | Brimpus(x)))"]}
{"id": "prontoqa_validation_543", "nl": "Every shumpus is a zumpus.", "fol": "all x. (shumpus(x) -> zumpus(x))", "prediction": ["all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x y.((Shumpus(x) & Zumpus(y)) -> Has(x,y))", "(all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x y.((Shumpus(x) & Zumpus(y)) -> HasShumpus(x,y))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "exists x.(shumpus(x) & Toshpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "all x.(Shumpus(x) -> Zumpus(x))", "exists x.(Shumpus(x) & Zurpus(x))"]}
{"id": "prontoqa_validation_544", "nl": "Sterpuses are vumpuses.", "fol": "all x. (sterpus(x) -> vumpus(x))", "prediction": ["all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vampus(x))", "all x y.((Sterpuse(x) & Vampus(y)) -> Vampus(x))", "(Vumpus(sterpuses)", "all x.(Sterpus(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vampuse(x))", "all x y.((Sterpuse(x) & Vampus(y)) -> Vampus(x))", "all x.(Stupid(x) -> Vampuse(x))", "all x.(Sterpus(x) -> Vulpuse(x))", "all x.(Sterpuse(x) -> Vampuse(x))", "(all x.(Sterpus(x) -> Vampus(x)))", "(Vampus(sterpuses)", "all x.(Sterpuse(x) -> Vampuse(x))", "all x.(Stumpus(x) -> Vulpus(x))", "All x.(Strerpuse(x) -> Vulpus(x))", "all x.(Stumpus(x) -> Vampus(x))"]}
{"id": "prontoqa_validation_545", "nl": "Every lorpus is a brimpus.", "fol": "all x. (lorpus(x) -> brimpus(x))", "prediction": ["all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x y.((Lorpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Brimpus(x))", "(all x.(Lorpus(x) -> Brimpus(x)))", "all x y.((Lorpus(x) & Brimpus(y)) -> Has(x,y))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorph(x) -> Brimpus(x))", "exists x.(lorpus(x) & Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "exists x.(Lorph(x) & Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Lorpus(x) -> Brimpus(x))", "all x.(Larp(x) -> Brimpus(x))", "exists x.(Lorpus(x) & Brumpus(x))"]}
{"id": "prontoqa_validation_546", "nl": "Each grimpus is not a zumpus.", "fol": "all x. (grimpus(x) -> -zumpus(x))", "prediction": ["all x.(Grimpus(x) -> -Zumpus(x))", "(-Zumpus(z) & Grimpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "(-Zumpus(z) & Grimpus(w))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Gruppus(x) -> -Zumpus(x))", "all x y.((Grimpus(x) & Grimpus(y) & -Zumpus(x)) -> -Grimpus(x))", "(-Zumpus(z) -> Grimpus(x))", "all x.(Grimpus(x) -> -Tompus(x))", "all x.(Sgrimpus(x) -> -Zumpus(x))", "exists x.(Grip(x) & -Zumpus(x))", "all x.(Grimpus(x) -> -Zumpus(x))", "all x.(Gruppus(x) -> -Zumpus(x))", "all x.(Grimpus(x) -> -Tompus(x))", "all x.(Grampus(x) -> -Zumpus(x))", "exists x.(Grimpus(x) & -Zumpus(x))"]}
{"id": "prontoqa_validation_547", "nl": "Polly is a gorpus and Polly is a jompus and Polly is not a brimpus.", "fol": "(gorpus(Polly) & jompus(Polly) & -brimpus(Polly))", "prediction": ["all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x)))", "(all x y z.((Polly(x) & Gorpus(x)) -> Polly(y)) & ((Polly(z) & Jompus(z)) -> Polly(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & (Polly(x) -> -Brimpus(x)))", "all x y.((Polly(x) & Gorpus(x) & Jompus(y)) -> (-Brimpus(x)))", "(all x y.(Polly(x) -> Gorpus(x)) & (Polly(y) -> Jompus(y)) & (Polly(y) -> -Brimpus(y)))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "all x.(Polly(x) -> (Gorpus(x) & Jompus(x) & -Brimpus(x)))", "exists x.(Polly(x) & Gorpus(x) & Jompus(x) & -Brimpus(x))", "(all x.(Polly(x) -> Gorpus(x)) & (Polly(x) -> Jompus(x)) & -Brimpus(x)))", "(all x y z.(Polly(x) -> Gorpus(x)) & (Polly(y) -> Jompus(y)) & (Polly(z) -> -Brimpus(z))))", "all x y z.((Polly(x) & Gorpus(x) & Jompus(y) & Brimpus(z)) -> (Gorpus(x) & Jompus(y) & -Brimpus(z)))", "all x y.((Polly(x) & Gorpus(x) & Jompus(y)) -> (Gorpus(x) & -Brimpus(y)))", "(all x.(Polly(x) -> Gorpus(x)) & all y.(Polly(y) -> Jompus(y)) & all z.(Polly(z) -> -Brimpus(z))))"]}
{"id": "prontoqa_validation_548", "nl": "Polly is a rompus and a wumpus and a sterpus.", "fol": "(rompus(Polly) & wumpus(Polly) & sterpus(Polly))", "prediction": ["all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(y) & Sterpus(z)))", "(Rompus(Polly) & Wumpus(Polly) & Sterpus(Polly))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x y.((Polly(x) & Rompus(y)) -> (Wumpus(x) & Sterpus(x)))", "(all x.(Polly(x) -> Rompus(x)) & (Wumpus(x) | Sterpus(x))))", "all x y z.((Polly(x) & Rompus(y) & Wumpus(z)) -> (Rompus(x) & Wumpus(z) & Sterpus(z)))", "(all x.(Polly(x) -> Rompus(x)) & all y.(Wumpus(y) & -Sterpus(y))))", "(Rompus(Polly) | Wumpus(Polly) | Sterpus(Polly))", "exists x.(Polly(x) & Rompus(x) & Wumpus(x) & Sterpus(x))", "all x.(Polly(x) -> (Rompus(x) & Wumpus(x) & Sterpus(x)))", "all x y.((Polly(x) & Rompus(y)) -> (Wumpus(x) & Sterpus(x)))", "exists x.(Polly(x) & Rompus(x) & Wumpus(x) & Sterpus(x))"]}
{"id": "prontoqa_validation_549", "nl": "Polly is not a shumpus, Polly is not a lorpus, and Polly is a vumpus.", "fol": "(-shumpus(Polly) & -lorpus(Polly) & vumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Lorpus(z))) -> Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z)))", "all x y z.((Polly(x) & Humpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) & -Lorpus(y) & -Vumpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Lorpus(z))) -> Vumpus(z)))", "all x y z.((Polly(x) & Shumpus(y) & Lorpus(z)) -> (-Shumpus(x) | (-Lorpus(x) & Vumpus(x))))", "all x.(Polly(x) -> (-Shumpus(x) & -Lorpus(x) & -Vumpus(x)))", "(all x y z.((Polly(x) & Humpus(y)) -> -Shumpus(x)) & ((Polly(z) & Lorpus(z))) -> -Lorpus(z)) & ((Polly(z) & Vumpus(z)) -> -Shumpus(z)))", "all x y z.((Polly(x) & Humpus(y) & Lorpus(z) & Vumpus(x)) -> (-Shumpus(x) | -Lorpus(y) | -Lorpus(z)))", "(all x.(Polly(x) -> -Shumpus(x)) & (Polly(x) -> -Lorpus(x)) & (Polly(x) -> Vumpus(x)))", "all x.(Polly(x) -> (-Shumpus(x) & -Lorpus(x) & -Vumpus(x)))", "(all x.(Polly(x) -> -Shumpus(x)) & all y.(Polly(y) -> -Lorpus(y))) & all z.(Polly(z) -> Vumpus(z)))"]}
{"id": "prontoqa_validation_550", "nl": "Every jompus is a yumpus.", "fol": "all x. (jompus(x) -> yumpus(x))", "prediction": ["all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x y.((Jompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Jompus(x) -> Yumpus(x))", "(all x.(Jompus(x) -> Yumpus(x)))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x y.((Jompus(x) & Yumpus(y)) -> Has(x,y))", "all x.(Jimpus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jompus(x) -> Yumpus(x))", "all x.(Jumpus(x) -> Yampus(x))", "all x.(Jompus(x) -> Yampus(x))", "exists x.(jompus(x) & Yumpus(x))", "exists x.(Jompus(x) & Yampus(x))", "exists x.(Jimpus(x) & Yumpa(x))"]}
{"id": "prontoqa_validation_551", "nl": "Polly is not a yumpus, Polly is a lempus, and Polly is a zumpus.", "fol": "(-yumpus(Polly) & lempus(Polly) & zumpus(Polly))", "prediction": ["(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "(all x y z.((Polly(x) & Yumpus(y)) -> -Yumpus(x)) & ((Polly(z) & Lempus(z)) -> Zumpus(z)))", "all x y z.((Polly(x) & Lempus(y) & Zumpus(z)) -> (-Yumpus(x) & Lempus(y) & Zumpus(z)))", "exists x.(Polly(x) & -Yumpus(x) & Lempus(x) & Zumpus(x))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "all x y z.((Polly(x) & Yampus(y) & Lempus(z)) -> (-Yumpus(x) & Lempus(x) & Zumpus(x)))", "(all x.(Polly(x) -> -Yumpus(x)) & (Polly(x) -> Lempus(x)) & (Polly(x) -> Zumpus(x)))", "(all x y z.((Polly(x) & Yumpus(y)) -> -Yumpus(x)) & ((Polly(z) & Lempus(z)) -> Zumpus(z)))", "all x y.((Polly(x) & Lempus(y) & Zumpus(x)) -> (-Yumpus(x) & Lempus(y) & Zumpus(y)))", "all x y z.((Polly(x) & Yampus(y) & Lempus(z)) -> (-Yumpus(x) | (-Yumpus(x) & Lempus(y) & Zumpus(z))))", "(all x.(Polly(x) -> -Yumpus(x)) & all y.(Polly(y) -> Lempus(y)) & all z.(Polly(z) -> Zumpus(z))))", "all x y z.((Polly(x) & Yumpus(y) & Lempus(z)) -> (-Yumpus(x) | Zumpus(x)))", "(all x y z.((Polly(x) & Yumpus(y)) -> -Yumpus(x)) & ((Polly(z) & Lempus(z)) -> Zumpus(z)))"]}
{"id": "prontoqa_validation_552", "nl": "Polly is a dumpus or Polly is a lorpus or Polly is not a jompus.", "fol": "(dumpus(Polly) | lorpus(Polly) | -jompus(Polly))", "prediction": ["all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "((Polly(Polly) & Dumpus(Polly)) | (Polly(Polly) & Lorpus(Poly)) | (Poly(Poly) & -Jompus(Poly))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jompus(y))))", "(all x.(Polly(x) -> Dumpus(x)) | (Polly(x) -> Lorpus(x)) | (Polly(x) -> -Jompus(x))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jompus(x))) -> Polly(x))", "((Polly(Polly) & Dumpus(Polly)) | (Polly(Polly) & Lorpus(Poly)) | (Poly(Polly) & -Jompus(Poly))))", "(exists x.(Polly(x) & Dumpus(x)) | exists y.(Polly(y) & Lorpus(y))))", "(all x.(Ploy(x) -> Dumpus(x)) | (Lorpus(x) | -Jompus(x))))", "exists x.(Polly(x) & ((Dumpus(x) & Polly(x)) | (Lorpus(x) & -Jompus(x)))))", "((Polly(Poly) & Dumpus(Poly)) | (Poly(Poly) & Lorpus(Poly)) | (Poly(Poly) & -Jimpus(Poly))))", "all x.((Polly(x) & (Dumpus(x) | Lorpus(x) | -Jumpus(x))) -> Polly(x))", "all x.(Polly(x) -> ((Dumpus(x) | Lorpus(x) | -Jompus(x))))", "all x y.((Polly(x) & Dumpus(x)) | (Polly(y) & Lorpus(y)) | (Polly(y) & -Jompus(y))))", "((Poly(poly) & Dumpus(poly)) | (Poly(poly) & Lorpus(poly)) | (Poly(poly) & -Jompus(poly))))", "exists x.(Polly(x) & ((Dumpus(x) | Lorpus(x)) | -Jompus(x))))"]}
{"id": "prontoqa_validation_553", "nl": "Everything that is a shumpus and a yumpus and a numpus is a dumpus.", "fol": "all x. ((shumpus(x) & yumpus(x) & numpus(x)) -> dumpus(x))", "prediction": ["all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Numpus(y)) -> Dumpus(x))", "all x y z.((Shumpus(x) & Yumpus(y) & Numpus(z) & Is(x,y)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "(all x.((Shumpus(x) & Yumpus(x)) -> Dumpus(x)) & all y.((Yumpus(y) & Numpus(y)) -> Dumpus(y)))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "(all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "(all x.((Shumpus(x) & Yumpus(x)) -> Dumpus(x)) & all y.((Yumpus(y) & Numpus(y)) -> Dumpus(y)))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x y.((Shumpus(x) & Yumpus(y) & Numpus(y)) -> Dumpus(x))", "all x.(((Shumpus(x) | Yampus(x) | Numpus(x))) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) | Yumpus(x) | Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))", "all x.((Shumpus(x) & Yumpus(x) & Numpus(x)) -> Dumpus(x))"]}
{"id": "prontoqa_validation_554", "nl": "Stella is a shumpus.", "fol": "shumpus(Stella)", "prediction": ["Stella is a shumpus.", "all x.(Shumpus(x) -> Stella(x))", "(Shumpus(Stella) & HasShump(Stella))", "Stella is a shumpus.", "all x.(Shumpus(x) -> Stella(x))", "(Shumpus(Stella))", "Stella is a shumpus.", "(Shumpus(Stella) & Shumpus(Stella))", "Stella (Shumpus)", "all x.(Shumpus(x) -> Stella(x))", "Stella is Shumpus(Stilla)", "Stella is a shumpus.", "Stella is shumpus.", "all x.(Shumpus(x) -> Stella(x))", "Stella is a shumpus.", "(Shumpus(Stella))"]}
{"id": "prontoqa_validation_555", "nl": "Stella is a yumpus.", "fol": "yumpus(Stella)", "prediction": ["Stella is yumpus.", "(Yumpus(Stella) & HasYump(Stella))", "all x.(Stella(x) -> Yumpus(x))", "Stella is a yumpus.", "all x.(Yumpus(x) -> Stella(x))", "Stella is yumpus.", "(Yumpus(Stella))", "all x.(Yumpus(x) -> Stella(x))", "(Yumpus(Stella) & HasYump(Stella))", "Stella is a yumpus.", "Stella (yumpus)", "Stella is yumpus.", "Stella is Yampus(Stella)", "all x.(Yumpus(x) -> Stella(x))", "(Yumpus(Stella))", "Stella is yumpus."]}
{"id": "prontoqa_validation_556", "nl": "Stella is a grimpus or a dumpus or a gorpus.", "fol": "(grimpus(Stella) | dumpus(Stella) | gorpus(Stella))", "prediction": ["all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Stella(s) & (Grimpus(s) | Dumpus(s) | Gorpus(s)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Stella) -> (Grimpus(Stella) | Dumpus(Stella) | Gorpus(Stella)))", "(Grimpus(Stella) | Dumpus(Stella) | Gorpus(Stella)))", "all x y.((Stella(x) & Grimpus(y)) | (Dumpus(y) | Gorpus(y))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "(Gorpus,Grimpus,Dumpus,Gorpus)", "(Stella isGrimpus(Stella) | (Dumpus(Stella) | Gorpus(Stella))))", "all x.(Stella(x) -> (Sgrimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "exists x.(Stella(x) & ((Grimpus(x) | Dumpus(x) | Gorpus(x))))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))", "exists x.(Stella(x) & ((Grimpus(x) | Dumpus(x)) | Gorpus(x))))", "exists x.(Stella(x) & (Sgrimpus(x) | Dumpus(x) | Gorpus(x)))", "all x.(Stella(x) -> (Grimpus(x) | Dumpus(x) | Gorpus(x)))"]}
{"id": "prontoqa_validation_557", "nl": "Everything that is a yumpus, a lempus, and a sterpus is a gorpus.", "fol": "all x. ((yumpus(x) & lempus(x) & sterpus(x)) -> gorpus(x))", "prediction": ["all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x y.((Yumpus(x) & Lempus(y) & Sterpus(y)) -> Gorpus(x))", "all x y z.((Yumpus(x) & Lempus(y) & Sterpus(z) & Has(x,y) & Has(x,z)) -> Gorpus(x))", "(all x.((Yumpus(x) | Lempus(x) | Sterpus(x))) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.(Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "(all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x y.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(y))", "all x.((Yumpus(x) | Lempus(x) | Steroid(x)) -> Gorpus(x))", "all x.((Yumpus(x) & Lempus(x) & Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterpus(x)) -> Gorpus(x))", "all x.((Yumpus(x) | Lempus(x) | Sterepus(x)) -> Gorpus(x))"]}
{"id": "prontoqa_validation_558", "nl": "Max is a shumpus, Max is not a gorpus, and Max is a vumpus.", "fol": "(shumpus(Max) & -gorpus(Max) & vumpus(Max))", "prediction": ["(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(y) & Vumpus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> Shumpus(x)) & ((Max(z) & -Gorpus(z))) -> Vumpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (Max(x) -> -Gorpus(x)) & (Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & -Gorpus(x) & -Vumpus(x)))", "all x.(Max(x) -> (Shumpus(x) & -Gorpus(x) & Vumpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Vumpus(x)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(x) & Vumpus(x)))", "(all x y z.((Max(x) & Humpus(y)) -> Shumpus(x)) & ((Max(z) & -Gorpus(z)) -> Vumpus(z)))", "(all x.(Max(x) -> Humpus(x)) & (-Max(x) -> Gorpus(x)) & (Max(x) -> Vumpus(x)))", "(all x.(Max(x) -> Shumpus(x)) & (-Max(x) -> Gorpus(x)) & (-Max(x) -> Vumpus(x)))", "all x.(Max(x) -> (Shumpus(x) | -Gorpus(x) | Vumpus(x)))", "all x y z.((Max(x) & Shumpus(y) & Gorpus(z)) -> (-Shumpus(x) & -Gorpus(y) & Vumpus(z)))", "(all x y z.((Max(x) & Humpus(y)) -> (Shumpus(x) | -Gorpus(y)) | (Vumpus(z) & -Shumpus(z))))", "(all x.(Max(x) -> Humpus(x)) & all y.(Max(y) -> -Gorpus(y)) & all z.(Max(z) -> Vumpus(z)))", "all x y z.((Max(x) & Humpus(y) & Gorpus(z)) -> (Shumpus(x) & -Gorpus(y) & Vumpus(z)))"]}
{"id": "prontoqa_validation_559", "nl": "Each wumpus is a grimpus, a gorpus, and a sterpus.", "fol": "all x. (wumpus(x) -> (grimpus(x) & gorpus(x) & sterpus(x)))", "prediction": ["all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(z))))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x y z.((Wumpus(x) & Grimpus(y) & Gorpus(z)) -> (Sterpus(x) & Grimpus(y) & Gorpus(z) & Sterpus(z)))", "all x y.((Wumpus(x) & Grimpus(y)) -> (Gorpus(x) & Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterepus(z))))", "all x.(Wumpus(x) -> (Grimpus(x) & Gorpus(x) & Sterpus(x)))", "all x.(Wumpus(x) -> (Smokey(x) | Gorpus(x) | Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterepus(z) & -Grimpus(y)) -> Sterpus(z)))", "(all x.(Wumpus(x) -> Grimpus(x)) & (Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "exists x.(Wumpus(x) & Grimpus(x) & Gorpus(x) & Sterpus(x))", "all x.(Wumpus(x) -> (Grimpus(x) | Gorpus(x) | Sterpus(x)))", "all x.(Wumpus(x) -> (Smaller(x) & Gorpus(x) & Sterpus(x)))", "(all x.(Wumpus(x) -> Grimpus(x)) & all y.(Gorpus(y) & all z.(Sterpus(z)) -> Sterpus(z)))", "exists x.(Wumpus(x) & Grimpus(x) & Gorpus(x) & Sterpus(x))"]}
{"id": "prontoqa_validation_560", "nl": "Max is a lempus, an impus, or a sterpus.", "fol": "(lempus(Max) | impus(Max) | sterpus(Max))", "prediction": ["all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(exists x.(Max(x) & Lempus(x)) | exists y.(Impossible(y) & -Impossible(y))) | exists z.(Sterpus(z) & -Impossible(z))))", "(all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x))))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(Limpus(max) | Impossible(max) | Sterpus(max))", "all x.(Max(x) -> (Lempus(x) | Imperator(x) | Sterpus(x)))", "(exists x.(Max(x) & Lempus(x)) | exists y.(Impossible(y) & -Impossible(y))) | exists z.(Sterpus(z) & -Impossible(z))))", "all x.(Max(x) -> (Lempus(x) | Issue(x) | Sterpus(x)))", "(all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "(all x.(Max(x) -> Lempus(x)) | (Max(x) -> Impossible(x) | Max(x))))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperempt(x) | Sterpus(x)))", "exists x.(M Max(x) & (Lempus(x) | Imperator(x) | Steroid(x)))", "all x.(Max(x) -> (Limpus(x) | Issue(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Imperator(x) | Sterpus(x)))", "all x.(Max(x) -> (Lempus(x) | Impossible(x) | Sterpus(x)))"]}
{"id": "prontoqa_validation_561", "nl": "Everything that is a tumpus or a gorpus or a lorpus is a rompus, a zumpus, and a lempus.", "fol": "all x. ((tumpus(x) | gorpus(x) | lorpus(x)) -> (rompus(x) & zumpus(x) & lempus(x)))", "prediction": ["all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x y.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(y) & Zumpus(y) & Lempus(y)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.(((Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x y.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(y) | Zumpus(y) | Lempus(y)))", "(all x.((Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) | Zumpus(x) | Lampus(x)))", "all x.((Rompus(x) | Zumpus(x) | Lempus(x)) -> (Tumpus(x) | Gorpus(x) | Lorpus(x)))", "all x y.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(y) & Zumpus(y) & Lempus(y)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "(all x.((Tumpus(x) | Gorpus(x) | Lorpus(x))) -> (Rompus(x) & Zumpus(x) & Lempus(x)))", "all x.((Tompus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.((Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) | Zumpus(x) | Lempus(x)))", "all x.(Tumpus(x) | Gorpus(x) | Lorpus(x)) -> (Rompus(x) & Zumpus(x) & Lempus(x)))"]}
{"id": "prontoqa_validation_562", "nl": "Everything that is a jompus and a rompus and a tumpus is a brimpus, a gorpus, and an impus.", "fol": "all x. ((jompus(x) & rompus(x) & tumpus(x)) -> (brimpus(x) & gorpus(x) & impus(x)))", "prediction": ["all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x y.((Jompus(x) & Rompus(y) & Tumpus(y)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x y z.((Jompus(x) & Rompus(y) & Tumpus(z) & Is(x,y)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "(all x.((Jompus(x) & -Rompus(x) & -Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x y z.((Jompus(x) & Rompus(y) & Tumpus(z) & Is(x,y,z)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x y.((Jompus(x) & Rompus(y) & Tumpus(y)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "(all x.((Jompus(x) & -Rompus(x) & -Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Impossible(x)))", "all x.((Brimpus(x) | Gorpus(x) | Imperator(x)) -> (Jompus(x) & Rompus(x) & Tumpus(x)))", "all x.((Jimpus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) & Gorpus(x) & Imperator(x)))", "all x.((Jompus(x) | Rompus(x) | Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "all x.((Jompus(x) & Rompus(x) & Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))", "(all x.((Jompus(x) & -Rompus(x) & -Tumpus(x)) -> (Brimpus(x) | Gorpus(x) | Imperator(x)))"]}
{"id": "prontoqa_validation_563", "nl": "Alex is a rompus.", "fol": "rompus(Alex)", "prediction": ["all x.(Alex(x) -> Rompus(x))", "Alex is rompus.", "(Rompus(Alex) & -Rompus(Alex))", "Alex is a rompus.", "all x.(Alex(x) -> Rompus(x))", "(Rompus(Alex) & Has(Alex))", "Alex is rompus.", "all x.(Alex(x) -> Rompus(x))", "all x.(Rompus(x) -> Alex(x))", "Alex is a rompus.", "all x.(Alex(x) -> Rompus(x))", "all x.(Rompus(x) -> Alex(x))", "Alex is rompus.", "all x.(Alex(x) -> Rompus(x))", "All x.(Alex(x) -> Rupus(x))", "All x.(Alex(x) -> Rompus(x))"]}
{"id": "prontoqa_validation_564", "nl": "Everything that is a zumpus and a tumpus and a wumpus is a shumpus, a rompus, and a dumpus.", "fol": "all x. ((zumpus(x) & tumpus(x) & wumpus(x)) -> (shumpus(x) & rompus(x) & dumpus(x)))", "prediction": ["all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x y.((Tompus(x) & Tumpus(y) & Wumpus(y)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x y z.((Tompus(x) & Tumpus(y) & Wumpus(z) & Tompus(y) & Tompus(z)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "(all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "(all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x y.((Tompus(x) & Tumpus(y) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "(all x.((Tompus(x) & Toumpus(x) & Toumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Tompus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))", "all x.((Tompus(x) | Tumpus(x) | Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) & Rompus(x) & Dumpus(x)))", "all x.((Zumpus(x) & Tumpus(x) & Wumpus(x)) -> (Shumpus(x) | Rompus(x) | Dumpus(x)))"]}
